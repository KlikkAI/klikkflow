import type { CredentialRequirement } from '@/core/nodes/types';

export const mlPipelineCredentials: CredentialRequirement[] = [
  {
    name: 'mlflow',
    displayName: 'MLflow Tracking Server',
    required: false,
    documentationUrl: 'https://mlflow.org/docs/latest/tracking.html',
    properties: [
      {
        displayName: 'Tracking URI',
        name: 'trackingUri',
        type: 'string',
        default: 'http://localhost:5000',
        required: true,
        description: 'MLflow tracking server URI',
      },
      {
        displayName: 'Username',
        name: 'username',
        type: 'string',
        default: '',
        required: false,
        description: 'Username for MLflow server (if authentication enabled)',
      },
      {
        displayName: 'Password',
        name: 'password',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'Password for MLflow server',
      },
      {
        displayName: 'Token',
        name: 'token',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'API token for MLflow server',
      },
    ],
  },
  {
    name: 'wandb',
    displayName: 'Weights & Biases',
    required: false,
    documentationUrl: 'https://docs.wandb.ai/',
    properties: [
      {
        displayName: 'API Key',
        name: 'apiKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'Weights & Biases API key',
      },
      {
        displayName: 'Entity',
        name: 'entity',
        type: 'string',
        default: '',
        required: false,
        description: 'W&B entity (username or team name)',
      },
      {
        displayName: 'Project',
        name: 'project',
        type: 'string',
        default: '',
        required: false,
        description: 'W&B project name',
      },
    ],
  },
  {
    name: 'kubernetes',
    displayName: 'Kubernetes Cluster',
    required: false,
    documentationUrl:
      'https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/',
    properties: [
      {
        displayName: 'Kubeconfig',
        name: 'kubeconfig',
        type: 'string',
        typeOptions: {
          multiline: true,
        },
        default: '',
        required: true,
        description: 'Kubernetes cluster configuration (kubeconfig content)',
      },
      {
        displayName: 'Namespace',
        name: 'namespace',
        type: 'string',
        default: 'default',
        required: false,
        description: 'Kubernetes namespace for deployments',
      },
      {
        displayName: 'Service Account',
        name: 'serviceAccount',
        type: 'string',
        default: '',
        required: false,
        description: 'Service account for Kubernetes operations',
      },
    ],
  },
  {
    name: 'docker_registry',
    displayName: 'Docker Registry',
    required: false,
    documentationUrl: 'https://docs.docker.com/registry/',
    properties: [
      {
        displayName: 'Registry URL',
        name: 'registryUrl',
        type: 'string',
        default: 'docker.io',
        required: true,
        description: 'Docker registry URL',
      },
      {
        displayName: 'Username',
        name: 'username',
        type: 'string',
        default: '',
        required: true,
        description: 'Docker registry username',
      },
      {
        displayName: 'Password',
        name: 'password',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'Docker registry password or access token',
      },
      {
        displayName: 'Repository Prefix',
        name: 'repositoryPrefix',
        type: 'string',
        default: '',
        required: false,
        description: 'Repository prefix for Docker images',
      },
    ],
  },
  {
    name: 'prometheus',
    displayName: 'Prometheus Monitoring',
    required: false,
    documentationUrl: 'https://prometheus.io/docs/',
    properties: [
      {
        displayName: 'Prometheus URL',
        name: 'prometheusUrl',
        type: 'string',
        default: 'http://localhost:9090',
        required: true,
        description: 'Prometheus server URL',
      },
      {
        displayName: 'Username',
        name: 'username',
        type: 'string',
        default: '',
        required: false,
        description: 'Username for Prometheus (if authentication enabled)',
      },
      {
        displayName: 'Password',
        name: 'password',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'Password for Prometheus',
      },
      {
        displayName: 'Grafana URL',
        name: 'grafanaUrl',
        type: 'string',
        default: 'http://localhost:3000',
        required: false,
        description: 'Grafana dashboard URL',
      },
      {
        displayName: 'Grafana API Key',
        name: 'grafanaApiKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'Grafana API key for dashboard management',
      },
    ],
  },
  {
    name: 'feast',
    displayName: 'Feast Feature Store',
    required: false,
    documentationUrl: 'https://docs.feast.dev/',
    properties: [
      {
        displayName: 'Feature Store URL',
        name: 'featureStoreUrl',
        type: 'string',
        default: '',
        required: true,
        description: 'Feast feature store URL',
      },
      {
        displayName: 'Repository Config',
        name: 'repositoryConfig',
        type: 'string',
        typeOptions: {
          multiline: true,
        },
        default: '',
        required: false,
        description: 'Feast repository configuration (YAML content)',
      },
      {
        displayName: 'Project',
        name: 'project',
        type: 'string',
        default: 'default',
        required: false,
        description: 'Feast project name',
      },
    ],
  },
  {
    name: 'datadog',
    displayName: 'DataDog Monitoring',
    required: false,
    documentationUrl: 'https://docs.datadoghq.com/',
    properties: [
      {
        displayName: 'API Key',
        name: 'apiKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'DataDog API key',
      },
      {
        displayName: 'App Key',
        name: 'appKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'DataDog application key',
      },
      {
        displayName: 'Site',
        name: 'site',
        type: 'select',
        default: 'datadoghq.com',
        required: true,
        options: [
          { name: 'US1 (datadoghq.com)', value: 'datadoghq.com' },
          { name: 'US3 (us3.datadoghq.com)', value: 'us3.datadoghq.com' },
          { name: 'US5 (us5.datadoghq.com)', value: 'us5.datadoghq.com' },
          { name: 'EU1 (datadoghq.eu)', value: 'datadoghq.eu' },
          { name: 'AP1 (ap1.datadoghq.com)', value: 'ap1.datadoghq.com' },
          { name: 'GOV (ddog-gov.com)', value: 'ddog-gov.com' },
        ],
        description: 'DataDog site region',
      },
    ],
  },
  {
    name: 'slack',
    displayName: 'Slack Notifications',
    required: false,
    documentationUrl: 'https://api.slack.com/',
    properties: [
      {
        displayName: 'Webhook URL',
        name: 'webhookUrl',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'Slack webhook URL for notifications',
      },
      {
        displayName: 'Channel',
        name: 'channel',
        type: 'string',
        default: '#general',
        required: false,
        description: 'Default Slack channel for notifications',
      },
      {
        displayName: 'Bot Token',
        name: 'botToken',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'Slack bot token for advanced features',
      },
    ],
  },
  {
    name: 'pagerduty',
    displayName: 'PagerDuty Alerts',
    required: false,
    documentationUrl: 'https://developer.pagerduty.com/',
    properties: [
      {
        displayName: 'Integration Key',
        name: 'integrationKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: true,
        description: 'PagerDuty integration key',
      },
      {
        displayName: 'Routing Key',
        name: 'routingKey',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'PagerDuty routing key for Events API v2',
      },
      {
        displayName: 'API Token',
        name: 'apiToken',
        type: 'string',
        typeOptions: {
          password: true,
        },
        default: '',
        required: false,
        description: 'PagerDuty REST API token',
      },
    ],
  },
];
