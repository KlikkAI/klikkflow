global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@reporunner.com'
  smtp_auth_username: 'alerts@reporunner.com'
  smtp_auth_password: 'your-smtp-password'
  slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'

# Define templates for notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Routing tree for alerts
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 12h
  receiver: 'default-receiver'

  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m
      continue: true

    # Security alerts - immediate notification to security team
    - match:
        service: security
      receiver: 'security-team'
      group_wait: 0s
      repeat_interval: 10m
      continue: true

    # Database alerts - notify DBA team
    - match_re:
        service: (mongodb|postgresql|redis)
      receiver: 'database-team'
      group_wait: 30s
      repeat_interval: 30m

    # Infrastructure alerts - notify ops team
    - match:
        service: system
      receiver: 'ops-team'
      group_wait: 1m
      repeat_interval: 1h

    # Application alerts - notify dev team
    - match_re:
        service: (reporunner-backend|reporunner-frontend|reporunner-workers)
      receiver: 'dev-team'
      group_wait: 30s
      repeat_interval: 30m

    # Business alerts - notify product team
    - match:
        service: business
      receiver: 'product-team'
      group_wait: 5m
      repeat_interval: 6h

    # Container alerts - notify platform team
    - match:
        service: containers
      receiver: 'platform-team'
      group_wait: 2m
      repeat_interval: 2h

# Inhibition rules to prevent spam
inhibit_rules:
  # Inhibit any warning if the same alert is already critical
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

  # If backend is down, don't alert on high error rates
  - source_match:
      alertname: 'ReporunnerBackendDown'
    target_match_re:
      alertname: '(HighErrorRate|HighResponseTime)'
    equal: ['instance']

  # If database is down, don't alert on application issues
  - source_match_re:
      alertname: '(MongoDBDown|PostgreSQLDown|RedisDown)'
    target_match_re:
      alertname: '(ReporunnerBackendDown|WorkflowExecutionStuck)'

# Receiver definitions
receivers:
  # Default receiver - low priority alerts
  - name: 'default-receiver'
    email_configs:
      - to: 'ops@reporunner.com'
        subject: '[Reporunner] {{ .GroupLabels.alertname }} - {{ .CommonLabels.severity }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}

  # Critical alerts - multiple channels
  - name: 'critical-alerts'
    email_configs:
      - to: 'critical@reporunner.com'
        subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
        body: |
          üö® CRITICAL ALERT üö®

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}

          {{ if .Annotations.runbook_url }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
          {{ end }}

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/CRITICAL/WEBHOOK'
        channel: '#alerts-critical'
        title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}

          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        send_resolved: true

    pagerduty_configs:
      - routing_key: 'your-pagerduty-integration-key'
        description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
        severity: 'critical'
        details:
          summary: '{{ .CommonAnnotations.summary }}'
          description: '{{ .CommonAnnotations.description }}'
          num_alerts: '{{ len .Alerts }}'

  # Security team notifications
  - name: 'security-team'
    email_configs:
      - to: 'security@reporunner.com'
        subject: '[SECURITY] {{ .GroupLabels.alertname }}'
        body: |
          üîí SECURITY ALERT üîí

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SECURITY/WEBHOOK'
        channel: '#security-alerts'
        title: 'üîí Security Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          {{ end }}

  # Development team notifications
  - name: 'dev-team'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/DEV/WEBHOOK'
        channel: '#dev-alerts'
        title: '‚ö†Ô∏è Application Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}

          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        send_resolved: true

    email_configs:
      - to: 'dev@reporunner.com'
        subject: '[DEV] {{ .GroupLabels.alertname }}'

  # Database team notifications
  - name: 'database-team'
    email_configs:
      - to: 'dba@reporunner.com'
        subject: '[DATABASE] {{ .GroupLabels.alertname }}'
        body: |
          üíæ DATABASE ALERT üíæ

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          {{ end }}

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/DBA/WEBHOOK'
        channel: '#database-alerts'
        title: 'üíæ Database Alert: {{ .GroupLabels.alertname }}'

  # Operations team notifications
  - name: 'ops-team'
    email_configs:
      - to: 'ops@reporunner.com'
        subject: '[OPS] {{ .GroupLabels.alertname }}'

    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/OPS/WEBHOOK'
        channel: '#ops-alerts'
        title: 'üîß Infrastructure Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *{{ .Annotations.summary }}*
          {{ .Annotations.description }}
          {{ end }}

  # Platform team notifications
  - name: 'platform-team'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/PLATFORM/WEBHOOK'
        channel: '#platform-alerts'
        title: 'üê≥ Container Alert: {{ .GroupLabels.alertname }}'

  # Product team notifications
  - name: 'product-team'
    email_configs:
      - to: 'product@reporunner.com'
        subject: '[BUSINESS] {{ .GroupLabels.alertname }}'
        body: |
          üìä BUSINESS METRIC ALERT üìä

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}

# Time intervals for muting alerts
time_intervals:
  - name: 'business-hours'
    time_intervals:
      - times:
          - start_time: '09:00'
            end_time: '17:00'
        weekdays: ['monday:friday']
        months: ['january:december']

  - name: 'weekends'
    time_intervals:
      - weekdays: ['saturday', 'sunday']

  - name: 'maintenance-window'
    time_intervals:
      - times:
          - start_time: '02:00'
            end_time: '04:00'
        weekdays: ['sunday']

# Mute rules for scheduled maintenance
mute_time_intervals:
  - name: 'maintenance-mute'
    time_intervals: ['maintenance-window']