{
  "statistics": {
    "detectionDate": "2025-10-13T10:12:52.750Z",
    "formats": {
      "typescript": {
        "sources": {
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/communication/gmail/properties/index.ts": {
            "lines": 4,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/communication/gmail/enhanced-properties/index.ts": {
            "lines": 389,
            "tokens": 2614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/communication/gmail/enhanced-node/index.ts": {
            "lines": 4,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/actions/index.ts": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/actions/index.ts": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/communication/gmail/index.ts": {
            "lines": 6,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/nodeDefinition.ts": {
            "lines": 351,
            "tokens": 2464,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 108,
            "duplicatedTokens": 773,
            "percentage": 30.77,
            "percentageTokens": 31.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/nodeDefinition.legacy.ts": {
            "lines": 381,
            "tokens": 3127,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 152,
            "percentage": 5.25,
            "percentageTokens": 4.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/node.ts": {
            "lines": 58,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/index.ts": {
            "lines": 3,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/credentials.ts": {
            "lines": 231,
            "tokens": 1572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/nodeDefinition.ts": {
            "lines": 426,
            "tokens": 3142,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 108,
            "duplicatedTokens": 779,
            "percentage": 25.35,
            "percentageTokens": 24.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/nodeDefinition.legacy.ts": {
            "lines": 390,
            "tokens": 3116,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 158,
            "percentage": 5.13,
            "percentageTokens": 5.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/node.ts": {
            "lines": 70,
            "tokens": 470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/index.ts": {
            "lines": 3,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/credentials.ts": {
            "lines": 377,
            "tokens": 2324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/types.ts": {
            "lines": 91,
            "tokens": 674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeConfigs.ts": {
            "lines": 354,
            "tokens": 2374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/monitoring/healthcheck/domain/repositories/IHealthCheckRepository.ts": {
            "lines": 32,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/builders/SecurityHeadersBuilder.ts": {
            "lines": 174,
            "tokens": 1185,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 171,
            "percentage": 16.09,
            "percentageTokens": 14.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/builders/HSTSBuilder.ts": {
            "lines": 84,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/builders/CSPBuilder.ts": {
            "lines": 159,
            "tokens": 1098,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/rate-limit/stores/Store.ts": {
            "lines": 23,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/rate-limit/stores/RedisStore.ts": {
            "lines": 66,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/rate-limit/stores/MemoryStore.ts": {
            "lines": 69,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth/services/TokenService.ts": {
            "lines": 58,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth/services/SessionService.ts": {
            "lines": 200,
            "tokens": 1691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth/services/RoleService.ts": {
            "lines": 119,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/_template/properties.ts": {
            "lines": 65,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/_template/node.ts": {
            "lines": 63,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/_template/index.ts": {
            "lines": 23,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/_template/credentials.ts": {
            "lines": 66,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/_template/actions.ts": {
            "lines": 55,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/shared/types.ts": {
            "lines": 30,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/versioncontrol/domain/repositories/IVersionControlRepository.ts": {
            "lines": 10,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/permission/domain/repositories/IPermissionRepository.ts": {
            "lines": 10,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/validators/FileValidator.ts": {
            "lines": 29,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/validators/BasicFileValidator.ts": {
            "lines": 192,
            "tokens": 1445,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 319,
            "percentage": 23.44,
            "percentageTokens": 22.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/types/UploadedFile.ts": {
            "lines": 183,
            "tokens": 699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/types/UploadOptions.ts": {
            "lines": 161,
            "tokens": 470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/transforms/NoopTransform.ts": {
            "lines": 16,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/transforms/FileTransform.ts": {
            "lines": 11,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/storage/StorageEngine.ts": {
            "lines": 90,
            "tokens": 397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/storage/LocalStorageEngine.ts": {
            "lines": 280,
            "tokens": 2211,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 165,
            "percentage": 7.86,
            "percentageTokens": 7.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/filters/FileFilter.ts": {
            "lines": 10,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/filters/BasicFileFilter.ts": {
            "lines": 96,
            "tokens": 769,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 33,
            "duplicatedTokens": 226,
            "percentage": 34.38,
            "percentageTokens": 29.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/errors/UploadError.ts": {
            "lines": 154,
            "tokens": 1078,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager/index.ts": {
            "lines": 5,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/operational-transform/operation-engine/index.ts": {
            "lines": 5,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/validation/types/ValidationResult.ts": {
            "lines": 17,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/validation/rules/ValidationRule.ts": {
            "lines": 12,
            "tokens": 132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/validation/ValidationMiddleware.ts": {
            "lines": 188,
            "tokens": 1458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/SecurityHeadersMiddleware.ts": {
            "lines": 224,
            "tokens": 1645,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 28,
            "duplicatedTokens": 171,
            "percentage": 12.5,
            "percentageTokens": 10.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/rate-limit/RateLimiter.ts": {
            "lines": 91,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/base/SecurityMiddleware.ts": {
            "lines": 129,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware/auth-utilities.ts": {
            "lines": 207,
            "tokens": 1699,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 283,
            "percentage": 15.46,
            "percentageTokens": 16.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth/AuthMiddleware.ts": {
            "lines": 222,
            "tokens": 1625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/workflow.schemas.ts": {
            "lines": 306,
            "tokens": 1927,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/index.ts": {
            "lines": 21,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/execution.schemas.ts": {
            "lines": 194,
            "tokens": 1203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/credential.schemas.ts": {
            "lines": 188,
            "tokens": 1178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/common.schemas.ts": {
            "lines": 235,
            "tokens": 1451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas/auth.schemas.ts": {
            "lines": 231,
            "tokens": 1397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts": {
            "lines": 869,
            "tokens": 5819,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 92,
            "duplicatedTokens": 648,
            "percentage": 10.59,
            "percentageTokens": 11.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/index.ts": {
            "lines": 5,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/themes/gmailtheme/index.ts": {
            "lines": 4,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/virtualizedlist/index.ts": {
            "lines": 4,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/index.ts": {
            "lines": 14,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/index.ts": {
            "lines": 50,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/rbacStore/index.ts": {
            "lines": 164,
            "tokens": 1188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/index.ts": {
            "lines": 19,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/WebhookTrigger.node.ts": {
            "lines": 324,
            "tokens": 2175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/VectorStoreTool.node.ts": {
            "lines": 421,
            "tokens": 3053,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 114,
            "percentage": 4.99,
            "percentageTokens": 3.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/VectorStore.node.ts": {
            "lines": 509,
            "tokens": 3775,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 114,
            "percentage": 4.13,
            "percentageTokens": 3.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Trigger.node.ts": {
            "lines": 110,
            "tokens": 733,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 186,
            "percentage": 12.73,
            "percentageTokens": 25.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Transform.node.ts": {
            "lines": 387,
            "tokens": 2344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/PgVector.node.ts": {
            "lines": 309,
            "tokens": 2404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Ollama.node.ts": {
            "lines": 163,
            "tokens": 1115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Loop.node.ts": {
            "lines": 145,
            "tokens": 991,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/LLM.node.ts": {
            "lines": 322,
            "tokens": 2456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/HttpRequest.node.ts": {
            "lines": 251,
            "tokens": 1959,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 211,
            "percentage": 7.17,
            "percentageTokens": 10.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/File.node.ts": {
            "lines": 360,
            "tokens": 2466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Embedding.node.ts": {
            "lines": 243,
            "tokens": 1682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Email.node.ts": {
            "lines": 298,
            "tokens": 2186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Delay.node.ts": {
            "lines": 85,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Database.node.ts": {
            "lines": 310,
            "tokens": 2224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Condition.node.ts": {
            "lines": 219,
            "tokens": 1781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Action.node.ts": {
            "lines": 214,
            "tokens": 1529,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 117,
            "percentage": 5.14,
            "percentageTokens": 7.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/executionmonitor/index.ts": {
            "lines": 9,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/containerfactory/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/containerfactory/containerFactory-part4.ts": {
            "lines": 4,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/containerfactory/containerFactory-part3.ts": {
            "lines": 4,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/containerfactory/containerFactory-part2.ts": {
            "lines": 4,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/themes/index.ts": {
            "lines": 40,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/themes/defaultTheme.ts": {
            "lines": 29,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/themes/darkTheme.ts": {
            "lines": 29,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/themes/ThemeManager.ts": {
            "lines": 230,
            "tokens": 1927,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/index.ts": {
            "lines": 8,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/index.ts": {
            "lines": 10,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/index.ts": {
            "lines": 26,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/index.ts": {
            "lines": 8,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Onboarding/index.ts": {
            "lines": 5,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/index.ts": {
            "lines": 5,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Integrations/index.ts": {
            "lines": 5,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/index.ts": {
            "lines": 13,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Community/index.ts": {
            "lines": 5,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Analytics/index.ts": {
            "lines": 5,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Accessibility/index.ts": {
            "lines": 11,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/monitoring/healthcheck/HealthCheckService.ts": {
            "lines": 7,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/validators/workflowValidators.ts": {
            "lines": 201,
            "tokens": 1616,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 20,
            "duplicatedTokens": 234,
            "percentage": 9.95,
            "percentageTokens": 14.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/services/WorkflowService.ts": {
            "lines": 382,
            "tokens": 2964,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 172,
            "percentage": 5.24,
            "percentageTokens": 5.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/services/WorkFlowEngine.ts": {
            "lines": 31,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/routes/workflowRoutes.ts": {
            "lines": 206,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/repositories/WorkflowRepository.ts": {
            "lines": 37,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/interfaces/index.ts": {
            "lines": 35,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/controllers/WorkflowController.ts": {
            "lines": 229,
            "tokens": 1944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/services/OAuthService.ts": {
            "lines": 62,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/services/GmailService.ts": {
            "lines": 18,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/routes/oauthRoutes.ts": {
            "lines": 75,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/interfaces/index.ts": {
            "lines": 59,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/controllers/OAuthController.ts": {
            "lines": 139,
            "tokens": 1136,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 85,
            "percentage": 4.32,
            "percentageTokens": 7.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/services/NodeExecutionService.ts": {
            "lines": 23,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/routes/nodeExecutionRoutes.ts": {
            "lines": 21,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/repositories/ExecutionRepository.ts": {
            "lines": 85,
            "tokens": 619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/interfaces/index.ts": {
            "lines": 58,
            "tokens": 383,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 99,
            "percentage": 18.97,
            "percentageTokens": 25.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/controllers/NodeExecutionController.ts": {
            "lines": 40,
            "tokens": 346,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 85,
            "percentage": 15,
            "percentageTokens": 24.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/credentials/services/CredentialService.ts": {
            "lines": 53,
            "tokens": 385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/credentials/repositories/CredentialRepository.ts": {
            "lines": 7,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/credentials/interfaces/index.ts": {
            "lines": 36,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/credentials/controllers/CredentialController.ts": {
            "lines": 106,
            "tokens": 870,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/services/CollaborationService.ts": {
            "lines": 18,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/routes/collaborationRoutes.ts": {
            "lines": 71,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/controllers/SessionController.ts": {
            "lines": 91,
            "tokens": 708,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 83,
            "percentage": 10.99,
            "percentageTokens": 11.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/controllers/CommentController.ts": {
            "lines": 140,
            "tokens": 1041,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 83,
            "percentage": 7.14,
            "percentageTokens": 7.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/validators/authValidators.ts": {
            "lines": 137,
            "tokens": 885,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/services/AuthService.ts": {
            "lines": 354,
            "tokens": 2581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/routes/authRoutes.ts": {
            "lines": 81,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/repositories/UserRepository.ts": {
            "lines": 12,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/interfaces/index.ts": {
            "lines": 53,
            "tokens": 308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/controllers/AuthController.ts": {
            "lines": 134,
            "tokens": 1166,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 214,
            "percentage": 16.42,
            "percentageTokens": 18.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/vector-extensions.ts": {
            "lines": 76,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/transaction-management.ts": {
            "lines": 59,
            "tokens": 456,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/query-operations.ts": {
            "lines": 135,
            "tokens": 1354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/postgres-connection.ts": {
            "lines": 45,
            "tokens": 363,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 120,
            "percentage": 42.22,
            "percentageTokens": 33.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/schemas/workflow.schema.ts": {
            "lines": 131,
            "tokens": 1326,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 110,
            "percentage": 6.87,
            "percentageTokens": 8.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/schemas/user.schema.ts": {
            "lines": 211,
            "tokens": 2096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/connection/utility-methods.ts": {
            "lines": 71,
            "tokens": 475,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/connection/error-handling.ts": {
            "lines": 36,
            "tokens": 292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/connection/connection-manager.ts": {
            "lines": 35,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 120,
            "percentage": 54.29,
            "percentageTokens": 47.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/workers/worker-manager.ts": {
            "lines": 9,
            "tokens": 87,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/workflow-types.ts": {
            "lines": 119,
            "tokens": 1209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/node-context-types.ts": {
            "lines": 70,
            "tokens": 511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/execution-types.ts": {
            "lines": 93,
            "tokens": 617,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 251,
            "percentage": 40.86,
            "percentageTokens": 40.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/event-trigger-types.ts": {
            "lines": 87,
            "tokens": 599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/queue/queue-manager.ts": {
            "lines": 15,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/execution/execution-engine.ts": {
            "lines": 15,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/events/event-bus.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts": {
            "lines": 528,
            "tokens": 4579,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 87,
            "duplicatedTokens": 646,
            "percentage": 16.48,
            "percentageTokens": 14.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/auth-service/src/services/AuthService.ts": {
            "lines": 589,
            "tokens": 4618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/auth-service/src/rbac/permission-engine.ts": {
            "lines": 285,
            "tokens": 2102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts": {
            "lines": 590,
            "tokens": 5110,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 82,
            "duplicatedTokens": 884,
            "percentage": 13.9,
            "percentageTokens": 17.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/auth/oauth2-handler/utility-methods.ts": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts": {
            "lines": 180,
            "tokens": 1929,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 161,
            "duplicatedTokens": 1632,
            "percentage": 89.44,
            "percentageTokens": 84.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts": {
            "lines": 282,
            "tokens": 3030,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 161,
            "duplicatedTokens": 1632,
            "percentage": 57.09,
            "percentageTokens": 53.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/validation/BaseValidationMiddleware.ts": {
            "lines": 278,
            "tokens": 1632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/node-templates.ts": {
            "lines": 557,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/index.ts": {
            "lines": 4,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/file-generation.ts": {
            "lines": 112,
            "tokens": 375,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 142,
            "percentage": 10.71,
            "percentageTokens": 37.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/credential-templates.ts": {
            "lines": 56,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-setup.ts": {
            "lines": 139,
            "tokens": 1159,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 117,
            "duplicatedTokens": 943,
            "percentage": 84.17,
            "percentageTokens": 81.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-handlers.ts": {
            "lines": 73,
            "tokens": 654,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 542,
            "percentage": 82.19,
            "percentageTokens": 82.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/rate-limiter/distributed-limiter.ts": {
            "lines": 45,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/validation.middleware.ts": {
            "lines": 825,
            "tokens": 6157,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 196,
            "percentage": 3.88,
            "percentageTokens": 3.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers.middleware.ts": {
            "lines": 411,
            "tokens": 3017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/rate-limit.middleware.ts": {
            "lines": 418,
            "tokens": 2875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts": {
            "lines": 864,
            "tokens": 7078,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 40,
            "duplicatedTokens": 444,
            "percentage": 4.63,
            "percentageTokens": 6.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware.ts": {
            "lines": 403,
            "tokens": 3151,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 428,
            "percentage": 12.9,
            "percentageTokens": 13.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/jwt-session/index.ts": {
            "lines": 45,
            "tokens": 366,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 283,
            "percentage": 71.11,
            "percentageTokens": 77.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/examples/security-headers.example.ts": {
            "lines": 172,
            "tokens": 1251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/examples/rate-limit.example.ts": {
            "lines": 79,
            "tokens": 695,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/examples/auth.example.ts": {
            "lines": 198,
            "tokens": 1447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/encryption.service/index.ts": {
            "lines": 30,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/audit-logger/index.ts": {
            "lines": 27,
            "tokens": 213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/providers/openai-provider/openai-provider.ts": {
            "lines": 282,
            "tokens": 2224,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 430,
            "percentage": 15.6,
            "percentageTokens": 19.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/providers/anthropic-provider/anthropic-provider.ts": {
            "lines": 123,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/optimized/unified-service-base.ts": {
            "lines": 120,
            "tokens": 1327,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "duplicatedTokens": 430,
            "percentage": 31.67,
            "percentageTokens": 32.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/monitoring/base-monitoring-repository.ts": {
            "lines": 70,
            "tokens": 638,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/tags.ts": {
            "lines": 46,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/spec-generator.ts": {
            "lines": 43,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/security.ts": {
            "lines": 28,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/schemas.ts": {
            "lines": 113,
            "tokens": 709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/responses.ts": {
            "lines": 85,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/parameters.ts": {
            "lines": 85,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/info.ts": {
            "lines": 76,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/schemas/index.ts": {
            "lines": 120,
            "tokens": 1382,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 98,
            "percentage": 5.83,
            "percentageTokens": 7.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/workflows.ts": {
            "lines": 428,
            "tokens": 885,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/webhooks.ts": {
            "lines": 106,
            "tokens": 439,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 91,
            "percentage": 7.55,
            "percentageTokens": 20.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/users.ts": {
            "lines": 68,
            "tokens": 312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/organizations.ts": {
            "lines": 105,
            "tokens": 394,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 91,
            "percentage": 7.62,
            "percentageTokens": 23.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/nodes.ts": {
            "lines": 74,
            "tokens": 327,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 91,
            "percentage": 10.81,
            "percentageTokens": 27.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/index.ts": {
            "lines": 52,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/executions.ts": {
            "lines": 123,
            "tokens": 476,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 192,
            "percentage": 11.38,
            "percentageTokens": 40.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/credentials.ts": {
            "lines": 231,
            "tokens": 780,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 101,
            "percentage": 2.6,
            "percentageTokens": 12.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/auth.ts": {
            "lines": 70,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/analytics.ts": {
            "lines": 44,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/ai.ts": {
            "lines": 44,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/middleware/validation.ts": {
            "lines": 103,
            "tokens": 1072,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/middleware/logging.ts": {
            "lines": 39,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/middleware/error-handler.ts": {
            "lines": 28,
            "tokens": 252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/middleware/auth.ts": {
            "lines": 53,
            "tokens": 410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/controllers/workflow-controller.ts": {
            "lines": 182,
            "tokens": 1498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/utils/styles.ts": {
            "lines": 220,
            "tokens": 1936,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/types/component.ts": {
            "lines": 276,
            "tokens": 919,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/hooks/usePrevious.ts": {
            "lines": 13,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/hooks/useEventListener.ts": {
            "lines": 36,
            "tokens": 313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/hooks/useDisclosure.ts": {
            "lines": 39,
            "tokens": 293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/hooks/useDebounce.ts": {
            "lines": 19,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/hooks/useAsync.ts": {
            "lines": 62,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/variants.ts": {
            "lines": 102,
            "tokens": 604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/theme.ts": {
            "lines": 44,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/responsive.ts": {
            "lines": 30,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/inputStyles.ts": {
            "lines": 90,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/index.ts": {
            "lines": 12,
            "tokens": 87,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/cn.ts": {
            "lines": 30,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/utils/classNames.ts": {
            "lines": 31,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/tokens/typography.ts": {
            "lines": 42,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/tokens/spacing.ts": {
            "lines": 27,
            "tokens": 158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/tokens/index.ts": {
            "lines": 13,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/tokens/colors.ts": {
            "lines": 50,
            "tokens": 263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/tokens/baseTheme.ts": {
            "lines": 69,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/themes/index.ts": {
            "lines": 15,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/themes/gmailTheme.ts": {
            "lines": 249,
            "tokens": 1217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/index.ts": {
            "lines": 27,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/factories/PropertyRendererFactory.ts": {
            "lines": 587,
            "tokens": 4584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/factories/ComponentFactory.ts": {
            "lines": 492,
            "tokens": 3535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/index.ts": {
            "lines": 58,
            "tokens": 281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/workflowExporter.ts": {
            "lines": 239,
            "tokens": 1922,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 176,
            "percentage": 5.86,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/typeValidation.ts": {
            "lines": 346,
            "tokens": 2570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/transformNodeUtils.ts": {
            "lines": 311,
            "tokens": 2444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/reverseTypeAdapters.ts": {
            "lines": 139,
            "tokens": 1115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/propertyEvaluator.ts": {
            "lines": 10,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/nodeVersioning.ts": {
            "lines": 475,
            "tokens": 3745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/nodeGenerator.ts": {
            "lines": 303,
            "tokens": 2539,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/index.ts": {
            "lines": 34,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/expressionEvaluator.ts": {
            "lines": 130,
            "tokens": 851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/enhancedPropertyEvaluator.ts": {
            "lines": 601,
            "tokens": 4610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/apiErrorHandler.ts": {
            "lines": 256,
            "tokens": 1913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/workflow.ts": {
            "lines": 135,
            "tokens": 1117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/security.ts": {
            "lines": 676,
            "tokens": 4921,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/nodeTypes.ts": {
            "lines": 77,
            "tokens": 572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/node.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/integration.ts": {
            "lines": 93,
            "tokens": 656,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/index.ts": {
            "lines": 12,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/frontend-credentials.ts": {
            "lines": 336,
            "tokens": 1814,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/frontend-auth.ts": {
            "lines": 381,
            "tokens": 2072,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/execution.ts": {
            "lines": 14,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/edge.ts": {
            "lines": 199,
            "tokens": 1314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/dynamicProperties.ts": {
            "lines": 177,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/debugging.ts": {
            "lines": 220,
            "tokens": 1842,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/containerNodes.ts": {
            "lines": 263,
            "tokens": 1852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/types/collaboration.ts": {
            "lines": 595,
            "tokens": 3984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/leanWorkflowStore.ts": {
            "lines": 249,
            "tokens": 2630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/integrationStore.ts": {
            "lines": 123,
            "tokens": 1123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/index.ts": {
            "lines": 9,
            "tokens": 73,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts": {
            "lines": 621,
            "tokens": 5960,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 66,
            "duplicatedTokens": 568,
            "percentage": 10.63,
            "percentageTokens": 9.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedExecutionStore.ts": {
            "lines": 291,
            "tokens": 2534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/credentialStore.ts": {
            "lines": 161,
            "tokens": 1740,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 200,
            "percentage": 9.94,
            "percentageTokens": 11.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/collaborationStore.ts": {
            "lines": 203,
            "tokens": 1834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/authStore.ts": {
            "lines": 180,
            "tokens": 1486,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 186,
            "percentage": 13.33,
            "percentageTokens": 12.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/analyticsStore.ts": {
            "lines": 405,
            "tokens": 3748,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/aiAssistantStore.ts": {
            "lines": 477,
            "tokens": 3610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/workflowTemplates.ts": {
            "lines": 102,
            "tokens": 692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/index.ts": {
            "lines": 44,
            "tokens": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/enhancedDebuggingService.ts": {
            "lines": 108,
            "tokens": 747,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/analyticsService.ts": {
            "lines": 271,
            "tokens": 1988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/aiAssistantService.ts": {
            "lines": 432,
            "tokens": 2861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/PerformanceService.ts": {
            "lines": 593,
            "tokens": 4283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/LoggingService.ts": {
            "lines": 505,
            "tokens": 3376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/services/ConfigService.ts": {
            "lines": 143,
            "tokens": 1018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/index.ts": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/WorkflowSchemas.ts": {
            "lines": 330,
            "tokens": 3846,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 252,
            "percentage": 4.85,
            "percentageTokens": 6.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/CredentialSchemas.ts": {
            "lines": 285,
            "tokens": 3102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/BaseSchemas.ts": {
            "lines": 113,
            "tokens": 1136,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 98,
            "percentage": 6.19,
            "percentageTokens": 8.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/AuthSchemas.ts": {
            "lines": 263,
            "tokens": 2725,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/types.ts": {
            "lines": 449,
            "tokens": 3117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/registry.ts": {
            "lines": 791,
            "tokens": 5984,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 596,
            "percentage": 5.56,
            "percentageTokens": 9.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/index.ts": {
            "lines": 13,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/BaseNodeDefinition.ts": {
            "lines": 394,
            "tokens": 2588,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 1.78,
            "percentageTokens": 3.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/constants/categories.ts": {
            "lines": 93,
            "tokens": 867,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/config/environment.ts": {
            "lines": 29,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/index.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/WorkflowApiService.ts": {
            "lines": 504,
            "tokens": 3172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/CredentialApiService.ts": {
            "lines": 672,
            "tokens": 4268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/AuthApiService.ts": {
            "lines": 564,
            "tokens": 3740,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 416,
            "percentage": 9.57,
            "percentageTokens": 11.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/ApiClient.ts": {
            "lines": 436,
            "tokens": 3248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/types/plugin.ts": {
            "lines": 60,
            "tokens": 410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/intelligentAutoConnect.ts": {
            "lines": 329,
            "tokens": 2701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/integrationService.ts": {
            "lines": 81,
            "tokens": 524,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/index.ts": {
            "lines": 12,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/services/containerFactory.ts": {
            "lines": 233,
            "tokens": 1647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/types.ts": {
            "lines": 375,
            "tokens": 2754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/nodeUiRegistry.ts": {
            "lines": 254,
            "tokens": 1470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/index.ts": {
            "lines": 9,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ComponentFactory.ts": {
            "lines": 386,
            "tokens": 2955,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useSmartMenuPosition.ts": {
            "lines": 282,
            "tokens": 2328,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 192,
            "percentage": 7.8,
            "percentageTokens": 8.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useScrollAnimations.ts": {
            "lines": 268,
            "tokens": 2174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/usePluginMarketplace.ts": {
            "lines": 267,
            "tokens": 2247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useGmailCredential.ts": {
            "lines": 59,
            "tokens": 459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useCredentialForm.ts": {
            "lines": 201,
            "tokens": 1573,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useContainerInteractions.ts": {
            "lines": 419,
            "tokens": 3171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/shared/interfaces/index.ts": {
            "lines": 4,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/shared/interfaces/RepositoryFactory.ts": {
            "lines": 25,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/shared/interfaces/IBaseRepository.ts": {
            "lines": 11,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/versioncontrol/VersionControlService.ts": {
            "lines": 7,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/permission/PermissionService.ts": {
            "lines": 7,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/monitoring/PerformanceMonitor.ts": {
            "lines": 434,
            "tokens": 3631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/monitoring/ErrorTracker.ts": {
            "lines": 580,
            "tokens": 5052,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/logging/Logger.ts": {
            "lines": 25,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/debugging/DebugTools.ts": {
            "lines": 30,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/index.ts": {
            "lines": 8,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/credentials/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/vector-types.ts": {
            "lines": 35,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/query-types.ts": {
            "lines": 118,
            "tokens": 1349,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 24,
            "duplicatedTokens": 328,
            "percentage": 20.34,
            "percentageTokens": 24.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/entity-schemas.ts": {
            "lines": 57,
            "tokens": 698,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 24,
            "duplicatedTokens": 328,
            "percentage": 42.11,
            "percentageTokens": 46.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/config-schemas.ts": {
            "lines": 40,
            "tokens": 411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/optimization/query-optimizer.ts": {
            "lines": 753,
            "tokens": 6601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/database-service/database-serviceService.ts": {
            "lines": 66,
            "tokens": 622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/database-manager/hybrid-manager.ts": {
            "lines": 43,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/database-manager/health-monitoring.ts": {
            "lines": 45,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/database-manager/connection-orchestration.ts": {
            "lines": 46,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/common/validation/index.ts": {
            "lines": 24,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/common/utils/index.ts": {
            "lines": 7,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/common/middleware/index.ts": {
            "lines": 7,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/workflow-types.ts": {
            "lines": 114,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/node-types.ts": {
            "lines": 56,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/index.ts": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/execution-types.ts": {
            "lines": 46,
            "tokens": 300,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 153,
            "percentage": 52.17,
            "percentageTokens": 51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/error-types.ts": {
            "lines": 52,
            "tokens": 385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/nodes/NodeRegistry.ts": {
            "lines": 102,
            "tokens": 888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/nodes/BaseNode.ts": {
            "lines": 92,
            "tokens": 808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/execution/WorkflowEngine.ts": {
            "lines": 407,
            "tokens": 3067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/execution/QueueManager.ts": {
            "lines": 357,
            "tokens": 2785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/execution/NodeExecutor.ts": {
            "lines": 184,
            "tokens": 1393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/execution/ExecutionContext.ts": {
            "lines": 115,
            "tokens": 964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/workflow-engine.ts": {
            "lines": 110,
            "tokens": 942,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/common/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/common/WorkflowValidator.ts": {
            "lines": 103,
            "tokens": 859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/common/ExpressionEvaluator.ts": {
            "lines": 67,
            "tokens": 551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/common/DataTransformer.ts": {
            "lines": 66,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/utils/turbo-metrics.ts": {
            "lines": 349,
            "tokens": 2992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/types.ts": {
            "lines": 68,
            "tokens": 453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts": {
            "lines": 236,
            "tokens": 1913,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 121,
            "duplicatedTokens": 1144,
            "percentage": 51.27,
            "percentageTokens": 59.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/test-runner.ts": {
            "lines": 52,
            "tokens": 437,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 68,
            "duplicatedTokens": 553,
            "percentage": 130.77,
            "percentageTokens": 126.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/index.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts": {
            "lines": 234,
            "tokens": 2135,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 80,
            "duplicatedTokens": 862,
            "percentage": 34.19,
            "percentageTokens": 40.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/autocomplete-tester.ts": {
            "lines": 202,
            "tokens": 1827,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 369,
            "percentage": 17.82,
            "percentageTokens": 20.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/analyzer.ts": {
            "lines": 156,
            "tokens": 1310,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 262,
            "percentage": 16.03,
            "percentageTokens": 20,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/types/index.ts": {
            "lines": 483,
            "tokens": 3051,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/index.ts": {
            "lines": 43,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestSuiteRunner.ts": {
            "lines": 451,
            "tokens": 3738,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 151,
            "percentage": 3.77,
            "percentageTokens": 4.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestResultAnalyzer.ts": {
            "lines": 397,
            "tokens": 3011,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestOrchestrator.ts": {
            "lines": 486,
            "tokens": 3622,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 237,
            "percentage": 4.94,
            "percentageTokens": 6.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/E2EValidator.ts": {
            "lines": 468,
            "tokens": 3830,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/BuildValidator.ts": {
            "lines": 567,
            "tokens": 4182,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 390,
            "percentage": 9.17,
            "percentageTokens": 9.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts": {
            "lines": 554,
            "tokens": 4465,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 308,
            "duplicatedTokens": 2432,
            "percentage": 55.6,
            "percentageTokens": 54.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/index.ts": {
            "lines": 28,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts": {
            "lines": 813,
            "tokens": 5822,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 60,
            "duplicatedTokens": 517,
            "percentage": 7.38,
            "percentageTokens": 8.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts": {
            "lines": 701,
            "tokens": 4551,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 60,
            "duplicatedTokens": 517,
            "percentage": 8.56,
            "percentageTokens": 11.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/RecommendationEngine.ts": {
            "lines": 889,
            "tokens": 6340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/PerformanceTracker.ts": {
            "lines": 874,
            "tokens": 7082,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 88,
            "percentage": 0.69,
            "percentageTokens": 1.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/BenchmarkingSystem.ts": {
            "lines": 704,
            "tokens": 5257,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 88,
            "percentage": 0.85,
            "percentageTokens": 1.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/index.ts": {
            "lines": 8,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/PerformanceMonitor.ts": {
            "lines": 225,
            "tokens": 1436,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 57,
            "duplicatedTokens": 300,
            "percentage": 25.33,
            "percentageTokens": 20.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryOptimizer.ts": {
            "lines": 329,
            "tokens": 2386,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 182,
            "percentage": 7.29,
            "percentageTokens": 7.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryMonitor.ts": {
            "lines": 453,
            "tokens": 3346,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 98,
            "percentage": 4.42,
            "percentageTokens": 2.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryLeakDetector.ts": {
            "lines": 498,
            "tokens": 3522,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 106,
            "percentage": 4.02,
            "percentageTokens": 3.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/interfaces/index.ts": {
            "lines": 259,
            "tokens": 1538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/integration/index.ts": {
            "lines": 9,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/integration/ContinuousValidationIntegration.ts": {
            "lines": 709,
            "tokens": 4054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/types.ts": {
            "lines": 76,
            "tokens": 544,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/test-runner.ts": {
            "lines": 101,
            "tokens": 1031,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 226,
            "percentage": 28.71,
            "percentageTokens": 21.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/path-suggestion-engine.ts": {
            "lines": 360,
            "tokens": 3290,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 155,
            "percentage": 3.33,
            "percentageTokens": 4.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/index.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-path-optimizer.ts": {
            "lines": 287,
            "tokens": 2625,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 37,
            "duplicatedTokens": 358,
            "percentage": 12.89,
            "percentageTokens": 13.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-consistency-validator.ts": {
            "lines": 372,
            "tokens": 3223,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 365,
            "percentage": 10.48,
            "percentageTokens": 11.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/circular-dependency-detector.ts": {
            "lines": 306,
            "tokens": 2686,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 307,
            "percentage": 11.11,
            "percentageTokens": 11.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/types.ts": {
            "lines": 67,
            "tokens": 477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/test-runner.ts": {
            "lines": 65,
            "tokens": 616,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 245,
            "percentage": 49.23,
            "percentageTokens": 39.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/source-mapping-validator.ts": {
            "lines": 399,
            "tokens": 2706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts": {
            "lines": 299,
            "tokens": 2529,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 159,
            "duplicatedTokens": 1553,
            "percentage": 53.18,
            "percentageTokens": 61.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/intellisense-tester.ts": {
            "lines": 353,
            "tokens": 2900,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 103,
            "duplicatedTokens": 1019,
            "percentage": 29.18,
            "percentageTokens": 35.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/index.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/ide-performance-validator.ts": {
            "lines": 184,
            "tokens": 1441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/index.ts": {
            "lines": 27,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/ProductivityTracker.ts": {
            "lines": 578,
            "tokens": 4838,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/IDEPerformanceAnalyzer.ts": {
            "lines": 652,
            "tokens": 5422,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 191,
            "percentage": 3.07,
            "percentageTokens": 3.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/DevExperienceMetrics.ts": {
            "lines": 462,
            "tokens": 4066,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 191,
            "percentage": 4.33,
            "percentageTokens": 4.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/controller/index.ts": {
            "lines": 5,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/controller/ValidationController.ts": {
            "lines": 793,
            "tokens": 5786,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/validation-orchestrator-cli.ts": {
            "lines": 429,
            "tokens": 2902,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts": {
            "lines": 266,
            "tokens": 2176,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 165,
            "duplicatedTokens": 1278,
            "percentage": 62.03,
            "percentageTokens": 58.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/memory-monitor.ts": {
            "lines": 236,
            "tokens": 2007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/index.ts": {
            "lines": 9,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/import-optimizer-cli.ts": {
            "lines": 291,
            "tokens": 2401,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 85,
            "duplicatedTokens": 631,
            "percentage": 29.21,
            "percentageTokens": 26.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/ide-performance-cli.ts": {
            "lines": 276,
            "tokens": 2166,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 73,
            "duplicatedTokens": 565,
            "percentage": 26.45,
            "percentageTokens": 26.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/dev-experience-cli.ts": {
            "lines": 121,
            "tokens": 989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/bundle-analyzer-cli.ts": {
            "lines": 115,
            "tokens": 999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/build-analyzer-cli.ts": {
            "lines": 58,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/architecture-validator-cli.ts": {
            "lines": 392,
            "tokens": 2864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/types.ts": {
            "lines": 209,
            "tokens": 1421,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts": {
            "lines": 928,
            "tokens": 8040,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 137,
            "duplicatedTokens": 1494,
            "percentage": 14.76,
            "percentageTokens": 18.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/dependency-analyzer.ts": {
            "lines": 641,
            "tokens": 5328,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 109,
            "duplicatedTokens": 996,
            "percentage": 17,
            "percentageTokens": 18.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts": {
            "lines": 820,
            "tokens": 6811,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 1000,
            "percentage": 12.44,
            "percentageTokens": 14.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/validation.ts": {
            "lines": 36,
            "tokens": 245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/tenant-service/src/index.ts": {
            "lines": 391,
            "tokens": 3434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/notification-service/src/types.ts": {
            "lines": 32,
            "tokens": 270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/notification-service/src/queue.ts": {
            "lines": 127,
            "tokens": 1068,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/notification-service/src/index.ts": {
            "lines": 52,
            "tokens": 453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/execution-service/src/worker.ts": {
            "lines": 42,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/execution-service/src/queue.ts": {
            "lines": 35,
            "tokens": 248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/execution-service/src/index.ts": {
            "lines": 46,
            "tokens": 337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/audit-service/src/compliance.ts": {
            "lines": 146,
            "tokens": 1341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/analytics-service/src/types.ts": {
            "lines": 48,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/analytics-service/src/index.ts": {
            "lines": 77,
            "tokens": 810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/services/analytics-service/src/collectors.ts": {
            "lines": 155,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/state-store/src/index.ts": {
            "lines": 406,
            "tokens": 3445,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/index.ts": {
            "lines": 9,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/FileProcessingService.ts": {
            "lines": 404,
            "tokens": 3516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/index.ts": {
            "lines": 9,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/marketplace/plugin-validator.ts": {
            "lines": 520,
            "tokens": 3601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/marketplace/plugin-registry.ts": {
            "lines": 287,
            "tokens": 2665,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/marketplace/plugin-distribution.ts": {
            "lines": 509,
            "tokens": 3936,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/marketplace/index.ts": {
            "lines": 32,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/gateway/routing.ts": {
            "lines": 56,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/gateway/middleware.ts": {
            "lines": 30,
            "tokens": 265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/gateway/index.ts": {
            "lines": 43,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/scheduler/src/index.ts": {
            "lines": 478,
            "tokens": 3840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/resource-manager/src/index.ts": {
            "lines": 510,
            "tokens": 4267,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/execution-engine/src/workflow-execution-engine.ts": {
            "lines": 623,
            "tokens": 4916,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/event-bus/src/handlers.ts": {
            "lines": 24,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/webhook/webhook-manager.ts": {
            "lines": 439,
            "tokens": 3332,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 115,
            "percentage": 2.28,
            "percentageTokens": 3.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/utils/rate-limiter.ts": {
            "lines": 50,
            "tokens": 312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/testing/test-framework.ts": {
            "lines": 69,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/security/credential-manager.ts": {
            "lines": 64,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/monitoring/health-monitor.ts": {
            "lines": 58,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/ecosystem/integration-marketplace.ts": {
            "lines": 547,
            "tokens": 4150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/ecosystem/index.ts": {
            "lines": 6,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/core/integration-registry.ts": {
            "lines": 74,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/core/event-bus.ts": {
            "lines": 474,
            "tokens": 3447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/config/configuration-schema.ts": {
            "lines": 412,
            "tokens": 4099,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 80,
            "duplicatedTokens": 692,
            "percentage": 19.42,
            "percentageTokens": 16.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/base/base-integration.ts": {
            "lines": 447,
            "tokens": 3246,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 115,
            "percentage": 2.24,
            "percentageTokens": 3.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/auth/oauth2-handler.ts": {
            "lines": 60,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac/index.ts": {
            "lines": 6,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac/advanced-rbac.ts": {
            "lines": 758,
            "tokens": 5713,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 25,
            "duplicatedTokens": 272,
            "percentage": 3.3,
            "percentageTokens": 4.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/multi-tenant/tenant-manager.ts": {
            "lines": 728,
            "tokens": 6032,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 72,
            "percentage": 0.96,
            "percentageTokens": 1.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/multi-tenant/index.ts": {
            "lines": 6,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/workflow/test-engine.ts": {
            "lines": 15,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/validation/validator.ts": {
            "lines": 117,
            "tokens": 1042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/validation.ts": {
            "lines": 214,
            "tokens": 1671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/logger.ts": {
            "lines": 118,
            "tokens": 955,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/errors.ts": {
            "lines": 58,
            "tokens": 503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/Validator.ts": {
            "lines": 69,
            "tokens": 645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/Retry.ts": {
            "lines": 60,
            "tokens": 567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/ErrorHandler.ts": {
            "lines": 64,
            "tokens": 602,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/utils/Cache.ts": {
            "lines": 82,
            "tokens": 847,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/use-cases/Map.use-case.ts": {
            "lines": 18,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/use-cases/If.use-case.ts": {
            "lines": 14,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/use-cases/Filter.use-case.ts": {
            "lines": 20,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/use-cases/Error.use-case.ts": {
            "lines": 41,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/use-cases/Catch.use-case.ts": {
            "lines": 26,
            "tokens": 301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/types/repository.types.ts": {
            "lines": 97,
            "tokens": 589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/types/index.ts": {
            "lines": 14,
            "tokens": 157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/types/ServiceDependencies.ts": {
            "lines": 9,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/types/Result.ts": {
            "lines": 11,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/service/base-service.interface.ts": {
            "lines": 90,
            "tokens": 484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/cached-repository.ts": {
            "lines": 188,
            "tokens": 1614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/base-repository.ts": {
            "lines": 138,
            "tokens": 1100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/base-repository.interface.ts": {
            "lines": 78,
            "tokens": 384,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/BaseRepository.ts": {
            "lines": 330,
            "tokens": 2852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/performance/caching-engine.ts": {
            "lines": 591,
            "tokens": 4947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/MiddlewareFactory.ts": {
            "lines": 161,
            "tokens": 930,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/BaseValidationMiddleware.ts": {
            "lines": 373,
            "tokens": 2861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/middleware/BaseMiddleware.ts": {
            "lines": 158,
            "tokens": 980,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/index.ts": {
            "lines": 10,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/IService.ts": {
            "lines": 3,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/IRepository.ts": {
            "lines": 8,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/IMapper.ts": {
            "lines": 3,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/ILogger.ts": {
            "lines": 5,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/IEventBus.ts": {
            "lines": 4,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/interfaces/ICache.ts": {
            "lines": 11,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/events/event-bus.ts": {
            "lines": 60,
            "tokens": 500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/errors/index.ts": {
            "lines": 61,
            "tokens": 500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/validation.ts": {
            "lines": 127,
            "tokens": 1177,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 194,
            "percentage": 11.02,
            "percentageTokens": 16.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/core.ts": {
            "lines": 120,
            "tokens": 1268,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 228,
            "percentage": 11.67,
            "percentageTokens": 17.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts": {
            "lines": 146,
            "tokens": 1306,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 90,
            "duplicatedTokens": 972,
            "percentage": 61.64,
            "percentageTokens": 74.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/Validate.ts": {
            "lines": 56,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/Transactional.ts": {
            "lines": 20,
            "tokens": 177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/Log.ts": {
            "lines": 48,
            "tokens": 464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/Injectable.ts": {
            "lines": 16,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/Cacheable.ts": {
            "lines": 32,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/cache/cache.interface.ts": {
            "lines": 28,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/base/BaseService.ts": {
            "lines": 151,
            "tokens": 1216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/base/BaseMiddleware.ts": {
            "lines": 122,
            "tokens": 783,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/testing.ts": {
            "lines": 198,
            "tokens": 1751,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 54,
            "duplicatedTokens": 416,
            "percentage": 27.27,
            "percentageTokens": 23.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/generators.ts": {
            "lines": 197,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/cli.ts": {
            "lines": 106,
            "tokens": 878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/DevTools.ts": {
            "lines": 376,
            "tokens": 2986,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/workflow.ts": {
            "lines": 17,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/start.ts": {
            "lines": 9,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts": {
            "lines": 457,
            "tokens": 2131,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 189,
            "duplicatedTokens": 1627,
            "percentage": 41.36,
            "percentageTokens": 76.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/dev.ts": {
            "lines": 26,
            "tokens": 218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/deploy.ts": {
            "lines": 8,
            "tokens": 73,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/create.ts": {
            "lines": 20,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/build.ts": {
            "lines": 16,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/auth.ts": {
            "lines": 7,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/utils/two-factor.ts": {
            "lines": 147,
            "tokens": 1042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/utils/password-validator.ts": {
            "lines": 240,
            "tokens": 2111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/utils/audit-logger.ts": {
            "lines": 108,
            "tokens": 922,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/types/user-organization-types.ts": {
            "lines": 96,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/types/rbac-security-types.ts": {
            "lines": 92,
            "tokens": 687,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/types/auth-provider-types.ts": {
            "lines": 64,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/strategies/jwt-strategy.ts": {
            "lines": 39,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/strategies/basic-auth-strategy.ts": {
            "lines": 71,
            "tokens": 549,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/strategies/api-key-strategy.ts": {
            "lines": 67,
            "tokens": 538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/rbac-engine.ts": {
            "lines": 549,
            "tokens": 4474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/rate-limiter.ts": {
            "lines": 521,
            "tokens": 3627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/index.ts": {
            "lines": 29,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/encryption.service.ts": {
            "lines": 351,
            "tokens": 2757,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/audit-logger.ts": {
            "lines": 715,
            "tokens": 6067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/providers/saml-provider.ts": {
            "lines": 44,
            "tokens": 241,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/providers/oauth-provider.ts": {
            "lines": 90,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/providers/ldap-provider.ts": {
            "lines": 45,
            "tokens": 331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/middleware/session-middleware.ts": {
            "lines": 149,
            "tokens": 1326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/middleware/rbac-middleware.ts": {
            "lines": 84,
            "tokens": 794,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 272,
            "percentage": 23.81,
            "percentageTokens": 34.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/middleware/jwt-middleware.ts": {
            "lines": 90,
            "tokens": 792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/vector-store/vector-store.ts": {
            "lines": 344,
            "tokens": 2524,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/utils/tokenizer.ts": {
            "lines": 128,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/utils/text-splitter.ts": {
            "lines": 147,
            "tokens": 1317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/types/vector-types.ts": {
            "lines": 141,
            "tokens": 968,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/types/llm-types.ts": {
            "lines": 119,
            "tokens": 878,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/types/index.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/types/embedding-types.ts": {
            "lines": 64,
            "tokens": 431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/types/ai-provider-types.ts": {
            "lines": 62,
            "tokens": 435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/providers/index.ts": {
            "lines": 3,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/nodes/index.ts": {
            "lines": 3,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/nodes/ai-embedding-node.ts": {
            "lines": 25,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/nodes/ai-completion-node.ts": {
            "lines": 11,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/nodes/ai-classification-node.ts": {
            "lines": 34,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/nodes/ai-chat-node.ts": {
            "lines": 18,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/embeddings/EmbeddingService.ts": {
            "lines": 288,
            "tokens": 2648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/base/ai-provider.ts": {
            "lines": 91,
            "tokens": 629,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/validation/middleware.ts": {
            "lines": 204,
            "tokens": 1405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/validation/index.ts": {
            "lines": 381,
            "tokens": 3365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utils/auth-forms.ts": {
            "lines": 44,
            "tokens": 331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/string-utils.ts": {
            "lines": 56,
            "tokens": 492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/logging-utils.ts": {
            "lines": 43,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/json-utils.ts": {
            "lines": 33,
            "tokens": 265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/index.ts": {
            "lines": 10,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/date-utils.ts": {
            "lines": 47,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/conditional-utils.ts": {
            "lines": 20,
            "tokens": 235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/utilities/array-utils.ts": {
            "lines": 48,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/workflow.ts": {
            "lines": 157,
            "tokens": 1135,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 160,
            "percentage": 8.28,
            "percentageTokens": 14.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/user.ts": {
            "lines": 162,
            "tokens": 851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/triggers.ts": {
            "lines": 455,
            "tokens": 3488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/test-types.ts": {
            "lines": 13,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/security.ts": {
            "lines": 417,
            "tokens": 3239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/schedules.ts": {
            "lines": 479,
            "tokens": 3717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/index.ts": {
            "lines": 8,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/express.ts": {
            "lines": 33,
            "tokens": 219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/execution.ts": {
            "lines": 146,
            "tokens": 777,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/common.ts": {
            "lines": 164,
            "tokens": 742,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/auth.ts": {
            "lines": 60,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/types/audit.ts": {
            "lines": 363,
            "tokens": 2765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/optimization-utils/file-consolidator.ts": {
            "lines": 47,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/optimization-utils/deduplication-helper.ts": {
            "lines": 41,
            "tokens": 355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/constants/index.ts": {
            "lines": 691,
            "tokens": 3932,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 194,
            "percentage": 4.92,
            "percentageTokens": 4.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/config/shared-config.ts": {
            "lines": 65,
            "tokens": 547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/interfaces.ts": {
            "lines": 24,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/index.ts": {
            "lines": 10,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/enhanced-base-controller.ts": {
            "lines": 148,
            "tokens": 1562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/base-use-cases.ts": {
            "lines": 63,
            "tokens": 655,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/base-service.ts": {
            "lines": 88,
            "tokens": 845,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/base-repository.ts": {
            "lines": 59,
            "tokens": 700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/base/base-controller.ts": {
            "lines": 81,
            "tokens": 769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/api/server.ts": {
            "lines": 198,
            "tokens": 1489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/index.ts": {
            "lines": 15,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/hooks/useTriggers.ts": {
            "lines": 232,
            "tokens": 1727,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/hooks/useSecurity.ts": {
            "lines": 312,
            "tokens": 2187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/hooks/useSchedules.ts": {
            "lines": 267,
            "tokens": 1947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/hooks/useAudit.ts": {
            "lines": 176,
            "tokens": 1388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/index.ts": {
            "lines": 37,
            "tokens": 262,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/core/index.ts": {
            "lines": 58,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/validation.ts": {
            "lines": 75,
            "tokens": 505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/response.ts": {
            "lines": 180,
            "tokens": 1201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/logger.ts": {
            "lines": 67,
            "tokens": 529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/jwt.ts": {
            "lines": 102,
            "tokens": 719,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/utils/asyncHandler.ts": {
            "lines": 91,
            "tokens": 674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/types/workflow.ts": {
            "lines": 61,
            "tokens": 391,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 99,
            "percentage": 18.03,
            "percentageTokens": 25.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/types/express.ts": {
            "lines": 21,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/types/common.ts": {
            "lines": 74,
            "tokens": 477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/WorkflowSchedulerService.ts": {
            "lines": 445,
            "tokens": 3624,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 2.02,
            "percentageTokens": 2.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/TriggerSystemService.ts": {
            "lines": 607,
            "tokens": 5033,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 94,
            "percentage": 1.48,
            "percentageTokens": 1.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/PermissionService.ts": {
            "lines": 318,
            "tokens": 1859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/OperationalTransformService.ts": {
            "lines": 486,
            "tokens": 3951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/ExecutionMonitoringService.ts": {
            "lines": 430,
            "tokens": 3233,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 184,
            "percentage": 4.65,
            "percentageTokens": 5.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/EnterpriseSecurityService.ts": {
            "lines": 148,
            "tokens": 1022,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts": {
            "lines": 557,
            "tokens": 4121,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 77,
            "duplicatedTokens": 717,
            "percentage": 13.82,
            "percentageTokens": 17.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/CollaborationService.ts": {
            "lines": 667,
            "tokens": 4923,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 77,
            "percentage": 1.35,
            "percentageTokens": 1.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/services/AuditService.ts": {
            "lines": 229,
            "tokens": 1773,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/workflow-optimization.ts": {
            "lines": 320,
            "tokens": 1992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/triggers.ts": {
            "lines": 279,
            "tokens": 2216,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 196,
            "percentage": 7.89,
            "percentageTokens": 8.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/security.ts": {
            "lines": 290,
            "tokens": 2147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/schedules.ts": {
            "lines": 303,
            "tokens": 2325,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 60,
            "percentage": 2.64,
            "percentageTokens": 2.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/marketplace.ts": {
            "lines": 421,
            "tokens": 2725,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 184,
            "percentage": 5.23,
            "percentageTokens": 6.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/index.ts": {
            "lines": 57,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/routes/audit.ts": {
            "lines": 240,
            "tokens": 1934,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 60,
            "percentage": 3.33,
            "percentageTokens": 3.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/monitoring/metrics.ts": {
            "lines": 23,
            "tokens": 196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/monitoring/index.ts": {
            "lines": 28,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/monitoring/alerts.ts": {
            "lines": 37,
            "tokens": 293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/Workflow.ts": {
            "lines": 233,
            "tokens": 2064,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 110,
            "percentage": 3.86,
            "percentageTokens": 5.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/User.ts": {
            "lines": 272,
            "tokens": 2168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/Organization.ts": {
            "lines": 237,
            "tokens": 1733,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/Operation.ts": {
            "lines": 290,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/Execution.ts": {
            "lines": 209,
            "tokens": 1981,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 98,
            "percentage": 6.7,
            "percentageTokens": 4.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/Comment.ts": {
            "lines": 342,
            "tokens": 2409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/models/CollaborationSession.ts": {
            "lines": 261,
            "tokens": 1991,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/errorHandlers.ts": {
            "lines": 117,
            "tokens": 1081,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/enhancedErrorHandlers.ts": {
            "lines": 11,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/debugging.ts": {
            "lines": 487,
            "tokens": 3613,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 150,
            "percentage": 3.7,
            "percentageTokens": 4.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/auth.ts": {
            "lines": 369,
            "tokens": 2947,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 288,
            "percentage": 7.05,
            "percentageTokens": 9.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/interfaces/IService.ts": {
            "lines": 50,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/interfaces/IRepository.ts": {
            "lines": 18,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/interfaces/IController.ts": {
            "lines": 31,
            "tokens": 252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/domains/index.ts": {
            "lines": 8,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/database/index.ts": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/controllers/test.controller.ts": {
            "lines": 10,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/constants/nodeTypes.ts": {
            "lines": 47,
            "tokens": 262,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 34,
            "duplicatedTokens": 194,
            "percentage": 72.34,
            "percentageTokens": 74.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/constants/index.ts": {
            "lines": 7,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/constants/httpStatus.ts": {
            "lines": 41,
            "tokens": 299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/constants/execution.ts": {
            "lines": 32,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/constants/database.ts": {
            "lines": 40,
            "tokens": 360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/config/index.ts": {
            "lines": 5,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/config/database.ts": {
            "lines": 42,
            "tokens": 295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/config/ConfigService.ts": {
            "lines": 36,
            "tokens": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/common/index.ts": {
            "lines": 239,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/base/BaseRepository.ts": {
            "lines": 97,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/base/BaseController.ts": {
            "lines": 92,
            "tokens": 771,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/index.ts": {
            "lines": 24,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/index.ts": {
            "lines": 65,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/bundle-size-analyzer.ts": {
            "lines": 378,
            "tokens": 3436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/build-time-analyzer.ts": {
            "lines": 189,
            "tokens": 1636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/index.ts": {
            "lines": 14,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/index.ts": {
            "lines": 301,
            "tokens": 1714,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/sso.ts": {
            "lines": 62,
            "tokens": 428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac.ts": {
            "lines": 32,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/index.ts": {
            "lines": 36,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/compliance.ts": {
            "lines": 52,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/audit.ts": {
            "lines": 33,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/shared.ts": {
            "lines": 15,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/index.ts": {
            "lines": 64,
            "tokens": 542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/index.ts": {
            "lines": 9,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/cli.ts": {
            "lines": 84,
            "tokens": 647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/index.ts": {
            "lines": 53,
            "tokens": 234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/workflow-optimizer.ts": {
            "lines": 724,
            "tokens": 5386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/workflow-ai-assistant.ts": {
            "lines": 314,
            "tokens": 1984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/prompt-template.ts": {
            "lines": 252,
            "tokens": 2382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/optimization-engine.ts": {
            "lines": 691,
            "tokens": 5575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/llm-manager.ts": {
            "lines": 142,
            "tokens": 1206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/index.ts": {
            "lines": 13,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/ai-registry.ts": {
            "lines": 261,
            "tokens": 1746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/shared/src/index.ts": {
            "lines": 28,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/backend/src/server.ts": {
            "lines": 76,
            "tokens": 603,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 116131,
          "tokens": 875243,
          "sources": 681,
          "clones": 166,
          "duplicatedLines": 2559,
          "duplicatedTokens": 22964,
          "percentage": 2.2,
          "percentageTokens": 2.62,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode/ContainerNode.tsx": {
            "lines": 254,
            "tokens": 2128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/index.tsx": {
            "lines": 88,
            "tokens": 701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeToolbar.tsx": {
            "lines": 42,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeMenu.tsx": {
            "lines": 70,
            "tokens": 412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeHandles.tsx": {
            "lines": 118,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeHandles.legacy.tsx": {
            "lines": 273,
            "tokens": 1458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailTriggerNodeBody.tsx": {
            "lines": 186,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailPropertiesPanel.tsx": {
            "lines": 561,
            "tokens": 3879,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/DatabaseNode/DatabaseNodeBody.tsx": {
            "lines": 186,
            "tokens": 1327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/RegistryNode.tsx": {
            "lines": 208,
            "tokens": 1358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/CustomNodeToolbar.tsx": {
            "lines": 37,
            "tokens": 223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode.tsx": {
            "lines": 98,
            "tokens": 687,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode.legacy.tsx": {
            "lines": 215,
            "tokens": 1718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/shared/TestCredentialButton.tsx": {
            "lines": 18,
            "tokens": 138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/shared/CredentialNameField.tsx": {
            "lines": 2,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/GmailCredentialForm/index.tsx": {
            "lines": 15,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/GmailCredentialForm/GmailSetupSteps.tsx": {
            "lines": 2,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/AIProviderCredentialForm/index.tsx": {
            "lines": 23,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/AIProviderCredentialForm/AIProviderFields.tsx": {
            "lines": 13,
            "tokens": 158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/overlay/dialog.tsx": {
            "lines": 33,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/field.tsx": {
            "lines": 38,
            "tokens": 286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormLabel.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormInput.tsx": {
            "lines": 17,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormField.tsx": {
            "lines": 6,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/tab-container.tsx": {
            "lines": 21,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/modal.tsx": {
            "lines": 28,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/button.tsx": {
            "lines": 7,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/alert.tsx": {
            "lines": 3,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageHeader.tsx": {
            "lines": 6,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageFooter.tsx": {
            "lines": 0,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageContainer.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layout/BasePage.tsx": {
            "lines": 230,
            "tokens": 1613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/form/BasePropertyRenderer.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/data/SharedDataVisualizationPanel.tsx": {
            "lines": 54,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/PropertyField.tsx": {
            "lines": 342,
            "tokens": 2431,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 288,
            "percentage": 9.94,
            "percentageTokens": 11.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/EnhancedNodeToolbar.tsx": {
            "lines": 61,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/ErrorBoundary/GlobalErrorBoundary.tsx": {
            "lines": 39,
            "tokens": 337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/TableView.tsx": {
            "lines": 107,
            "tokens": 959,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/SchemaView.tsx": {
            "lines": 104,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/JsonView.tsx": {
            "lines": 289,
            "tokens": 2065,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/DataVisualizationPanel.tsx": {
            "lines": 126,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/StatusBadge.tsx": {
            "lines": 5,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/NodeIcon.tsx": {
            "lines": 3,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx": {
            "lines": 64,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx": {
            "lines": 278,
            "tokens": 1946,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 118,
            "duplicatedTokens": 798,
            "percentage": 42.45,
            "percentageTokens": 41.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/custom-nodes/GmailNodeBody.tsx": {
            "lines": 155,
            "tokens": 1174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/TransformAssignmentCollection.tsx": {
            "lines": 393,
            "tokens": 3113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.tsx": {
            "lines": 65,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx": {
            "lines": 745,
            "tokens": 6209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/NodeHandle.tsx": {
            "lines": 59,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/NodeBadge.tsx": {
            "lines": 36,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/EnhancedTransformPropertyPanel.tsx": {
            "lines": 301,
            "tokens": 2567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/ConditionalPropertyRenderer.tsx": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/bodies/DatabaseNodeBody.tsx": {
            "lines": 39,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowTester/WorkflowTester.tsx": {
            "lines": 238,
            "tokens": 2047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/WorkflowTemplatesPanel.tsx": {
            "lines": 477,
            "tokens": 3603,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 116,
            "percentage": 2.52,
            "percentageTokens": 3.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/UserPresenceOverlay.tsx": {
            "lines": 187,
            "tokens": 1288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/SchedulingPanel.tsx": {
            "lines": 471,
            "tokens": 3611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodePropertyPanel.tsx": {
            "lines": 192,
            "tokens": 1493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionToolbar.tsx": {
            "lines": 69,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionStateOverlay.tsx": {
            "lines": 8,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionPanel.tsx": {
            "lines": 247,
            "tokens": 2053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedWorkflowCanvas.tsx": {
            "lines": 140,
            "tokens": 855,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedPropertyRenderer.tsx": {
            "lines": 401,
            "tokens": 3276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailOutputPanel.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailOutputPanel.legacy.tsx": {
            "lines": 8,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailInputPanel.tsx": {
            "lines": 124,
            "tokens": 933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.tsx": {
            "lines": 33,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx": {
            "lines": 582,
            "tokens": 4359,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 170,
            "percentage": 4.81,
            "percentageTokens": 3.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DebugPanel.tsx": {
            "lines": 551,
            "tokens": 4638,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DataInspector.tsx": {
            "lines": 467,
            "tokens": 4074,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CustomEdge.tsx": {
            "lines": 92,
            "tokens": 625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx": {
            "lines": 431,
            "tokens": 3170,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 404,
            "duplicatedTokens": 3038,
            "percentage": 93.74,
            "percentageTokens": 95.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.tsx": {
            "lines": 50,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx": {
            "lines": 433,
            "tokens": 3173,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 404,
            "duplicatedTokens": 3038,
            "percentage": 93.3,
            "percentageTokens": 95.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ContainerNodePanel.tsx": {
            "lines": 210,
            "tokens": 1722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConnectionLine.tsx": {
            "lines": 11,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionalBranchingPanel.tsx": {
            "lines": 388,
            "tokens": 3122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx": {
            "lines": 441,
            "tokens": 3826,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 156,
            "duplicatedTokens": 1398,
            "percentage": 35.37,
            "percentageTokens": 36.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CommentAnnotations.tsx": {
            "lines": 267,
            "tokens": 1891,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 212,
            "percentage": 10.11,
            "percentageTokens": 11.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CollaborationPanel.tsx": {
            "lines": 498,
            "tokens": 3857,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 212,
            "percentage": 5.42,
            "percentageTokens": 5.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AnalyticsDashboard.tsx": {
            "lines": 620,
            "tokens": 4754,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 230,
            "percentage": 3.23,
            "percentageTokens": 4.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AdvancedPropertyPanel.tsx": {
            "lines": 384,
            "tokens": 3349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AdvancedNodePanel.tsx": {
            "lines": 164,
            "tokens": 1329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx": {
            "lines": 56,
            "tokens": 385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAssistantPanel.tsx": {
            "lines": 341,
            "tokens": 2561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentOutputPanel.tsx": {
            "lines": 36,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx": {
            "lines": 249,
            "tokens": 2561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/SecurityDashboard/SecurityDashboard.tsx": {
            "lines": 706,
            "tokens": 5978,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PublishPlugin.tsx": {
            "lines": 281,
            "tokens": 2247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginMarketplace.tsx": {
            "lines": 267,
            "tokens": 2191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginDetails.tsx": {
            "lines": 239,
            "tokens": 2062,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginCard.tsx": {
            "lines": 106,
            "tokens": 933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/OrganizationManagement/OrganizationSettings.tsx": {
            "lines": 385,
            "tokens": 2697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Onboarding/OnboardingTour.tsx": {
            "lines": 419,
            "tokens": 3197,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 130,
            "duplicatedTokens": 1094,
            "percentage": 31.03,
            "percentageTokens": 34.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Sidebar.tsx": {
            "lines": 127,
            "tokens": 1023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/ResponsiveLayout.tsx": {
            "lines": 268,
            "tokens": 1912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Layout.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Header.tsx": {
            "lines": 39,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/SocialProof.tsx": {
            "lines": 94,
            "tokens": 794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/PricingSection.tsx": {
            "lines": 290,
            "tokens": 2563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/IntegrationEcosystem.tsx": {
            "lines": 69,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/HeroSection.tsx": {
            "lines": 79,
            "tokens": 640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/Header.tsx": {
            "lines": 172,
            "tokens": 1268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/Footer.tsx": {
            "lines": 20,
            "tokens": 185,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/FeatureShowcase.tsx": {
            "lines": 170,
            "tokens": 1174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/EnterpriseFeatures.tsx": {
            "lines": 65,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/CompetitiveAdvantage.tsx": {
            "lines": 28,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/ComparisonTable.tsx": {
            "lines": 106,
            "tokens": 844,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/CallToAction.tsx": {
            "lines": 60,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Integrations/IntegrationEcosystem.tsx": {
            "lines": 389,
            "tokens": 3214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/ExecutionHistory/ExecutionHistory.tsx": {
            "lines": 235,
            "tokens": 1943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/EnterpriseDashboard/EnterpriseDashboard.tsx": {
            "lines": 569,
            "tokens": 4345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Community/CommunityHub.tsx": {
            "lines": 508,
            "tokens": 3821,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Auth/ProtectedRoute.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/AuditDashboard/AuditDashboard.tsx": {
            "lines": 375,
            "tokens": 3019,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Analytics/AnalyticsDashboard.tsx": {
            "lines": 387,
            "tokens": 3005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Accessibility/AccessibilityProvider.tsx": {
            "lines": 145,
            "tokens": 768,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/utils/withHOC.tsx": {
            "lines": 22,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/PageGenerator.tsx": {
            "lines": 179,
            "tokens": 1407,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 150,
            "duplicatedTokens": 1112,
            "percentage": 83.8,
            "percentageTokens": 79.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/ComponentGenerator.tsx": {
            "lines": 450,
            "tokens": 3379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/VirtualizedList.tsx": {
            "lines": 60,
            "tokens": 472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/UniversalForm.tsx": {
            "lines": 195,
            "tokens": 1435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/TestResultDisplay.tsx": {
            "lines": 0,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx": {
            "lines": 372,
            "tokens": 3460,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 192,
            "duplicatedTokens": 1640,
            "percentage": 51.61,
            "percentageTokens": 47.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PageLayout.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/JsonViewer.tsx": {
            "lines": 26,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DynamicLayout.tsx": {
            "lines": 301,
            "tokens": 2160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/BasePage.tsx": {
            "lines": 0,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/AuthForm.tsx": {
            "lines": 51,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/utils/performance.tsx": {
            "lines": 7,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/WorkflowEditor.tsx": {
            "lines": 4,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/WorkflowEditor.legacy.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.tsx": {
            "lines": 49,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.legacy.tsx": {
            "lines": 288,
            "tokens": 2235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/SelfHosted.tsx": {
            "lines": 162,
            "tokens": 1316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Roadmap.tsx": {
            "lines": 210,
            "tokens": 1807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx": {
            "lines": 302,
            "tokens": 2152,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 76,
            "duplicatedTokens": 533,
            "percentage": 25.17,
            "percentageTokens": 24.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Privacy.tsx": {
            "lines": 160,
            "tokens": 1215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/PricingPage.tsx": {
            "lines": 188,
            "tokens": 1540,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx": {
            "lines": 162,
            "tokens": 1237,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 76,
            "duplicatedTokens": 533,
            "percentage": 46.91,
            "percentageTokens": 43.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.legacy.tsx": {
            "lines": 2,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/IntegrationsPage.tsx": {
            "lines": 89,
            "tokens": 630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx": {
            "lines": 90,
            "tokens": 603,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx": {
            "lines": 95,
            "tokens": 750,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Features.tsx": {
            "lines": 36,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx": {
            "lines": 87,
            "tokens": 702,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 41,
            "duplicatedTokens": 340,
            "percentage": 47.13,
            "percentageTokens": 48.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx": {
            "lines": 115,
            "tokens": 1079,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 41,
            "duplicatedTokens": 340,
            "percentage": 35.65,
            "percentageTokens": 31.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Enterprise.tsx": {
            "lines": 265,
            "tokens": 2000,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/EnhancedDashboard.tsx": {
            "lines": 276,
            "tokens": 2146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Documentation.tsx": {
            "lines": 178,
            "tokens": 1367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.legacy.tsx": {
            "lines": 159,
            "tokens": 1388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.tsx": {
            "lines": 70,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.legacy.tsx": {
            "lines": 262,
            "tokens": 2152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Contact.tsx": {
            "lines": 117,
            "tokens": 1069,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/About.tsx": {
            "lines": 204,
            "tokens": 1816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/APIReference.tsx": {
            "lines": 264,
            "tokens": 2162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx": {
            "lines": 162,
            "tokens": 981,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 144,
            "duplicatedTokens": 988,
            "percentage": 88.89,
            "percentageTokens": 100.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx": {
            "lines": 161,
            "tokens": 926,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 64,
            "duplicatedTokens": 410,
            "percentage": 39.75,
            "percentageTokens": 44.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/components/TestComponent.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/App.tsx": {
            "lines": 51,
            "tokens": 723,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/main.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 27407,
          "tokens": 213969,
          "sources": 163,
          "clones": 21,
          "duplicatedLines": 1072,
          "duplicatedTokens": 8245,
          "percentage": 3.91,
          "percentageTokens": 3.85,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode/ContainerNode.tsx": {
            "lines": 380,
            "tokens": 3020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/index.tsx": {
            "lines": 252,
            "tokens": 2017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeToolbar.tsx": {
            "lines": 77,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeMenu.tsx": {
            "lines": 125,
            "tokens": 812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeHandles.tsx": {
            "lines": 242,
            "tokens": 1665,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/BaseNode/NodeHandles.legacy.tsx": {
            "lines": 360,
            "tokens": 1965,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailTriggerNodeBody.tsx": {
            "lines": 372,
            "tokens": 2760,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 202,
            "percentage": 6.72,
            "percentageTokens": 7.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailPropertiesPanel.tsx": {
            "lines": 729,
            "tokens": 5257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/DatabaseNode/DatabaseNodeBody.tsx": {
            "lines": 354,
            "tokens": 2728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/RegistryNode.tsx": {
            "lines": 345,
            "tokens": 2571,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 83,
            "percentage": 2.61,
            "percentageTokens": 3.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/CustomNodeToolbar.tsx": {
            "lines": 98,
            "tokens": 644,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode.tsx": {
            "lines": 364,
            "tokens": 2611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode.legacy.tsx": {
            "lines": 456,
            "tokens": 3581,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 85,
            "percentage": 1.97,
            "percentageTokens": 2.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/shared/TestCredentialButton.tsx": {
            "lines": 66,
            "tokens": 380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/shared/CredentialNameField.tsx": {
            "lines": 44,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/GmailCredentialForm/index.tsx": {
            "lines": 68,
            "tokens": 344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/GmailCredentialForm/GmailSetupSteps.tsx": {
            "lines": 20,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/AIProviderCredentialForm/index.tsx": {
            "lines": 95,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Credentials/AIProviderCredentialForm/AIProviderFields.tsx": {
            "lines": 55,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/overlay/dialog.tsx": {
            "lines": 180,
            "tokens": 956,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/field.tsx": {
            "lines": 140,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormLabel.tsx": {
            "lines": 35,
            "tokens": 180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormInput.tsx": {
            "lines": 48,
            "tokens": 291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/form/FormField.tsx": {
            "lines": 28,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/tab-container.tsx": {
            "lines": 88,
            "tokens": 435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/modal.tsx": {
            "lines": 102,
            "tokens": 533,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 62,
            "percentage": 4.9,
            "percentageTokens": 11.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/button.tsx": {
            "lines": 88,
            "tokens": 428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/alert.tsx": {
            "lines": 104,
            "tokens": 738,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageHeader.tsx": {
            "lines": 44,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageFooter.tsx": {
            "lines": 34,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layouts/PageContainer.tsx": {
            "lines": 41,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layout/BasePage.tsx": {
            "lines": 327,
            "tokens": 2343,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 124,
            "percentage": 3.67,
            "percentageTokens": 5.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/form/BasePropertyRenderer.tsx": {
            "lines": 40,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/data/SharedDataVisualizationPanel.tsx": {
            "lines": 193,
            "tokens": 1569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/PropertyField.tsx": {
            "lines": 457,
            "tokens": 3362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/EnhancedNodeToolbar.tsx": {
            "lines": 368,
            "tokens": 2907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/ErrorBoundary/GlobalErrorBoundary.tsx": {
            "lines": 195,
            "tokens": 1506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/TableView.tsx": {
            "lines": 348,
            "tokens": 3166,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 127,
            "percentage": 4.02,
            "percentageTokens": 4.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/SchemaView.tsx": {
            "lines": 255,
            "tokens": 2171,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 127,
            "percentage": 5.49,
            "percentageTokens": 5.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/JsonView.tsx": {
            "lines": 440,
            "tokens": 2728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/DataVisualizationPanel.tsx": {
            "lines": 279,
            "tokens": 2419,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 69,
            "percentage": 2.51,
            "percentageTokens": 2.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/StatusBadge.tsx": {
            "lines": 98,
            "tokens": 599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/NodeLabel.tsx": {
            "lines": 45,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/NodeIcon.tsx": {
            "lines": 52,
            "tokens": 414,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 83,
            "percentage": 17.31,
            "percentageTokens": 20.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx": {
            "lines": 105,
            "tokens": 653,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 232,
            "percentage": 26.67,
            "percentageTokens": 35.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx": {
            "lines": 548,
            "tokens": 4055,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 174,
            "percentage": 4.38,
            "percentageTokens": 4.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/custom-nodes/GmailNodeBody.tsx": {
            "lines": 251,
            "tokens": 1880,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 202,
            "percentage": 9.96,
            "percentageTokens": 10.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/TransformAssignmentCollection.tsx": {
            "lines": 481,
            "tokens": 3781,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 89,
            "percentage": 1.46,
            "percentageTokens": 2.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.tsx": {
            "lines": 334,
            "tokens": 2560,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 195,
            "percentage": 6.59,
            "percentageTokens": 7.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx": {
            "lines": 882,
            "tokens": 7347,
            "sources": 1,
            "clones": 17,
            "duplicatedLines": 222,
            "duplicatedTokens": 1761,
            "percentage": 25.17,
            "percentageTokens": 23.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyField.tsx": {
            "lines": 3,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/NodeHandle.tsx": {
            "lines": 284,
            "tokens": 2070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/NodeBadge.tsx": {
            "lines": 207,
            "tokens": 1748,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/EnhancedTransformPropertyPanel.tsx": {
            "lines": 461,
            "tokens": 3929,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 89,
            "percentage": 1.52,
            "percentageTokens": 2.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/EnhancedNodeToolbar.tsx": {
            "lines": 3,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/ConditionalPropertyRenderer.tsx": {
            "lines": 404,
            "tokens": 3204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/bodies/DatabaseNodeBody.tsx": {
            "lines": 97,
            "tokens": 874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowTester/WorkflowTester.tsx": {
            "lines": 390,
            "tokens": 3521,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 430,
            "percentage": 9.23,
            "percentageTokens": 12.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/WorkflowTemplatesPanel.tsx": {
            "lines": 699,
            "tokens": 5413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/UserPresenceOverlay.tsx": {
            "lines": 333,
            "tokens": 2246,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 378,
            "percentage": 13.51,
            "percentageTokens": 16.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/SchedulingPanel.tsx": {
            "lines": 757,
            "tokens": 6108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodePropertyPanel.tsx": {
            "lines": 563,
            "tokens": 4612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionToolbar.tsx": {
            "lines": 286,
            "tokens": 2315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionStateOverlay.tsx": {
            "lines": 148,
            "tokens": 972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ExecutionPanel.tsx": {
            "lines": 396,
            "tokens": 3246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedWorkflowCanvas.tsx": {
            "lines": 308,
            "tokens": 2395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedPropertyRenderer.tsx": {
            "lines": 492,
            "tokens": 3897,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 260,
            "percentage": 6.5,
            "percentageTokens": 6.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailOutputPanel.tsx": {
            "lines": 171,
            "tokens": 1294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailOutputPanel.legacy.tsx": {
            "lines": 103,
            "tokens": 815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailInputPanel.tsx": {
            "lines": 260,
            "tokens": 1997,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 69,
            "percentage": 2.69,
            "percentageTokens": 3.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.tsx": {
            "lines": 212,
            "tokens": 1511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx": {
            "lines": 755,
            "tokens": 5681,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 350,
            "percentage": 5.3,
            "percentageTokens": 6.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DebugPanel.tsx": {
            "lines": 805,
            "tokens": 6554,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DataInspector.tsx": {
            "lines": 613,
            "tokens": 5288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CustomEdge.tsx": {
            "lines": 310,
            "tokens": 2298,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 80,
            "duplicatedTokens": 528,
            "percentage": 25.81,
            "percentageTokens": 22.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx": {
            "lines": 802,
            "tokens": 6208,
            "sources": 1,
            "clones": 21,
            "duplicatedLines": 663,
            "duplicatedTokens": 5296,
            "percentage": 82.67,
            "percentageTokens": 85.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.tsx": {
            "lines": 365,
            "tokens": 2708,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 2.19,
            "percentageTokens": 3.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx": {
            "lines": 781,
            "tokens": 6055,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 650,
            "duplicatedTokens": 5145,
            "percentage": 83.23,
            "percentageTokens": 84.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ContainerNodePanel.tsx": {
            "lines": 375,
            "tokens": 2830,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 85,
            "percentage": 2.4,
            "percentageTokens": 3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConnectionLine.tsx": {
            "lines": 174,
            "tokens": 1243,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 80,
            "duplicatedTokens": 528,
            "percentage": 45.98,
            "percentageTokens": 42.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionalBranchingPanel.tsx": {
            "lines": 779,
            "tokens": 6596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx": {
            "lines": 562,
            "tokens": 4960,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 81,
            "duplicatedTokens": 770,
            "percentage": 14.41,
            "percentageTokens": 15.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CommentAnnotations.tsx": {
            "lines": 449,
            "tokens": 3362,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 236,
            "percentage": 6.24,
            "percentageTokens": 7.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CollaborationPanel.tsx": {
            "lines": 681,
            "tokens": 5263,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 142,
            "percentage": 2.5,
            "percentageTokens": 2.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AnalyticsDashboard.tsx": {
            "lines": 757,
            "tokens": 5512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AdvancedPropertyPanel.tsx": {
            "lines": 492,
            "tokens": 4161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AdvancedNodePanel.tsx": {
            "lines": 480,
            "tokens": 4181,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx": {
            "lines": 160,
            "tokens": 1015,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 48,
            "duplicatedTokens": 318,
            "percentage": 30,
            "percentageTokens": 31.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAssistantPanel.tsx": {
            "lines": 603,
            "tokens": 4548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentOutputPanel.tsx": {
            "lines": 262,
            "tokens": 2348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx": {
            "lines": 371,
            "tokens": 3693,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 63,
            "duplicatedTokens": 562,
            "percentage": 16.98,
            "percentageTokens": 15.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/SecurityDashboard/SecurityDashboard.tsx": {
            "lines": 924,
            "tokens": 7750,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PublishPlugin.tsx": {
            "lines": 475,
            "tokens": 3750,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 352,
            "percentage": 7.16,
            "percentageTokens": 9.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginMarketplace.tsx": {
            "lines": 394,
            "tokens": 3138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginDetails.tsx": {
            "lines": 371,
            "tokens": 2967,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 284,
            "percentage": 8.89,
            "percentageTokens": 9.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginCard.tsx": {
            "lines": 185,
            "tokens": 1559,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 284,
            "percentage": 17.84,
            "percentageTokens": 18.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/OrganizationManagement/OrganizationSettings.tsx": {
            "lines": 564,
            "tokens": 4179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Onboarding/OnboardingTour.tsx": {
            "lines": 572,
            "tokens": 4259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Sidebar.tsx": {
            "lines": 191,
            "tokens": 1598,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 179,
            "percentage": 10.99,
            "percentageTokens": 11.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/ResponsiveLayout.tsx": {
            "lines": 535,
            "tokens": 4053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Layout.tsx": {
            "lines": 32,
            "tokens": 265,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 68,
            "percentage": 25,
            "percentageTokens": 25.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Header.tsx": {
            "lines": 113,
            "tokens": 906,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 33,
            "duplicatedTokens": 279,
            "percentage": 29.2,
            "percentageTokens": 30.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/SocialProof.tsx": {
            "lines": 238,
            "tokens": 1882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/PricingSection.tsx": {
            "lines": 509,
            "tokens": 3926,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/IntegrationEcosystem.tsx": {
            "lines": 283,
            "tokens": 2037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/HeroSection.tsx": {
            "lines": 161,
            "tokens": 1290,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 68,
            "percentage": 4.97,
            "percentageTokens": 5.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/Header.tsx": {
            "lines": 373,
            "tokens": 2595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/Footer.tsx": {
            "lines": 245,
            "tokens": 2007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/FeatureShowcase.tsx": {
            "lines": 459,
            "tokens": 3529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/EnterpriseFeatures.tsx": {
            "lines": 219,
            "tokens": 1818,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/CompetitiveAdvantage.tsx": {
            "lines": 144,
            "tokens": 965,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/ComparisonTable.tsx": {
            "lines": 510,
            "tokens": 3699,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 124,
            "percentage": 1.96,
            "percentageTokens": 3.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/CallToAction.tsx": {
            "lines": 136,
            "tokens": 1075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Integrations/IntegrationEcosystem.tsx": {
            "lines": 720,
            "tokens": 5563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/ExecutionHistory/ExecutionHistory.tsx": {
            "lines": 397,
            "tokens": 3396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/EnterpriseDashboard/EnterpriseDashboard.tsx": {
            "lines": 920,
            "tokens": 7054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Community/CommunityHub.tsx": {
            "lines": 781,
            "tokens": 5610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Auth/ProtectedRoute.tsx": {
            "lines": 38,
            "tokens": 327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/AuditDashboard/AuditDashboard.tsx": {
            "lines": 735,
            "tokens": 6220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Analytics/AnalyticsDashboard.tsx": {
            "lines": 695,
            "tokens": 5209,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 43,
            "duplicatedTokens": 374,
            "percentage": 6.19,
            "percentageTokens": 7.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Accessibility/AccessibilityProvider.tsx": {
            "lines": 463,
            "tokens": 3265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/utils/withHOC.tsx": {
            "lines": 140,
            "tokens": 1420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/PageGenerator.tsx": {
            "lines": 415,
            "tokens": 2977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/ComponentGenerator.tsx": {
            "lines": 539,
            "tokens": 4101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/VirtualizedList.tsx": {
            "lines": 231,
            "tokens": 1520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/UniversalForm.tsx": {
            "lines": 394,
            "tokens": 3239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/TestResultDisplay.tsx": {
            "lines": 33,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx": {
            "lines": 435,
            "tokens": 3880,
            "sources": 1,
            "clones": 22,
            "duplicatedLines": 170,
            "duplicatedTokens": 2296,
            "percentage": 39.08,
            "percentageTokens": 59.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PageLayout.tsx": {
            "lines": 28,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/JsonViewer.tsx": {
            "lines": 115,
            "tokens": 867,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DynamicLayout.tsx": {
            "lines": 416,
            "tokens": 3004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/BasePage.tsx": {
            "lines": 45,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/AuthForm.tsx": {
            "lines": 97,
            "tokens": 791,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/utils/performance.tsx": {
            "lines": 491,
            "tokens": 4217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/WorkflowEditor.tsx": {
            "lines": 165,
            "tokens": 1207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/WorkflowEditor.legacy.tsx": {
            "lines": 65,
            "tokens": 514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx": {
            "lines": 212,
            "tokens": 1754,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 119,
            "duplicatedTokens": 918,
            "percentage": 56.13,
            "percentageTokens": 52.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.tsx": {
            "lines": 331,
            "tokens": 2435,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 338,
            "percentage": 15.41,
            "percentageTokens": 13.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.legacy.tsx": {
            "lines": 438,
            "tokens": 3448,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 51,
            "duplicatedTokens": 338,
            "percentage": 11.64,
            "percentageTokens": 9.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/SelfHosted.tsx": {
            "lines": 454,
            "tokens": 3303,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 43,
            "duplicatedTokens": 340,
            "percentage": 9.47,
            "percentageTokens": 10.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Roadmap.tsx": {
            "lines": 591,
            "tokens": 4708,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 223,
            "percentage": 4.91,
            "percentageTokens": 4.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx": {
            "lines": 538,
            "tokens": 4052,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 219,
            "duplicatedTokens": 1664,
            "percentage": 40.71,
            "percentageTokens": 41.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Privacy.tsx": {
            "lines": 400,
            "tokens": 3216,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 128,
            "percentage": 4.25,
            "percentageTokens": 3.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/PricingPage.tsx": {
            "lines": 587,
            "tokens": 4131,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 38,
            "duplicatedTokens": 282,
            "percentage": 6.47,
            "percentageTokens": 6.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx": {
            "lines": 324,
            "tokens": 2543,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 219,
            "duplicatedTokens": 1664,
            "percentage": 67.59,
            "percentageTokens": 65.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.legacy.tsx": {
            "lines": 30,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/LandingPage.tsx": {
            "lines": 57,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/IntegrationsPage.tsx": {
            "lines": 464,
            "tokens": 3584,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 120,
            "percentage": 3.23,
            "percentageTokens": 3.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx": {
            "lines": 243,
            "tokens": 1950,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 56,
            "duplicatedTokens": 539,
            "percentage": 23.05,
            "percentageTokens": 27.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx": {
            "lines": 231,
            "tokens": 1972,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 56,
            "duplicatedTokens": 539,
            "percentage": 24.24,
            "percentageTokens": 27.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Features.tsx": {
            "lines": 447,
            "tokens": 2832,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 113,
            "percentage": 3.36,
            "percentageTokens": 3.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx": {
            "lines": 285,
            "tokens": 2446,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 150,
            "duplicatedTokens": 1484,
            "percentage": 52.63,
            "percentageTokens": 60.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx": {
            "lines": 286,
            "tokens": 2611,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 160,
            "duplicatedTokens": 1589,
            "percentage": 55.94,
            "percentageTokens": 60.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Enterprise.tsx": {
            "lines": 660,
            "tokens": 4432,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 318,
            "percentage": 5.91,
            "percentageTokens": 7.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/EnhancedDashboard.tsx": {
            "lines": 560,
            "tokens": 4035,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 43,
            "duplicatedTokens": 374,
            "percentage": 7.68,
            "percentageTokens": 9.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Documentation.tsx": {
            "lines": 593,
            "tokens": 4278,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 191,
            "percentage": 4.22,
            "percentageTokens": 4.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.tsx": {
            "lines": 152,
            "tokens": 1120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.legacy.tsx": {
            "lines": 322,
            "tokens": 2796,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 311,
            "percentage": 10.87,
            "percentageTokens": 11.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.tsx": {
            "lines": 358,
            "tokens": 2777,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 204,
            "percentage": 3.91,
            "percentageTokens": 7.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.legacy.tsx": {
            "lines": 427,
            "tokens": 3549,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 27,
            "duplicatedTokens": 310,
            "percentage": 6.32,
            "percentageTokens": 8.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Contact.tsx": {
            "lines": 387,
            "tokens": 2806,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 266,
            "percentage": 8.79,
            "percentageTokens": 9.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/About.tsx": {
            "lines": 493,
            "tokens": 3807,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 114,
            "percentage": 3.04,
            "percentageTokens": 2.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/APIReference.tsx": {
            "lines": 745,
            "tokens": 4928,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 257,
            "percentage": 4.16,
            "percentageTokens": 5.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx": {
            "lines": 228,
            "tokens": 1553,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 359,
            "percentage": 20.18,
            "percentageTokens": 23.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx": {
            "lines": 218,
            "tokens": 1373,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 359,
            "percentage": 21.1,
            "percentageTokens": 26.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/RouteTransition.tsx": {
            "lines": 26,
            "tokens": 203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/components/TestComponent.tsx": {
            "lines": 12,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/App.tsx": {
            "lines": 135,
            "tokens": 1331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/main.tsx": {
            "lines": 39,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 55549,
          "tokens": 427710,
          "sources": 169,
          "clones": 129,
          "duplicatedLines": 2156,
          "duplicatedTokens": 18270,
          "percentage": 3.88,
          "percentageTokens": 4.27,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/TransformAssignmentCollection.tsx": {
            "lines": 14,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/EnhancedTransformPropertyPanel.tsx": {
            "lines": 8,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Accessibility/AccessibilityProvider.tsx": {
            "lines": 109,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 131,
          "tokens": 492,
          "sources": 3,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 199218,
      "tokens": 1517414,
      "sources": 1016,
      "clones": 316,
      "duplicatedLines": 5787,
      "duplicatedTokens": 49479,
      "percentage": 2.9,
      "percentageTokens": 3.26,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "},\n      inputs: ['data', 'dataset'],\n      outputs: ['model', 'ai_model', 'metrics'],\n      credentials: [\n        { name: 'huggingFaceApi', required: false },\n        { name: 'awsApi', required: false },\n        { name: 'gcpApi', required: false },\n      ],\n      polling: true,\n    });\n  }\n\n  protected getNodeIcon(): string {\n    return '🤖';\n  }\n\n  protected getDefaultColor(): string {\n    return '#3b82f6';\n  }\n\n  protected",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/nodeDefinition.legacy.ts",
        "start": 19,
        "end": 39,
        "startLoc": {
          "line": 19,
          "column": 7,
          "position": 108
        },
        "endLoc": {
          "line": 39,
          "column": 10,
          "position": 260
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/nodeDefinition.ts",
        "start": 27,
        "end": 49,
        "startLoc": {
          "line": 27,
          "column": 7,
          "position": 124
        },
        "endLoc": {
          "line": 49,
          "column": 6,
          "position": 276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 89,
      "fragment": ",\n      },\n    ];\n  }\n\n  /**\n   * Convert PropertyRendererConfigs to legacy NodeProperty format for compatibility\n   */\n  protected getProperties(): NodeProperty[] {\n    const configs = this.getPropertyConfigs();\n    return configs.map((config) => this.convertConfigToNodeProperty(config));\n  }\n\n  /**\n   * Convert PropertyRendererConfig to NodeProperty for backward compatibility\n   */\n  private convertConfigToNodeProperty(config: PropertyRendererConfig): NodeProperty {\n    return {\n      displayName: config.label,\n      name: config.id,\n      type: this.mapRendererTypeToNodeType(config.type),\n      description: config.description,\n      placeholder: config.placeholder,\n      default: config.defaultValue,\n      required: config.required,\n      options: config.options?.map((option) => ({\n        name: option.label,\n        value: option.value,\n        description: option.description,\n      })),\n      displayOptions: {\n        show: config.conditional?.showWhen,\n        hide: config.conditional?.hideWhen,\n      },\n      typeOptions: this.buildTypeOptions(config),\n    };\n  }\n\n  /**\n   * Map PropertyRenderer types to NodeProperty types\n   */\n  private mapRendererTypeToNodeType(rendererType: string): string {\n    const typeMap: Record<string, string> = {\n      text: 'string',\n      password: 'password',\n      number: 'number',\n      checkbox: 'boolean',\n      switch: 'boolean',\n      select: 'options',\n      multiselect: 'multiOptions',\n      textarea: 'string',\n      datetime: 'dateTime',\n      date: 'dateTime',\n      color: 'color',\n      file: 'file',\n      json: 'json',\n      collection: 'collection',\n      fixedcollection: 'fixedCollection',\n      credentials: 'credentialsSelect',\n      resource: 'resourceLocator',\n      expression: 'expression',\n    };\n\n    return typeMap[rendererType] || 'string';\n  }\n\n  /**\n   * Build type options from PropertyRendererConfig\n   */\n  private buildTypeOptions(config: PropertyRendererConfig): any {\n    const typeOptions: any = {};\n\n    if (config.validation?.rules) {\n      for (const rule of config.validation.rules) {\n        switch (rule.type) {\n          case 'min':\n            typeOptions.minValue = rule.value;\n            break;\n          case 'max':\n            typeOptions.maxValue = rule.value;\n            break;\n          case 'pattern':\n            typeOptions.regex = rule.value;\n            break;\n        }\n      }\n    }\n\n    if (config.type === 'textarea' ||",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/nodeDefinition.ts",
        "start": 313,
        "end": 401,
        "startLoc": {
          "line": 313,
          "column": 42,
          "position": 2371
        },
        "endLoc": {
          "line": 401,
          "column": 3,
          "position": 2992
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/model-trainer/nodeDefinition.ts",
        "start": 237,
        "end": 326,
        "startLoc": {
          "line": 237,
          "column": 36,
          "position": 1702
        },
        "endLoc": {
          "line": 326,
          "column": 2,
          "position": 2323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "},\n      inputs: ['main', 'model', 'config'],\n      outputs: ['results', 'model', 'deployment', 'metrics'],\n      credentials: [\n        { name: 'mlPipelineApi', required: false },\n        { name: 'awsApi', required: false },\n        { name: 'gcpApi', required: false },\n      ],\n      polling: true,\n    });\n  }\n\n  protected getNodeIcon(): string {\n    return '🔄';\n  }\n\n  protected getDefaultColor(): string {\n    return '#9333ea';\n  }\n\n  protected",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/nodeDefinition.legacy.ts",
        "start": 19,
        "end": 39,
        "startLoc": {
          "line": 19,
          "column": 7,
          "position": 109
        },
        "endLoc": {
          "line": 39,
          "column": 10,
          "position": 267
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/data/nodes/ai-ml/ml-pipeline/nodeDefinition.ts",
        "start": 28,
        "end": 50,
        "startLoc": {
          "line": 28,
          "column": 7,
          "position": 125
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n\n  constructor(options: UploadOptions) {\n    this.options = {\n      maxFileSize: 5 * 1024 * 1024,\n      maxFiles: 1,\n      allowedTypes: ['image/*', 'application/pdf'],\n      preserveOriginal: false,\n      generateUniqueName: true,\n      validateMimeType: true,\n      createDirectory: true,\n      overwrite: false,\n      uploadDir",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/storage/LocalStorageEngine.ts",
        "start": 14,
        "end": 26,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 187
        },
        "endLoc": {
          "line": 26,
          "column": 10,
          "position": 280
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/validators/BasicFileValidator.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 139
        },
        "endLoc": {
          "line": 23,
          "column": 10,
          "position": 232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ">;\n\n  constructor(options: UploadOptions) {\n    this.options = {\n      maxFileSize: 5 * 1024 * 1024,\n      maxFiles: 1,\n      allowedTypes: ['image/*', 'application/pdf'],\n      preserveOriginal: false,\n      generateUniqueName: true,\n      validateMimeType: true,\n      createDirectory: true,\n      overwrite: false,\n      ...",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/filters/BasicFileFilter.ts",
        "start": 7,
        "end": 19,
        "startLoc": {
          "line": 7,
          "column": 14,
          "position": 80
        },
        "endLoc": {
          "line": 19,
          "column": 4,
          "position": 174
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/validators/BasicFileValidator.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 15,
          "position": 138
        },
        "endLoc": {
          "line": 23,
          "column": 10,
          "position": 232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "}\n\n  /**\n   * Match MIME type against pattern\n   */\n  private matchMimeType(mime: string, pattern: string): boolean {\n    if (pattern === '*/*' || pattern === mime) {\n      return true;\n    }\n\n    if (pattern.endsWith('/*')) {\n      const [typePattern] = pattern.split('/');\n      const [type] = mime.split('/');\n      return typePattern === type;\n    }\n\n    return false;\n  }\n\n  /**\n   * Validate type-specific size limits\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/filters/BasicFileFilter.ts",
        "start": 55,
        "end": 76,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 435
        },
        "endLoc": {
          "line": 76,
          "column": 6,
          "position": 567
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/validators/BasicFileValidator.ts",
        "start": 167,
        "end": 188,
        "startLoc": {
          "line": 167,
          "column": 3,
          "position": 1247
        },
        "endLoc": {
          "line": 188,
          "column": 6,
          "position": 1379
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "frameProtection: {\n    enabled: true,\n    action: 'DENY',\n  },\n  contentTypeOptions: {\n    enabled: true,\n    nosniff: true,\n  },\n  xssProtection: {\n    enabled: true,\n    mode: '1; mode=block',\n  },\n  referrerPolicy: {\n    enabled: true,\n    policy: 'strict-origin-when-cross-origin',\n  },\n  permissionsPolicy: {\n    enabled: true,\n    features: {\n      geolocation: [\"'self'\"],\n      microphone: [\"'none'\"],\n      camera: [\"'none'\"],\n      payment: [\"'self'\"],\n      usb: [\"'none'\"],\n    },\n  },\n};\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/SecurityHeadersMiddleware.ts",
        "start": 117,
        "end": 145,
        "startLoc": {
          "line": 117,
          "column": 3,
          "position": 712
        },
        "endLoc": {
          "line": 145,
          "column": 7,
          "position": 883
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/security-headers/builders/SecurityHeadersBuilder.ts",
        "start": 111,
        "end": 138,
        "startLoc": {
          "line": 111,
          "column": 7,
          "position": 825
        },
        "endLoc": {
          "line": 138,
          "column": 7,
          "position": 997
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n          content: {\n            'application/json': {\n              schema: { $ref: '#/components/schemas/Workflow' },\n            },\n          },\n        },\n        '404': {\n          description: 'Workflow not found',\n          content: {\n            'application/json': {\n              schema: { $ref: '#/components/schemas/ErrorResponse' },\n            },\n          },\n        },\n      },\n      security: [{ bearerAuth: [] }],\n    },\n    delete",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 275,
        "end": 293,
        "startLoc": {
          "line": 275,
          "column": 32,
          "position": 1811
        },
        "endLoc": {
          "line": 293,
          "column": 7,
          "position": 1928
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 234,
        "end": 252,
        "startLoc": {
          "line": 234,
          "column": 34,
          "position": 1533
        },
        "endLoc": {
          "line": 252,
          "column": 4,
          "position": 1650
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "},\n            },\n          },\n        },\n        '404': {\n          description: 'Workflow not found',\n          content: {\n            'application/json': {\n              schema: { $ref: '#/components/schemas/ErrorResponse' },\n            },\n          },\n        },\n      },\n      security: [{ bearerAuth: [] }],\n    },\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 349,
        "end": 364,
        "startLoc": {
          "line": 349,
          "column": 2,
          "position": 2311
        },
        "endLoc": {
          "line": 364,
          "column": 2,
          "position": 2403
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 237,
        "end": 252,
        "startLoc": {
          "line": 237,
          "column": 2,
          "position": 1558
        },
        "endLoc": {
          "line": 252,
          "column": 4,
          "position": 1650
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      parameters: [\n        {\n          name: 'page',\n          in: 'query',\n          schema: { type: 'number', minimum: 1, default: 1 },\n        },\n        {\n          name: 'limit',\n          in: 'query',\n          schema: { type: 'number', minimum: 1, maximum: 100, default: 20 },\n        },\n        {\n          name: 'type'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 536,
        "end": 549,
        "startLoc": {
          "line": 536,
          "column": 18,
          "position": 3594
        },
        "endLoc": {
          "line": 549,
          "column": 7,
          "position": 3709
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/swagger/paths/index.ts",
        "start": 428,
        "end": 441,
        "startLoc": {
          "line": 428,
          "column": 17,
          "position": 2824
        },
        "endLoc": {
          "line": 441,
          "column": 13,
          "position": 2939
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "<div className=\"flex items-center justify-center py-12\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n            <p className=\"text-gray-400\">Loading...</p>\n          </div>\n        </div>\n      )",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layout/BasePage.tsx",
        "start": 256,
        "end": 262,
        "startLoc": {
          "line": 256,
          "column": 9,
          "position": 1828
        },
        "endLoc": {
          "line": 262,
          "column": 2,
          "position": 1890
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/layout/BasePage.tsx",
        "start": 169,
        "end": 175,
        "startLoc": {
          "line": 169,
          "column": 11,
          "position": 1229
        },
        "endLoc": {
          "line": 175,
          "column": 3,
          "position": 1291
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}\n            onChange={handleChange}\n            showSearch\n            filterOption={(input, option) =>\n              (option?.children as unknown as string)?.toLowerCase().includes(input.toLowerCase())\n            }\n          >\n            {property.options?.map((option) => (\n              <Option key={String(option.value)} value={option.value}>\n                {option.name}\n              </Option>\n            ))}\n          </Select>\n        );\n\n      case 'dateTime':\n        return (\n          <DatePicker {...commonProps} showTime value={internalValue",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/PropertyField.tsx",
        "start": 270,
        "end": 287,
        "startLoc": {
          "line": 270,
          "column": 2,
          "position": 1994
        },
        "endLoc": {
          "line": 287,
          "column": 14,
          "position": 2138
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/common/PropertyField.tsx",
        "start": 249,
        "end": 270,
        "startLoc": {
          "line": 249,
          "column": 8,
          "position": 1830
        },
        "endLoc": {
          "line": 270,
          "column": 15,
          "position": 1984
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "const inferType = (value: any): string => {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n  if (typeof value === 'object') {\n    return 'object';\n  }\n  if (typeof value === 'string') {\n    // Check if it's a date string",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/SchemaView.tsx",
        "start": 76,
        "end": 90,
        "startLoc": {
          "line": 76,
          "column": 1,
          "position": 534
        },
        "endLoc": {
          "line": 90,
          "column": 31,
          "position": 661
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/TableView.tsx",
        "start": 29,
        "end": 43,
        "startLoc": {
          "line": 29,
          "column": 1,
          "position": 238
        },
        "endLoc": {
          "line": 43,
          "column": 3,
          "position": 365
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ",\n        type: 'options',\n        default: 'pinecone',\n        required: true,\n        options: [\n          {\n            name: 'Pinecone',\n            value: 'pinecone',\n          },\n          {\n            name: 'Weaviate',\n            value: 'weaviate',\n          },\n          {\n            name: 'Qdrant',\n            value: 'qdrant',\n          },\n          {\n            name: 'Chroma',\n            value: 'chroma',\n          },\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/VectorStore.node.ts",
        "start": 85,
        "end": 106,
        "startLoc": {
          "line": 85,
          "column": 11,
          "position": 512
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 626
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/VectorStoreTool.node.ts",
        "start": 76,
        "end": 97,
        "startLoc": {
          "line": 76,
          "column": 14,
          "position": 462
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 576
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n        options: [\n          { name: 'GET', value: 'GET' },\n          { name: 'POST', value: 'POST' },\n          { name: 'PUT', value: 'PUT' },\n          { name: 'DELETE', value: 'DELETE' },\n          { name: 'PATCH', value: 'PATCH' },\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/HttpRequest.node.ts",
        "start": 24,
        "end": 31,
        "startLoc": {
          "line": 24,
          "column": 21,
          "position": 176
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 270
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Trigger.node.ts",
        "start": 79,
        "end": 86,
        "startLoc": {
          "line": 79,
          "column": 26,
          "position": 495
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 589
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n        description: 'HTTP method to use',\n        options: [\n          { name: 'GET', value: 'GET' },\n          { name: 'POST', value: 'POST' },\n          { name: 'PUT', value: 'PUT' },\n          { name: 'DELETE', value: 'DELETE' },\n          { name: 'PATCH', value: 'PATCH' },\n        ],\n        displayOptions: {\n          show: {\n            actionType",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Action.node.ts",
        "start": 67,
        "end": 78,
        "startLoc": {
          "line": 67,
          "column": 6,
          "position": 420
        },
        "endLoc": {
          "line": 78,
          "column": 11,
          "position": 537
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/HttpRequest.node.ts",
        "start": 23,
        "end": 89,
        "startLoc": {
          "line": 23,
          "column": 5,
          "position": 169
        },
        "endLoc": {
          "line": 89,
          "column": 12,
          "position": 605
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "onError={(e) => {\n              const target = e.target as HTMLImageElement;\n              target.style.display = 'none';\n              const fallback = target.nextElementSibling;\n              if (fallback) {\n                fallback.classList.remove('hidden');\n              }\n            }}\n          />\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/NodeIcon.tsx",
        "start": 35,
        "end": 44,
        "startLoc": {
          "line": 35,
          "column": 13,
          "position": 234
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 317
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/RegistryNode.tsx",
        "start": 305,
        "end": 314,
        "startLoc": {
          "line": 305,
          "column": 19,
          "position": 2229
        },
        "endLoc": {
          "line": 314,
          "column": 2,
          "position": 2312
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 9,
          "position": 349
        },
        "endLoc": {
          "line": 65,
          "column": 484,
          "position": 407
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 5,
          "position": 219
        },
        "endLoc": {
          "line": 44,
          "column": 119,
          "position": 277
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx",
        "start": 90,
        "end": 97,
        "startLoc": {
          "line": 90,
          "column": 7,
          "position": 558
        },
        "endLoc": {
          "line": 97,
          "column": 125,
          "position": 616
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/shared/HoverActions.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 5,
          "position": 219
        },
        "endLoc": {
          "line": 44,
          "column": 119,
          "position": 277
        }
      }
    },
    {
      "format": "javascript",
      "lines": 60,
      "fragment": "={{ marginBottom: '16px' }}\n      />\n\n      <Collapse\n        items={[\n          {\n            key: 'performance',\n            label: (\n              <div className=\"flex items-center gap-2\">\n                <ExperimentOutlined />\n                <span>Performance & Sampling</span>\n              </div>\n            ),\n            children: (\n              <div className=\"space-y-4\">\n                {advancedProperties.map((property) => {\n                  const shouldShow =\n                    !property.displayOptions?.show ||\n                    Object.entries(property.displayOptions.show).every(([key, values]) =>\n                      values?.includes(formValues[key])\n                    );\n\n                  if (!shouldShow) {\n                    return null;\n                  }\n\n                  return (\n                    <PropertyField\n                      key={property.name}\n                      property={property}\n                      value={formValues[property.name]}\n                      onChange={(value: any) => handleFieldChange(property.name, value)}\n                      errors={errors[property.name]}\n                      theme={theme}\n                      context={formValues}\n                    />\n                  );\n                })}\n              </div>\n            ),\n          },\n        ]}\n      />\n    </div>\n  );\n\n  const renderTestingTab = () => (\n    <div className=\"space-y-4\">\n      <Alert\n        message=\"Test Your AI Agent\"\n        description=\"Test your AI agent configuration with sample data.\"\n        type=\"success\"\n        showIcon\n      />\n\n      <Card size=\"small\" title=\"Quick Test\">\n        <div className=\"space-y-4\">\n          <PropertyField\n            property={{\n              displayName",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx",
        "start": 298,
        "end": 357,
        "startLoc": {
          "line": 298,
          "column": 6,
          "position": 2326
        },
        "endLoc": {
          "line": 357,
          "column": 26,
          "position": 2725
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx",
        "start": 261,
        "end": 298,
        "startLoc": {
          "line": 261,
          "column": 6,
          "position": 2065
        },
        "endLoc": {
          "line": 298,
          "column": 14,
          "position": 2329
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "const shouldShow =\n                    !property.displayOptions?.show ||\n                    Object.entries(property.displayOptions.show).every(([key, values]) =>\n                      values?.includes(formValues[key])\n                    );\n\n                  if (!shouldShow) {\n                    return null;\n                  }\n\n                  return (\n                    <PropertyField\n                      ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx",
        "start": 314,
        "end": 326,
        "startLoc": {
          "line": 314,
          "column": 19,
          "position": 2437
        },
        "endLoc": {
          "line": 326,
          "column": 23,
          "position": 2524
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/panels/AIAgentPropertiesPanel.tsx",
        "start": 266,
        "end": 278,
        "startLoc": {
          "line": 266,
          "column": 9,
          "position": 2097
        },
        "endLoc": {
          "line": 278,
          "column": 13,
          "position": 2184
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "import {\n  CheckCircleOutlined,\n  ClockCircleOutlined,\n  EditOutlined,\n  ExclamationCircleOutlined,\n  FilterOutlined,\n  MailOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Badge, Button, Card, Tag, Tooltip } from 'antd';\nimport type React from 'react';\nimport { Handle, Position } from 'reactflow';\nimport type { CustomNodeBodyProps } from '../types'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/custom-nodes/GmailNodeBody.tsx",
        "start": 1,
        "end": 13,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 13,
          "column": 11,
          "position": 106
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailTriggerNodeBody.tsx",
        "start": 1,
        "end": 13,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 13,
          "column": 40,
          "position": 106
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ",\n  nodeData,\n  selected,\n  isHovered,\n  onMouseEnter,\n  onMouseLeave,\n  onDelete: _onDelete,\n  onEdit,\n  onOpenProperties,\n}) => {\n  // Extract Gmail-specific configuration\n  const filters = nodeData.parameters?.filters || {};\n  const pollTimes = nodeData.parameters?.pollTimes || { mode: 'everyMinute' };\n  const credential",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/custom-nodes/GmailNodeBody.tsx",
        "start": 20,
        "end": 33,
        "startLoc": {
          "line": 20,
          "column": 8,
          "position": 134
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 230
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/nodes/GmailNode/GmailTriggerNodeBody.tsx",
        "start": 22,
        "end": 35,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 153
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 249
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "export interface PropertyRendererProps {\n  property: {\n    displayName: string;\n    name: string;\n    type: NodePropertyType;\n    description?: string;\n    placeholder?: string;\n    default?: any;\n    required?: boolean;\n    options?: Array<{\n      name: string;\n      value?: string | number | boolean | undefined;\n      description?: string;\n    }>;\n    typeOptions?: INodePropertyTypeOptions;\n    displayOptions?: {\n      show?: Record<string, any[]>;\n      hide?: Record<string, any[]>;\n    };\n  };\n  value: any;\n  onChange: (value: any) => void;\n  context",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 29,
        "end": 51,
        "startLoc": {
          "line": 29,
          "column": 1,
          "position": 199
        },
        "endLoc": {
          "line": 51,
          "column": 8,
          "position": 394
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.tsx",
        "start": 17,
        "end": 39,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 85
        },
        "endLoc": {
          "line": 39,
          "column": 10,
          "position": 280
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "\n        value={currentValues}\n        onChange={onChange}\n        placeholder={property.placeholder || `Select ${property.displayName.toLowerCase()}`}\n        disabled={disabled}\n        className=\"w-full [&_.ant-select-selector]:bg-gray-800 [&_.ant-select-selector]:border-gray-600\"\n        showSearch\n        allowClear\n      >\n        {options.map((option) => (\n          <Option key={String(option.value)} value={option.value} title={option.description}>\n            <div>\n              <div className=\"text-gray-200\">{option.name}</div>\n              {option.description && (\n                <div className=\"text-xs text-gray-400\">{option.description}</div>\n              )}\n            </div>\n          </Option>\n        ))}\n      </Select>\n      {property.description && <p className=\"text-xs text-gray-400\">{property.description}</p>}\n    </div>\n  );\n};\n\n// 6. Text/TextArea Property Renderer",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 181,
        "end": 206,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1540
        },
        "endLoc": {
          "line": 206,
          "column": 38,
          "position": 1755
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 142,
        "end": 167,
        "startLoc": {
          "line": 142,
          "column": 7,
          "position": 1178
        },
        "endLoc": {
          "line": 167,
          "column": 38,
          "position": 1410
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({\n  property,\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n      <div",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 256,
        "end": 265,
        "startLoc": {
          "line": 256,
          "column": 14,
          "position": 2172
        },
        "endLoc": {
          "line": 265,
          "column": 4,
          "position": 2246
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 233,
        "end": 242,
        "startLoc": {
          "line": 233,
          "column": 17,
          "position": 1987
        },
        "endLoc": {
          "line": 242,
          "column": 11,
          "position": 2061
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "|| [];\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n\n      <div className=\"border border-gray-600 rounded-lg p-4 bg-gray-800\">\n        <div className=\"flex justify-between items-center mb-3\">\n          <div className=\"text-sm font-medium text-gray-200\">Filter",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 626,
        "end": 634,
        "startLoc": {
          "line": 626,
          "column": 2,
          "position": 5180
        },
        "endLoc": {
          "line": 634,
          "column": 7,
          "position": 5255
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 572,
        "end": 580,
        "startLoc": {
          "line": 572,
          "column": 2,
          "position": 4749
        },
        "endLoc": {
          "line": 580,
          "column": 6,
          "position": 4824
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "\n                  className=\"flex-1 bg-gray-800 border-gray-600\"\n                />\n                <Button\n                  size=\"small\"\n                  icon={<DeleteOutlined />}\n                  className=\"text-red-400 hover:text-red-300\"\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {property.description && <p className=\"text-xs text-gray-400\">{property.description}</p>}\n    </div>\n  );\n};\n\n// 16-22. Additional Complex Property Renderers",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 662,
        "end": 681,
        "startLoc": {
          "line": 662,
          "column": 2,
          "position": 5550
        },
        "endLoc": {
          "line": 681,
          "column": 48,
          "position": 5651
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 605,
        "end": 624,
        "startLoc": {
          "line": 605,
          "column": 2,
          "position": 5031
        },
        "endLoc": {
          "line": 624,
          "column": 32,
          "position": 5132
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({\n  property,\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n      <TextArea",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 682,
        "end": 691,
        "startLoc": {
          "line": 682,
          "column": 19,
          "position": 5658
        },
        "endLoc": {
          "line": 691,
          "column": 9,
          "position": 5732
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 233,
        "end": 242,
        "startLoc": {
          "line": 233,
          "column": 17,
          "position": 1987
        },
        "endLoc": {
          "line": 242,
          "column": 11,
          "position": 2061
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({\n  property,\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n      <Select",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 707,
        "end": 716,
        "startLoc": {
          "line": 707,
          "column": 25,
          "position": 5865
        },
        "endLoc": {
          "line": 716,
          "column": 7,
          "position": 5939
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 233,
        "end": 242,
        "startLoc": {
          "line": 233,
          "column": 17,
          "position": 1987
        },
        "endLoc": {
          "line": 242,
          "column": 11,
          "position": 2061
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ": React.FC<PropertyRendererProps> = ({\n  property,\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n      <Select\n        value={value}\n        onChange={onChange}\n        placeholder=\"Select node",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 732,
        "end": 744,
        "startLoc": {
          "line": 732,
          "column": 21,
          "position": 6063
        },
        "endLoc": {
          "line": 744,
          "column": 12,
          "position": 6154
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 233,
        "end": 719,
        "startLoc": {
          "line": 233,
          "column": 17,
          "position": 1987
        },
        "endLoc": {
          "line": 719,
          "column": 16,
          "position": 5956
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({\n  property,\n  value,\n  onChange,\n  disabled,\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-sm font-medium text-gray-200\">{property.displayName}</label>\n      <div className=\"flex space-x-2",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 757,
        "end": 766,
        "startLoc": {
          "line": 757,
          "column": 26,
          "position": 6259
        },
        "endLoc": {
          "line": 766,
          "column": 15,
          "position": 6338
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/PropertyRenderers.legacy.tsx",
        "start": 233,
        "end": 265,
        "startLoc": {
          "line": 233,
          "column": 17,
          "position": 1987
        },
        "endLoc": {
          "line": 265,
          "column": 28,
          "position": 2251
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const fieldNames = new Set<string>();\n    inputData.forEach((item) => {\n      if (item.json && typeof item.json === 'object') {\n        Object.keys(item.json).forEach((key) => fieldNames.add(key));\n      }\n    });\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/EnhancedTransformPropertyPanel.tsx",
        "start": 135,
        "end": 142,
        "startLoc": {
          "line": 135,
          "column": 5,
          "position": 1125
        },
        "endLoc": {
          "line": 142,
          "column": 7,
          "position": 1214
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/components/TransformAssignmentCollection.tsx",
        "start": 296,
        "end": 303,
        "startLoc": {
          "line": 296,
          "column": 5,
          "position": 2274
        },
        "endLoc": {
          "line": 303,
          "column": 61,
          "position": 2363
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "// Convert BackendWorkflow to WorkflowDefinition format\n        const workflowDefinition = {\n          id: `test-${Date.now()}`,\n          name: `Test Workflow ${Date.now()}`,\n          nodes: workflowJson.nodes.map((node) => ({\n            id: node.id,\n            type: node.type || 'unknown',\n            position: Array.isArray(node.position)\n              ? { x: node.position[0], y: node.position[1] }\n              : node.position,\n            data: node.data || {},\n          })),\n          edges: workflowJson.edges || [],\n          tags: ['test'],\n          isActive: true,\n        } as any;\n        const result = await workflowApiService.testWorkflow(workflowDefinition);\n        setTestResult({\n          type: 'dry_run'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowTester/WorkflowTester.tsx",
        "start": 72,
        "end": 90,
        "startLoc": {
          "line": 72,
          "column": 9,
          "position": 751
        },
        "endLoc": {
          "line": 90,
          "column": 10,
          "position": 966
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowTester/WorkflowTester.tsx",
        "start": 49,
        "end": 67,
        "startLoc": {
          "line": 49,
          "column": 9,
          "position": 502
        },
        "endLoc": {
          "line": 67,
          "column": 13,
          "position": 717
        }
      }
    },
    {
      "format": "javascript",
      "lines": 7,
      "fragment": "\n                <Tag color={getDifficultyColor(template.difficulty || 'beginner')}>\n                  {template.difficulty || 'beginner'}\n                </Tag>\n                <Rate disabled defaultValue={template.metadata?.rating ?? 0} />\n              </Space>\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/WorkflowTemplatesPanel.tsx",
        "start": 304,
        "end": 310,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 2409
        },
        "endLoc": {
          "line": 310,
          "column": 3,
          "position": 2467
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/WorkflowTemplatesPanel.tsx",
        "start": 242,
        "end": 248,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 1974
        },
        "endLoc": {
          "line": 248,
          "column": 2,
          "position": 2032
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "\n            value={value || []}\n            onChange={onChange}\n            placeholder={property.placeholder}\n            disabled={disabled}\n            className=\"w-full\"\n            style={{ backgroundColor: theme === 'dark' ? '#1f2937' : undefined }}\n          >\n            {property.options?.map((option: any) => (\n              <Option key={option.value} value={option.value}>\n                {option.label}\n              </Option>\n            ))}\n          </Select>\n        );\n\n      case 'dateTime'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedPropertyRenderer.tsx",
        "start": 132,
        "end": 148,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 895
        },
        "endLoc": {
          "line": 148,
          "column": 11,
          "position": 1025
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EnhancedPropertyRenderer.tsx",
        "start": 113,
        "end": 129,
        "startLoc": {
          "line": 113,
          "column": 7,
          "position": 752
        },
        "endLoc": {
          "line": 129,
          "column": 14,
          "position": 878
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "return (\n    <div className=\"flex flex-col h-full bg-gray-900\">\n      {/* Header */}\n      <div className=\"flex-shrink-0 p-4 border-b border-gray-600 bg-gray-800\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-sm font-medium text-gray-100 flex items-center\">\n            <span className=\"mr-2\">📥</span>\n            INPUT",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/EmailInputPanel.tsx",
        "start": 98,
        "end": 105,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 810
        },
        "endLoc": {
          "line": 105,
          "column": 6,
          "position": 879
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/DataVisualization/DataVisualizationPanel.tsx",
        "start": 171,
        "end": 178,
        "startLoc": {
          "line": 171,
          "column": 3,
          "position": 1606
        },
        "endLoc": {
          "line": 178,
          "column": 2,
          "position": 1675
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "}\n            onChange={onChange}\n            className=\"ant-select-multiple\"\n            style={{\n              width: '100%',\n              backgroundColor: '#4b5563', // Darker gray-600\n              borderColor: hasErrors ? '#ff4d4f' : '#6b7280', // Lighter border\n              color: '#ffffff', // Pure white text\n            }}\n            dropdownStyle={{\n              backgroundColor: '#374151', // Dark dropdown background\n              border: '1px solid #6b7280', // Lighter border\n            }}\n            dropdownClassName=\"custom-dark-dropdown\"\n            tagRender={(",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 241,
        "end": 255,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 1820
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 1905
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 206,
        "end": 222,
        "startLoc": {
          "line": 206,
          "column": 7,
          "position": 1599
        },
        "endLoc": {
          "line": 222,
          "column": 7,
          "position": 1704
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "(([key, values]) => {\n      const currentValue = formState[key];\n      return (\n        Array.isArray(values) &&\n        currentValue !== undefined &&\n        currentValue !== null &&\n        values.includes(currentValue as string | number | boolean)\n      );\n    });\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 43,
        "end": 52,
        "startLoc": {
          "line": 43,
          "column": 5,
          "position": 376
        },
        "endLoc": {
          "line": 52,
          "column": 3,
          "position": 466
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 31,
        "end": 40,
        "startLoc": {
          "line": 31,
          "column": 6,
          "position": 254
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 344
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "(credential);\n                          }\n                        }}\n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          color: '#6b7280',\n                          cursor: 'pointer',\n                          fontSize: '12px',\n                          padding: '2px',\n                        }}\n                        onMouseEnter={(e) => (e.currentTarget.style.color = '#ef4444'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 454,
        "end": 465,
        "startLoc": {
          "line": 454,
          "column": 19,
          "position": 3418
        },
        "endLoc": {
          "line": 465,
          "column": 10,
          "position": 3503
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/DynamicPropertyRenderer.legacy.tsx",
        "start": 433,
        "end": 444,
        "startLoc": {
          "line": 433,
          "column": 17,
          "position": 3238
        },
        "endLoc": {
          "line": 444,
          "column": 10,
          "position": 3323
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "}\n        </div>\n        <button onClick={onClose} className=\"text-gray-400 hover:text-white\" aria-label=\"Close\">\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 371,
        "end": 376,
        "startLoc": {
          "line": 371,
          "column": 2,
          "position": 3063
        },
        "endLoc": {
          "line": 376,
          "column": 15,
          "position": 3125
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/ui/components/base/modal.tsx",
        "start": 83,
        "end": 89,
        "startLoc": {
          "line": 83,
          "column": 14,
          "position": 390
        },
        "endLoc": {
          "line": 89,
          "column": 17,
          "position": 453
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "<div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                    <div className=\"flex items-start space-x-2\">\n                      <svg\n                        className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      <div>\n                        <p className=\"text-sm text-blue-300\">\n                          <strong>{",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 511,
        "end": 526,
        "startLoc": {
          "line": 511,
          "column": 19,
          "position": 4061
        },
        "endLoc": {
          "line": 526,
          "column": 2,
          "position": 4155
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 431,
        "end": 446,
        "startLoc": {
          "line": 431,
          "column": 19,
          "position": 3432
        },
        "endLoc": {
          "line": 446,
          "column": 5,
          "position": 3526
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "<div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                      Credential Name <span className=\"text-red-400\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={credentialName}\n                      onChange={(e) => setCredentialName(e.target.value)}\n                      className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      placeholder={`e.g., ${credentialTypeDef.name} Account`}\n                    ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 534,
        "end": 544,
        "startLoc": {
          "line": 534,
          "column": 19,
          "position": 4203
        },
        "endLoc": {
          "line": 544,
          "column": 21,
          "position": 4294
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 481,
        "end": 490,
        "startLoc": {
          "line": 481,
          "column": 19,
          "position": 3825
        },
        "endLoc": {
          "line": 490,
          "column": 2,
          "position": 3906
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "}\n                  <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                    <div className=\"flex items-start space-x-2\">\n                      <svg\n                        className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                      <div>\n                        <p className=\"text-sm text-blue-300\">\n                          Enterprise",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 736,
        "end": 752,
        "startLoc": {
          "line": 736,
          "column": 22,
          "position": 5752
        },
        "endLoc": {
          "line": 752,
          "column": 11,
          "position": 5846
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 430,
        "end": 446,
        "startLoc": {
          "line": 430,
          "column": 41,
          "position": 3429
        },
        "endLoc": {
          "line": 446,
          "column": 2,
          "position": 3523
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "useEffect(() => {\n    const fetchCredentialType = async () => {\n      const types = await credentialApiService.getCredentialTypes();\n      setCredentialTypeDef(types.find((ct) => ct.type === credentialType));\n    };\n    fetchCredentialType();\n  }, [credentialType]);\n\n  const isGmailOAuth",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.tsx",
        "start": 55,
        "end": 63,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 452
        },
        "endLoc": {
          "line": 63,
          "column": 13,
          "position": 541
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 59,
        "end": 67,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 522
        },
        "endLoc": {
          "line": 67,
          "column": 13,
          "position": 611
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": "={handleGmailConnect}\n                disabled={isConnecting || !credentialName.trim()}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n              >\n                <span>🔗</span>\n                <span>{isConnecting ? 'Connecting...' : 'Connect with Google'}</span>\n              </button>\n            ) : (\n              <button\n                onClick={handleSave}\n                disabled={isAIProvider && !credentialName.trim()}\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Save {credentialTypeDef?.name || 'Credential'}\n              </button>\n            )}\n          </div>\n          <button onClick={onClose} className=\"text-gray-400 hover:text-white\" aria-label=\"Close\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex flex-1 overflow-hidden\">\n          {/* Sidebar */}\n          <div className=\"w-48 bg-gray-800 border-r border-gray-700 p-4\">\n            <nav className=\"space-y-1\">\n              <button\n                onClick={() => setActiveTab('connection')}\n                className={`w-full text-left px-3 py-2 rounded text-sm ${\n                  activeTab ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 332,
        "end": 369,
        "startLoc": {
          "line": 332,
          "column": 8,
          "position": 2782
        },
        "endLoc": {
          "line": 369,
          "column": 29,
          "position": 3073
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 356,
        "end": 393,
        "startLoc": {
          "line": 356,
          "column": 8,
          "position": 2943
        },
        "endLoc": {
          "line": 393,
          "column": 27,
          "position": 3234
        }
      }
    },
    {
      "format": "javascript",
      "lines": 180,
      "fragment": "}`}\n              >\n                Details\n              </button>\n            </nav>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 p-6 overflow-y-auto\">\n            {activeTab === 'connection' && (\n              <div className=\"space-y-6\">\n                {isGmailOAuth ? (\n                  /* Gmail OAuth2 Simplified UI */\n                  <>\n                    {/* Gmail OAuth content stays the same */}\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            <strong>Easy Setup!</strong> No technical configuration required. We'll\n                            connect to Gmail using secure OAuth2 authentication.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium text-white\">Connect your Gmail account</h3>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            1\n                          </div>\n                          <span className=\"text-gray-300\">Enter a name for this credential</span>\n                        </div>\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            2\n                          </div>\n                          <span className=\"text-gray-300\">\n                            Click \"Connect with Google\" to authorize access\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            3\n                          </div>\n                          <span className=\"text-gray-300\">\n                            Grant permissions to read and send emails\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Credential Name <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={credentialName}\n                        onChange={(e) => setCredentialName(e.target.value)}\n                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"e.g., Personal Gmail, Work Gmail\"\n                      />\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        Choose a name to identify this Gmail connection\n                      </p>\n                    </div>\n\n                    <div className=\"pt-4\">\n                      <button\n                        onClick={handleGmailConnect}\n                        disabled={isConnecting || !credentialName.trim()}\n                        className=\"w-full py-3 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2 text-sm font-medium\"\n                      >\n                        <span>🔗</span>\n                        <span>{isConnecting ? 'Connecting...' : 'Connect with Google'}</span>\n                      </button>\n                    </div>\n                  </>\n                ) : isAIProvider && credentialTypeDef ? (\n                  /* AI Provider Credentials Form */\n                  <>\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            <strong>{credentialTypeDef.name} Connection</strong>{' '}\n                            {credentialTypeDef.description}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Credential Name Input */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Credential Name <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={credentialName}\n                        onChange={(e) => setCredentialName(e.target.value)}\n                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder={`e.g., ${credentialTypeDef.name} Account`}\n                      />\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        Choose a name to identify this {credentialTypeDef.name} connection\n                      </p>\n                    </div>\n\n                    {/* Dynamic Credential Properties */}\n                    {credentialTypeDef.fields.map((property) => (\n                      <div key={property.name}>\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                          {property.name}{' '}\n                          {property.required && <span className=\"text-red-400\">*</span>}\n                        </label>\n                        <input\n                          type={property.type === 'password' ? 'password' : 'text'}\n                          value={credentialData[property.name] || ''}\n                          onChange={(e) =>\n                            handleCredentialDataChange(property.name, e.target.value)\n                          }\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder={\n                            property.type === 'password' &&\n                            editingCredential &&\n                            !credentialData[property.name]\n                              ? '••••••••••• (hidden - enter new value to update)'\n                              : property.placeholder\n                          }\n                          required={property.required && !editingCredential} // Not required when editing (keep existing value)\n                        />\n                        {property.description && (\n                          <p className=\"text-xs text-gray-400 mt-1\">{property.description}</p>\n                        )}\n                      </div>\n                    ))}\n\n                    {/* Test Credential Button */}\n                    <div className=\"pt-4\">\n                      <button\n                        onClick={handleTestCredential}\n                        disabled={isTesting}\n                        className=\"w-full py-2 px-4 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2 text-sm font-medium mb-4\"\n                      >\n                        <span>{isTesting ? '⏳' : '🧪'}</span>\n                        <span>{isTesting ? 'Testing Connection...' : 'Test Connection'}</span>\n                      </button>\n                    </div>\n\n                    {/* Test Result Display */}\n                    {testResult && (\n                      <div\n                        className={`p-4 rounded border ${\n                          testResult",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 392,
        "end": 571,
        "startLoc": {
          "line": 392,
          "column": 17,
          "position": 3186
        },
        "endLoc": {
          "line": 571,
          "column": 37,
          "position": 4556
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 416,
        "end": 593,
        "startLoc": {
          "line": 416,
          "column": 15,
          "position": 3347
        },
        "endLoc": {
          "line": 593,
          "column": 35,
          "position": 4714
        }
      }
    },
    {
      "format": "javascript",
      "lines": 98,
      "fragment": "}`}\n                      >\n                        <div className=\"flex items-start space-x-2\">\n                          <span className=\"text-lg\">{testResult.success ? '✅' : '❌'}</span>\n                          <div className=\"flex-1\">\n                            <p className=\"text-sm font-medium\">\n                              {testResult.success ? 'Connection Successful!' : 'Connection Failed'}\n                            </p>\n                            <p className=\"text-sm mt-1\">{testResult.message}</p>\n                            {testResult.details && (\n                              <details className=\"mt-2\">\n                                <summary className=\"text-xs cursor-pointer hover:underline\">\n                                  View Details\n                                </summary>\n                                <pre className=\"text-xs bg-gray-800 p-2 rounded mt-1 overflow-auto\">\n                                  {JSON.stringify(testResult.details, null, 2)}\n                                </pre>\n                              </details>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  /* Generic OAuth2 UI for other services */\n                  <>\n                    {/* Info Banner */}\n                    <div className=\"bg-orange-900/20 border border-orange-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-orange-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-orange-300\">\n                            Need help filling out these fields?{' '}\n                            <a\n                              href=\"https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/\"\n                              rel=\"noopener\"\n                              target=\"_blank\"\n                              className=\"text-orange-400 underline hover:text-orange-300\"\n                            >\n                              Open docs\n                            </a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Auth Type Selection */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-3\">\n                        Connect using <span className=\"text-red-400\">*</span>\n                      </label>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-3 p-3 border border-gray-600 rounded cursor-pointer hover:bg-gray-800\">\n                          <input\n                            type=\"radio\"\n                            value=\"oAuth2\"\n                            checked={authType === 'oAuth2'}\n                            onChange={(e) => setAuthType(e.target.value)}\n                            className=\"text-orange-600 focus:ring-orange-500\"\n                          />\n                          <span className=\"text-white\">OAuth2 (recommended)</span>\n                        </label>\n                        <label className=\"flex items-center space-x-3 p-3 border border-gray-600 rounded cursor-pointer hover:bg-gray-800\">\n                          <input\n                            type=\"radio\"\n                            value=\"serviceAccount\"\n                            checked={authType === 'serviceAccount'}\n                            onChange={(e) => setAuthType(e.target.value)}\n                            className=\"text-orange-600 focus:ring-orange-500\"\n                          />\n                          <span className=\"text-white\">Service Account</span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* OAuth Redirect URL */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        OAuth Redirect URL\n                      </label>\n                      <div className=\"flex items-center space-x-2 p-3 bg-gray-800 border border-gray-600 rounded\">\n                        <span className=\"text-gray-300 text-sm flex-1\">\n                          https://workflow.lxroot.net/rest/oauth2-credential/callback\n                        </span>\n                        <button\n                          onClick={() =>\n                            navigator",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 574,
        "end": 671,
        "startLoc": {
          "line": 574,
          "column": 25,
          "position": 4567
        },
        "endLoc": {
          "line": 671,
          "column": 38,
          "position": 5298
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 596,
        "end": 693,
        "startLoc": {
          "line": 596,
          "column": 23,
          "position": 4725
        },
        "endLoc": {
          "line": 693,
          "column": 36,
          "position": 5456
        }
      }
    },
    {
      "format": "javascript",
      "lines": 92,
      "fragment": "}\n                          className=\"px-3 py-1 bg-gray-700 text-white rounded text-xs hover:bg-gray-600\"\n                        >\n                          Copy\n                        </button>\n                      </div>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        In {credentialType}, use the URL above when prompted to enter an OAuth\n                        callback or redirect URL\n                      </p>\n                    </div>\n\n                    {/* Client ID */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Client ID <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={clientId}\n                        onChange={(e) => setClientId(e.target.value)}\n                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n                        placeholder=\"Enter your OAuth2 Client ID\"\n                      />\n                    </div>\n\n                    {/* Client Secret */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Client Secret <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        type=\"password\"\n                        value={clientSecret}\n                        onChange={(e) => setClientSecret(e.target.value)}\n                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n                        placeholder=\"Enter your OAuth2 Client Secret\"\n                      />\n                    </div>\n\n                    {/* Enterprise Note */}\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            Enterprise plan users can pull in credentials from external vaults.{' '}\n                            <a\n                              href=\"https://docs.n8n.io/external-secrets/\"\n                              target=\"_blank\"\n                              rel=\"noopener\"\n                              className=\"text-blue-400 underline hover:text-blue-300\"\n                            >\n                              More info\n                            </a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            {activeTab === 'sharing' && (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-400\">Sharing settings will be available here</p>\n              </div>\n            )}\n\n            {activeTab === 'details' && (\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Credential Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={credentialName}\n                    onChange={(e) => setCredentialName(e.target.value)}\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n                    placeholder={`${credentialType} account ${Date.now()}`}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 674,
        "end": 765,
        "startLoc": {
          "line": 674,
          "column": 27,
          "position": 5309
        },
        "endLoc": {
          "line": 765,
          "column": 2,
          "position": 5955
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 696,
        "end": 787,
        "startLoc": {
          "line": 696,
          "column": 25,
          "position": 5467
        },
        "endLoc": {
          "line": 787,
          "column": 2,
          "position": 6113
        }
      }
    },
    {
      "format": "tsx",
      "lines": 299,
      "fragment": "interface CredentialModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  credentialType: string;\n  onSave: (credential: any) => void;\n  editingCredential?: any; // For editing existing credentials\n}\n\nconst CredentialModal: React.FC<CredentialModalProps> = ({\n  isOpen,\n  onClose,\n  credentialType,\n  onSave,\n  editingCredential,\n}) => {\n  const [credentialName, setCredentialName] = useState('');\n  const [authType, setAuthType] = useState('oAuth2');\n  const [clientId, setClientId] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const [activeTab, setActiveTab] = useState('connection');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [credentialData, setCredentialData] = useState<Record<string, any>>({});\n  const [isTesting, setIsTesting] = useState(false);\n  const [testResult, setTestResult] = useState<{\n    success: boolean;\n    message: string;\n    details?: any;\n  } | null>(null);\n\n  // Access workflow store for auto-save before OAuth\n  const { activeWorkflow, updateWorkflow } = useLeanWorkflowStore();\n  const nodes = activeWorkflow?.nodes || [];\n  const edges = activeWorkflow?.edges || [];\n\n  // Check if this is Gmail OAuth2 which uses shared app credentials\n  const isGmailOAuth = credentialType === 'gmail' || credentialType === 'gmailOAuth2';\n\n  // Get credential type definition\n  const [credentialTypeDef, setCredentialTypeDef] = useState<CredentialTypeApiResponse | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    const fetchCredentialType = async () => {\n      const types = await credentialApiService.getCredentialTypes();\n      setCredentialTypeDef(types.find((ct) => ct.type === credentialType));\n    };\n    fetchCredentialType();\n  }, [credentialType]);\n\n  const isAIProvider = [\n    'openaiApi',\n    'anthropicApi',\n    'googleAiApi',\n    'azureOpenAiApi',\n    'awsBedrockApi',\n  ].includes(credentialType);\n\n  // Populate form when editing existing credential\n  React.useEffect(() => {\n    if (editingCredential) {\n      setCredentialName(editingCredential.name || '');\n      if (isAIProvider && editingCredential.data) {\n        // For AI providers, populate form data\n        // Note: Password fields may not be returned for security, they'll show placeholders\n        const populatedData = { ...editingCredential.data };\n\n        // For password fields that are not returned (security), keep them empty\n        // The placeholder will indicate this to the user\n        if (credentialTypeDef?.fields) {\n          credentialTypeDef.fields.forEach((prop) => {\n            if (prop.type === 'password' && !populatedData[prop.name]) {\n              // Leave empty so placeholder shows\n              delete populatedData[prop.name];\n            }\n          });\n        }\n\n        setCredentialData(populatedData);\n      } else if (editingCredential.data) {\n        setAuthType(editingCredential.data.authType || 'oAuth2');\n        setClientId(editingCredential.data.clientId || '');\n        // Don't populate clientSecret if it's not returned for security\n        setClientSecret(editingCredential.data.clientSecret || '');\n      }\n    } else {\n      // Reset form for new credential\n      setCredentialName('');\n      setAuthType('oAuth2');\n      setClientId('');\n      setClientSecret('');\n      setCredentialData({});\n    }\n  }, [editingCredential, isAIProvider, credentialTypeDef]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const handleSave = async () => {\n    if (!credentialName.trim()) {\n      alert('Please enter a credential name');\n      return;\n    }\n\n    if (isAIProvider) {\n      // Validate required fields for AI providers\n      const requiredFields = credentialTypeDef?.fields.filter((p) => p.required) || [];\n      let missingFields = requiredFields.filter((field) => !credentialData[field.name]);\n\n      // When editing, password fields are optional (keep existing values)\n      if (editingCredential) {\n        missingFields = missingFields.filter((field) => field.type !== 'password');\n      }\n\n      if (missingFields.length > 0) {\n        alert(`Please fill in required fields: ${missingFields.map((f) => f.name).join(', ')}`);\n        return;\n      }\n    }\n\n    try {\n      const credentialPayload = {\n        name: credentialName.trim(),\n        type: credentialType as any, // Cast to bypass enum validation\n        integration: credentialType, // Use credential type as integration for AI providers\n        data: isAIProvider ? credentialData : { authType, clientId, clientSecret },\n        testOnCreate: true,\n      };\n\n      let savedCredential;\n      if (editingCredential) {\n        // Update existing credential\n        savedCredential = await credentialApiService.updateCredential(\n          editingCredential.id,\n          credentialPayload\n        );\n      } else {\n        // Create new credential\n        savedCredential = await credentialApiService.createCredential(credentialPayload);\n      }\n\n      // Create the credential object for the UI\n      const credentialForUI = {\n        id: editingCredential?.id || savedCredential.id || `cred-${Date.now()}`,\n        name: credentialName,\n        type: credentialType,\n        data: credentialPayload.data,\n        isConnected: true,\n        createdAt:\n          editingCredential?.createdAt || savedCredential.createdAt || new Date().toISOString(),\n        updatedAt: savedCredential.updatedAt || new Date().toISOString(),\n      };\n\n      // Show success message\n      alert(\n        `${credentialTypeDef?.name || 'Credential'} ${editingCredential ? 'updated' : 'saved'} successfully!`\n      );\n\n      onSave(credentialForUI);\n      onClose();\n\n      // Reset form\n      setCredentialName('');\n      setClientId('');\n      setClientSecret('');\n      setCredentialData({});\n      setTestResult(null);\n    } catch (error: any) {\n      alert(`Failed to save credential: ${error.message}`);\n    }\n  };\n\n  const handleCredentialDataChange = (field: string, value: any) => {\n    setCredentialData((prev) => ({ ...prev, [field]: value }));\n    // Clear test result when data changes\n    if (testResult) {\n      setTestResult(null);\n    }\n  };\n\n  const handleTestCredential = async () => {\n    if (!credentialName.trim()) {\n      alert('Please enter a credential name first');\n      return;\n    }\n\n    if (isAIProvider) {\n      // Validate required fields for AI providers\n      const requiredFields = credentialTypeDef?.fields.filter((p) => p.required) || [];\n      const missingFields = requiredFields.filter((field) => !credentialData[field.name]);\n\n      if (missingFields.length > 0) {\n        alert(`Please fill in required fields: ${missingFields.map((f) => f.name).join(', ')}`);\n        return;\n      }\n    }\n\n    try {\n      setIsTesting(true);\n      setTestResult(null);\n\n      // Create a test credential payload\n      const testCredentialPayload = {\n        name: `${credentialName.trim()}_test_${Date.now()}`,\n        type: credentialType as any, // Cast to bypass enum validation\n        integration: credentialType,\n        data: isAIProvider ? credentialData : { authType, clientId, clientSecret },\n        testOnCreate: true,\n      };\n\n      const testCredential = await credentialApiService.createCredential(testCredentialPayload);\n      const testCredentialId = testCredential.id;\n\n      try {\n        // Test the credential\n        const result = await credentialApiService.testCredential(testCredentialId);\n        setTestResult((result as any).data || result); // Handle both response formats\n\n        // Always delete the test credential after testing\n        await credentialApiService.deleteCredential(testCredentialId);\n      } catch (testError: any) {\n        // Even if test fails, delete the credential\n        try {\n          await credentialApiService.deleteCredential(testCredentialId);\n        } catch (_deleteError) {}\n\n        setTestResult({\n          success: false,\n          message: testError.message || 'Credential test failed',\n        });\n      }\n    } catch (error: any) {\n      setTestResult({\n        success: false,\n        message: error.message || 'Failed to test credential',\n      });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n\n  const handleGmailConnect = async () => {\n    if (!credentialName.trim()) {\n      alert('Please enter a credential name first');\n      return;\n    }\n\n    try {\n      setIsConnecting(true);\n\n      // Auto-save workflow before OAuth redirect to prevent node loss\n      if (\n        window.location.pathname.includes('/workflow/') &&\n        (nodes.length > 0 || edges.length > 0)\n      ) {\n        try {\n          if (activeWorkflow?.id) {\n            await updateWorkflow(activeWorkflow.id, { nodes, edges });\n          }\n        } catch (_saveError) {\n          // Continue with OAuth even if save fails\n        }\n      }\n\n      // Start Gmail OAuth flow - this will redirect the user but return to current URL\n      await credentialApiService.startGmailOAuthFlow(credentialName, window.location.href);\n      // User will be redirected, so we don't need to do anything else\n    } catch (error: any) {\n      alert(error.message || 'Failed to connect with Gmail');\n      setIsConnecting(false);\n    }\n  };\n\n  const getCredentialIcon = (type: string) => {\n    if (credentialTypeDef?.icon) {\n      return credentialTypeDef.icon;\n    }\n    switch (type) {\n      case 'gmail':\n        return '📧';\n      case 'google':\n        return '🔍';\n      case 'openaiApi':\n        return '🤖';\n      case 'anthropicApi':\n        return '🧠';\n      case 'googleAiApi':\n        return '🔷';\n      case 'azureOpenAiApi':\n        return '☁️';\n      case 'awsBedrockApi':\n        return '🟠';\n      default:\n        return '🔑';\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 10,
        "end": 308,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 75
        },
        "endLoc": {
          "line": 308,
          "column": 7,
          "position": 2549
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 17,
        "end": 315,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 92
        },
        "endLoc": {
          "line": 315,
          "column": 64,
          "position": 2566
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "{/* Header */}\n        <div className=\"p-6 border-b border-gray-700 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-gray-700 rounded flex items-center justify-center text-xl\">\n                {getCredentialIcon(credentialType)}\n              </div>\n              <div>\n                <h2 className=\"text-lg font-semibold text-white\">\n                  {editingCredential ? 'Edit' : 'Create'}{' '}\n                  {credentialName || credentialTypeDef?.name || `${credentialType} account`}\n                </h2>\n                <p className=\"text-sm text-gray-400\">\n                  {editingCredential ? 'Update your' : 'Create new'}{' '}\n                  {credentialTypeDef?.description?.toLowerCase() ||\n                    `${credentialType} ${isGmailOAuth ? 'OAuth2' : 'API'}`}\n                </p>\n              </div>\n            </div>\n            {isGmailOAuth ? (\n              <button\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 311,
        "end": 332,
        "startLoc": {
          "line": 311,
          "column": 9,
          "position": 2576
        },
        "endLoc": {
          "line": 332,
          "column": 17,
          "position": 2780
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 335,
        "end": 356,
        "startLoc": {
          "line": 335,
          "column": 7,
          "position": 2737
        },
        "endLoc": {
          "line": 356,
          "column": 15,
          "position": 2941
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ">\n                Save {credentialTypeDef?.name || 'Credential'}\n              </button>\n            )}\n          </div>\n          <button onClick={onClose} className=\"text-gray-400 hover:text-white\" aria-label=\"Close\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex flex-1 overflow-hidden",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 344,
        "end": 362,
        "startLoc": {
          "line": 344,
          "column": 15,
          "position": 2879
        },
        "endLoc": {
          "line": 362,
          "column": 28,
          "position": 3019
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 368,
        "end": 99,
        "startLoc": {
          "line": 368,
          "column": 13,
          "position": 3040
        },
        "endLoc": {
          "line": 99,
          "column": 23,
          "position": 508
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ">\n                Details\n              </button>\n            </nav>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 p-6 overflow-y-auto\">\n            {activeTab === 'connection' && (\n              <div className=\"space-y-6\">\n                {isGmailOAuth ? (\n                  /* Gmail OAuth2 Simplified UI */\n                  <>\n                    {/* Gmail OAuth content stays the same */}\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 393,
        "end": 410,
        "startLoc": {
          "line": 393,
          "column": 15,
          "position": 3190
        },
        "endLoc": {
          "line": 410,
          "column": 27,
          "position": 3295
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 417,
        "end": 434,
        "startLoc": {
          "line": 417,
          "column": 13,
          "position": 3351
        },
        "endLoc": {
          "line": 434,
          "column": 25,
          "position": 3456
        }
      }
    },
    {
      "format": "tsx",
      "lines": 45,
      "fragment": "/>\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            <strong>Easy Setup!</strong> No technical configuration required. We'll\n                            connect to Gmail using secure OAuth2 authentication.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-medium text-white\">Connect your Gmail account</h3>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            1\n                          </div>\n                          <span className=\"text-gray-300\">Enter a name for this credential</span>\n                        </div>\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            2\n                          </div>\n                          <span className=\"text-gray-300\">\n                            Click \"Connect with Google\" to authorize access\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-3 p-3 bg-gray-800 border border-gray-600\">\n                          <div className=\"w-6 h-6 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold\">\n                            3\n                          </div>\n                          <span className=\"text-gray-300\">\n                            Grant permissions to read and send emails\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Credential Name <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 418,
        "end": 462,
        "startLoc": {
          "line": 418,
          "column": 27,
          "position": 3338
        },
        "endLoc": {
          "line": 462,
          "column": 25,
          "position": 3706
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 442,
        "end": 486,
        "startLoc": {
          "line": 442,
          "column": 25,
          "position": 3499
        },
        "endLoc": {
          "line": 486,
          "column": 23,
          "position": 3867
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ">\n                        <span>🔗</span>\n                        <span>{isConnecting ? 'Connecting...' : 'Connect with Google'}</span>\n                      </button>\n                    </div>\n                  </>\n                ) : isAIProvider && credentialTypeDef ? (\n                  /* AI Provider Credentials Form */\n                  <>\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 478,
        "end": 490,
        "startLoc": {
          "line": 478,
          "column": 23,
          "position": 3832
        },
        "endLoc": {
          "line": 490,
          "column": 27,
          "position": 3924
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 502,
        "end": 514,
        "startLoc": {
          "line": 502,
          "column": 21,
          "position": 3993
        },
        "endLoc": {
          "line": 514,
          "column": 25,
          "position": 4085
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "<div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            <strong>{",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 487,
        "end": 502,
        "startLoc": {
          "line": 487,
          "column": 21,
          "position": 3900
        },
        "endLoc": {
          "line": 502,
          "column": 2,
          "position": 3994
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 407,
        "end": 422,
        "startLoc": {
          "line": 407,
          "column": 21,
          "position": 3271
        },
        "endLoc": {
          "line": 422,
          "column": 5,
          "position": 3365
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "/>\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            <strong>{credentialTypeDef.name} Connection</strong>{' '}\n                            {credentialTypeDef.description}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Credential Name Input */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Credential Name <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 498,
        "end": 515,
        "startLoc": {
          "line": 498,
          "column": 27,
          "position": 3967
        },
        "endLoc": {
          "line": 515,
          "column": 25,
          "position": 4084
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 522,
        "end": 539,
        "startLoc": {
          "line": 522,
          "column": 25,
          "position": 4128
        },
        "endLoc": {
          "line": 539,
          "column": 23,
          "position": 4245
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "<div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Credential Name <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={credentialName}\n                        onChange={(e) => setCredentialName(e.target.value)}\n                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder={`e.g., ${credentialTypeDef.name} Account`}\n                      ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 510,
        "end": 520,
        "startLoc": {
          "line": 510,
          "column": 21,
          "position": 4042
        },
        "endLoc": {
          "line": 520,
          "column": 23,
          "position": 4133
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 457,
        "end": 466,
        "startLoc": {
          "line": 457,
          "column": 21,
          "position": 3664
        },
        "endLoc": {
          "line": 466,
          "column": 2,
          "position": 3745
        }
      }
    },
    {
      "format": "tsx",
      "lines": 39,
      "fragment": "/>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        Choose a name to identify this {credentialTypeDef.name} connection\n                      </p>\n                    </div>\n\n                    {/* Dynamic Credential Properties */}\n                    {credentialTypeDef.fields.map((property) => (\n                      <div key={property.name}>\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                          {property.name}{' '}\n                          {property.required && <span className=\"text-red-400\">*</span>}\n                        </label>\n                        <input\n                          type={property.type === 'password' ? 'password' : 'text'}\n                          value={credentialData[property.name] || ''}\n                          onChange={(e) =>\n                            handleCredentialDataChange(property.name, e.target.value)\n                          }\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          placeholder={\n                            property.type === 'password' &&\n                            editingCredential &&\n                            !credentialData[property.name]\n                              ? '••••••••••• (hidden - enter new value to update)'\n                              : property.placeholder\n                          }\n                          required={property.required && !editingCredential} // Not required when editing (keep existing value)\n                        />\n                        {property.description && (\n                          <p className=\"text-xs text-gray-400 mt-1\">{property.description}</p>\n                        )}\n                      </div>\n                    ))}\n\n                    {/* Test Credential Button */}\n                    <div className=\"pt-4\">\n                      <button\n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 520,
        "end": 558,
        "startLoc": {
          "line": 520,
          "column": 23,
          "position": 4134
        },
        "endLoc": {
          "line": 558,
          "column": 25,
          "position": 4464
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 544,
        "end": 580,
        "startLoc": {
          "line": 544,
          "column": 21,
          "position": 4295
        },
        "endLoc": {
          "line": 580,
          "column": 23,
          "position": 4622
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": ">\n                        <div className=\"flex items-start space-x-2\">\n                          <span className=\"text-lg\">{testResult.success ? '✅' : '❌'}</span>\n                          <div className=\"flex-1\">\n                            <p className=\"text-sm font-medium\">\n                              {testResult.success ? 'Connection Successful!' : 'Connection Failed'}\n                            </p>\n                            <p className=\"text-sm mt-1\">{testResult.message}</p>\n                            {testResult.details && (\n                              <details className=\"mt-2\">\n                                <summary className=\"text-xs cursor-pointer hover:underline\">\n                                  View Details\n                                </summary>\n                                <pre className=\"text-xs bg-gray-800 p-2 rounded mt-1 overflow-auto\">\n                                  {JSON.stringify(testResult.details, null, 2)}\n                                </pre>\n                              </details>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                ) : (\n                  /* Generic OAuth2 UI for other services */\n                  <>\n                    {/* Info Banner */}\n                    <div className=\"bg-orange-900/20 border border-orange-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 575,
        "end": 605,
        "startLoc": {
          "line": 575,
          "column": 23,
          "position": 4571
        },
        "endLoc": {
          "line": 605,
          "column": 27,
          "position": 4825
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 597,
        "end": 627,
        "startLoc": {
          "line": 597,
          "column": 21,
          "position": 4729
        },
        "endLoc": {
          "line": 627,
          "column": 25,
          "position": 4983
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ">\n                              Open docs\n                            </a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Auth Type Selection */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-3\">\n                        Connect using <span className=\"text-red-400\">*</span>\n                      </label>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-3 p-3 border border-gray-600 rounded cursor-pointer hover:bg-gray-800\">\n                          <input\n                            ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 623,
        "end": 639,
        "startLoc": {
          "line": 623,
          "column": 29,
          "position": 4936
        },
        "endLoc": {
          "line": 639,
          "column": 29,
          "position": 5039
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 645,
        "end": 661,
        "startLoc": {
          "line": 645,
          "column": 27,
          "position": 5094
        },
        "endLoc": {
          "line": 661,
          "column": 27,
          "position": 5197
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "/>\n                          <span className=\"text-white\">Service Account</span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* OAuth Redirect URL */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        OAuth Redirect URL\n                      </label>\n                      <div className=\"flex items-center space-x-2 p-3 bg-gray-800 border border-gray-600 rounded\">\n                        <span className=\"text-gray-300 text-sm flex-1\">\n                          https://workflow.lxroot.net/rest/oauth2-credential/callback\n                        </span>\n                        <button\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 654,
        "end": 670,
        "startLoc": {
          "line": 654,
          "column": 27,
          "position": 5173
        },
        "endLoc": {
          "line": 670,
          "column": 27,
          "position": 5290
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 676,
        "end": 692,
        "startLoc": {
          "line": 676,
          "column": 25,
          "position": 5331
        },
        "endLoc": {
          "line": 692,
          "column": 25,
          "position": 5448
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ">\n                          Copy\n                        </button>\n                      </div>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        In {credentialType}, use the URL above when prompted to enter an OAuth\n                        callback or redirect URL\n                      </p>\n                    </div>\n\n                    {/* Client ID */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                        Client ID <span className=\"text-red-400\">*</span>\n                      </label>\n                      <input\n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 676,
        "end": 692,
        "startLoc": {
          "line": 676,
          "column": 25,
          "position": 5317
        },
        "endLoc": {
          "line": 692,
          "column": 25,
          "position": 5439
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 698,
        "end": 714,
        "startLoc": {
          "line": 698,
          "column": 23,
          "position": 5475
        },
        "endLoc": {
          "line": 714,
          "column": 23,
          "position": 5597
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "}\n                    <div className=\"bg-blue-900/20 border border-blue-600/30 rounded p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <svg\n                          className=\"w-5 h-5 text-blue-400 mt-0.5\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 20 20\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                            clipRule=\"evenodd\"\n                          />\n                        </svg>\n                        <div>\n                          <p className=\"text-sm text-blue-300\">\n                            Enterprise",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 714,
        "end": 730,
        "startLoc": {
          "line": 714,
          "column": 22,
          "position": 5594
        },
        "endLoc": {
          "line": 730,
          "column": 11,
          "position": 5688
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 406,
        "end": 422,
        "startLoc": {
          "line": 406,
          "column": 41,
          "position": 3268
        },
        "endLoc": {
          "line": 422,
          "column": 2,
          "position": 3362
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": ">\n                              More info\n                            </a>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            {activeTab === 'sharing' && (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-400\">Sharing settings will be available here</p>\n              </div>\n            )}\n\n            {activeTab === 'details' && (\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Credential Name\n                  </label>\n                  <input\n                    ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.legacy.tsx",
        "start": 736,
        "end": 761,
        "startLoc": {
          "line": 736,
          "column": 29,
          "position": 5740
        },
        "endLoc": {
          "line": 761,
          "column": 21,
          "position": 5901
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CredentialModal.v1.tsx",
        "start": 758,
        "end": 783,
        "startLoc": {
          "line": 758,
          "column": 27,
          "position": 5898
        },
        "endLoc": {
          "line": 783,
          "column": 19,
          "position": 6059
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "\">\n                <Select>\n                  <Select.Option value=\"all\">Wait for All</Select.Option>\n                  <Select.Option value=\"race\">First to Complete</Select.Option>\n                  <Select.Option value=\"any\">Any to Complete</Select.Option>\n                </Select>\n              </Form.Item>\n            </>\n          )}\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ContainerNodePanel.tsx",
        "start": 361,
        "end": 370,
        "startLoc": {
          "line": 361,
          "column": 4,
          "position": 2718
        },
        "endLoc": {
          "line": 370,
          "column": 3,
          "position": 2803
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/NodeTypes/ContainerNode.legacy.tsx",
        "start": 394,
        "end": 404,
        "startLoc": {
          "line": 394,
          "column": 19,
          "position": 3039
        },
        "endLoc": {
          "line": 404,
          "column": 2,
          "position": 3125
        }
      }
    },
    {
      "format": "tsx",
      "lines": 64,
      "fragment": "= (props: {\n  sourceX: number;\n  sourceY: number;\n  sourcePosition: Position;\n  targetX: number;\n  targetY: number;\n  targetPosition: Position;\n  connectionType?: ConnectionTypeValue;\n}) => {\n  const {\n    targetX,\n    targetY,\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetPosition,\n    connectionType = ConnectionType.Main,\n  } = props;\n  const isConnectorStraight = sourceY === targetY;\n\n  // Use Bezier path for normal connections or non-main connections\n  if (!isRightOfSourceHandle(sourceX, targetX) || connectionType !== ConnectionType.Main) {\n    const segment = getBezierPath(props);\n    return {\n      segments: [segment],\n      labelPosition: [segment[1], segment[2]],\n      isConnectorStraight,\n    };\n  }\n\n  // Connection is backwards and the source is on the right side\n  // Use smooth step path to avoid overlapping the source node\n  const firstSegmentTargetX = (sourceX + targetX) / 2;\n  const firstSegmentTargetY = sourceY + EDGE_PADDING_BOTTOM;\n  const firstSegment = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    targetX: firstSegmentTargetX,\n    targetY: firstSegmentTargetY,\n    sourcePosition,\n    targetPosition: Position.Right,\n    borderRadius: EDGE_BORDER_RADIUS,\n    offset: EDGE_PADDING_X,\n  });\n\n  const secondSegment = getSmoothStepPath({\n    sourceX: firstSegmentTargetX,\n    sourceY: firstSegmentTargetY,\n    targetX,\n    targetY,\n    sourcePosition: Position.Left,\n    targetPosition,\n    borderRadius: EDGE_BORDER_RADIUS,\n    offset: EDGE_PADDING_X,\n  });\n\n  return {\n    segments: [firstSegment, secondSegment],\n    labelPosition: [firstSegmentTargetX, firstSegmentTargetY],\n    isConnectorStraight,\n  };\n};\n\nconst ConnectionLine",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConnectionLine.tsx",
        "start": 28,
        "end": 91,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 230
        },
        "endLoc": {
          "line": 91,
          "column": 15,
          "position": 658
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CustomEdge.tsx",
        "start": 16,
        "end": 79,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 156
        },
        "endLoc": {
          "line": 79,
          "column": 11,
          "position": 584
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "\n          markerWidth=\"10\"\n          markerHeight=\"7\"\n          refX=\"9\"\n          refY=\"3.5\"\n          orient=\"auto\"\n        >\n          <polygon\n            points=\"0 0, 10 3.5, 0 7\"\n            fill={isMainConnection ? '#374151' : '#6b7280'}\n            style={{\n              transition: 'fill 0.3s ease',\n            }}\n          />\n        </marker>\n      </defs>\n      {segments.map((segment, index) => (\n        <path",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConnectionLine.tsx",
        "start": 146,
        "end": 163,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1077
        },
        "endLoc": {
          "line": 163,
          "column": 5,
          "position": 1177
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CustomEdge.tsx",
        "start": 216,
        "end": 233,
        "startLoc": {
          "line": 216,
          "column": 2,
          "position": 1692
        },
        "endLoc": {
          "line": 233,
          "column": 15,
          "position": 1796
        }
      }
    },
    {
      "format": "javascript",
      "lines": 79,
      "fragment": "}\n          onSelect={onFieldSelect}\n        />\n      ))}\n    </div>\n  );\n};\n\n// AI Agent data condition view\nconst AIConditionView: React.FC<{\n  data: any;\n  selectedField: string | null;\n  onFieldSelect: (field: string) => void;\n}> = ({ data, selectedField, onFieldSelect }) => {\n  const aiFields = [\n    { key: 'output', label: 'AI Output', value: data.output },\n    { key: 'provider', label: 'Provider', value: data.provider },\n    { key: 'model', label: 'Model', value: data.model },\n    { key: 'usage', label: 'Token Usage', value: data.usage },\n  ];\n\n  return (\n    <div className=\"space-y-3\">\n      <div className=\"text-xs text-orange-400 mb-2\">\n        🤖 AI response fields available for conditions:\n      </div>\n      {aiFields.map((field) => (\n        <FieldRow\n          key={field.key}\n          fieldKey={field.key}\n          label={field.label}\n          value={field.value}\n          isSelected={selectedField === field.key}\n          onSelect={onFieldSelect}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Generic data condition view\nconst GenericConditionView: React.FC<{\n  data: any;\n  selectedField: string | null;\n  onFieldSelect: (field: string) => void;\n}> = ({ data, selectedField, onFieldSelect }) => {\n  const fields = Object.keys(data);\n\n  return (\n    <div className=\"space-y-3\">\n      <div className=\"text-xs text-gray-400 mb-2\">📊 Data fields available for conditions:</div>\n      {fields.map((key) => (\n        <FieldRow\n          key={key}\n          fieldKey={key}\n          label={key}\n          value={data[key]}\n          isSelected={selectedField === key}\n          onSelect={onFieldSelect}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Reusable field row component\nconst FieldRow: React.FC<{\n  fieldKey: string;\n  label: string;\n  value: any;\n  isSelected: boolean;\n  onSelect: (field: string) => void;\n}> = ({ fieldKey, label, value, isSelected, onSelect }) => {\n  const displayValue =\n    typeof value === 'string' && value.length > 100 ? `${value.substring(0, 100)}...` : value;\n\n  return (\n    <div\n      className={`p-3 rounded border cursor-pointer transition-all ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 408,
        "end": 486,
        "startLoc": {
          "line": 408,
          "column": 5,
          "position": 3594
        },
        "endLoc": {
          "line": 486,
          "column": 51,
          "position": 4293
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 332,
        "end": 436,
        "startLoc": {
          "line": 332,
          "column": 14,
          "position": 2860
        },
        "endLoc": {
          "line": 436,
          "column": 6,
          "position": 3875
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<{\n  data: any;\n  selectedField: string | null;\n  onFieldSelect: (field: string) => void;\n}> = ({ data, selectedField, onFieldSelect }) => {\n  const fields = Object.keys(data);\n\n  return (\n    <div className=\"space-y-3\">\n      <div className=\"text-xs text-gray-400 mb-2",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 449,
        "end": 458,
        "startLoc": {
          "line": 449,
          "column": 21,
          "position": 3945
        },
        "endLoc": {
          "line": 458,
          "column": 27,
          "position": 4049
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 390,
        "end": 399,
        "startLoc": {
          "line": 390,
          "column": 23,
          "position": 3416
        },
        "endLoc": {
          "line": 399,
          "column": 28,
          "position": 3520
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ");\n\n  // Convert workflow coordinates to screen coordinates\n  const workflowToScreen = useCallback(\n    (x: number, y: number) => ({\n      x: (x + transform.x) * transform.zoom,\n      y: (y + transform.y) * transform.zoom,\n    }),\n    [transform]\n  );\n\n  // Convert screen coordinates to workflow coordinates",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CommentAnnotations.tsx",
        "start": 64,
        "end": 75,
        "startLoc": {
          "line": 64,
          "column": 5,
          "position": 476
        },
        "endLoc": {
          "line": 75,
          "column": 54,
          "position": 570
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/UserPresenceOverlay.tsx",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 458
        },
        "endLoc": {
          "line": 70,
          "column": 36,
          "position": 552
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "const getUserColor = useCallback((userId: string): string => {\n    const colors = [\n      '#1890ff',\n      '#52c41a',\n      '#faad14',\n      '#f5222d',\n      '#722ed1',\n      '#13c2c2',\n      '#eb2f96',\n      '#fa541c',\n      '#2f54eb',\n      '#a0d911',\n    ];\n    const hash = userId.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    return colors[hash % colors.length];\n  }, []);\n\n  // Handle canvas click for new comments",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CommentAnnotations.tsx",
        "start": 85,
        "end": 102,
        "startLoc": {
          "line": 85,
          "column": 3,
          "position": 658
        },
        "endLoc": {
          "line": 102,
          "column": 40,
          "position": 800
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/UserPresenceOverlay.tsx",
        "start": 44,
        "end": 61,
        "startLoc": {
          "line": 44,
          "column": 3,
          "position": 321
        },
        "endLoc": {
          "line": 61,
          "column": 54,
          "position": 463
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "}\n                      onPressEnter={() => handleReplyToComment(comment.id)}\n                    />\n                    <Button\n                      type=\"text\"\n                      size=\"small\"\n                      icon={<SendOutlined />}\n                      onClick={() => handleReplyToComment(comment.id)}\n                      disabled={!replyContents[comment.id]?.trim()}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Card>\n          ))\n        )}\n      </div>\n    </div>\n  );\n\n  // Conflicts Tab\n  const ConflictsTab: React.FC = () => (\n    <div className=\"p-4 space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n          Conflicts ({activeConflicts.length})\n        </h3>\n        {activeConflicts.length > 0 && <Badge count={activeConflicts",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CollaborationPanel.tsx",
        "start": 412,
        "end": 439,
        "startLoc": {
          "line": 412,
          "column": 23,
          "position": 3370
        },
        "endLoc": {
          "line": 439,
          "column": 16,
          "position": 3582
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CommentAnnotations.tsx",
        "start": 242,
        "end": 260,
        "startLoc": {
          "line": 242,
          "column": 17,
          "position": 1981
        },
        "endLoc": {
          "line": 260,
          "column": 14,
          "position": 2098
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "const getUserColor = useCallback((userId: string): string => {\n    const colors = [\n      '#1890ff',\n      '#52c41a',\n      '#faad14',\n      '#f5222d',\n      '#722ed1',\n      '#13c2c2',\n      '#eb2f96',\n      '#fa541c',\n      '#2f54eb',\n      '#a0d911',\n    ];\n    const hash = userId.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    return colors[hash % colors.length];\n  }, []);\n\n  // Handle adding a comment",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/CollaborationPanel.tsx",
        "start": 98,
        "end": 115,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 716
        },
        "endLoc": {
          "line": 115,
          "column": 27,
          "position": 858
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/UserPresenceOverlay.tsx",
        "start": 44,
        "end": 61,
        "startLoc": {
          "line": 44,
          "column": 3,
          "position": 321
        },
        "endLoc": {
          "line": 61,
          "column": 54,
          "position": 463
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "}>\n              <AreaChart data={performanceHistory}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"timestamp\"\n                  tickFormatter={(value) => new Date(value).toLocaleTimeString()}\n                />\n                <YAxis />\n                <RechartsTooltip\n                  labelFormatter={(value) => new Date(value).toLocaleString()}\n                  formatter={(value: number) => [`${value.toFixed(2)}ms`, 'Performance'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AnalyticsDashboard.tsx",
        "start": 295,
        "end": 305,
        "startLoc": {
          "line": 295,
          "column": 4,
          "position": 1969
        },
        "endLoc": {
          "line": 305,
          "column": 14,
          "position": 2084
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AnalyticsDashboard.tsx",
        "start": 179,
        "end": 189,
        "startLoc": {
          "line": 179,
          "column": 4,
          "position": 1096
        },
        "endLoc": {
          "line": 189,
          "column": 11,
          "position": 1211
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\"\n      markerWidth=\"10\"\n      markerHeight=\"10\"\n      refX=\"9\"\n      refY=\"3\"\n      orient=\"auto\"\n      markerUnits=\"strokeWidth\"\n    >\n      <polygon points=\"0,0 0,6 9,3\" fill=\"#6366F1",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 115,
        "end": 123,
        "startLoc": {
          "line": 115,
          "column": 17,
          "position": 742
        },
        "endLoc": {
          "line": 123,
          "column": 8,
          "position": 795
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 102,
        "end": 110,
        "startLoc": {
          "line": 102,
          "column": 17,
          "position": 653
        },
        "endLoc": {
          "line": 110,
          "column": 8,
          "position": 706
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\"\n      markerWidth=\"10\"\n      markerHeight=\"10\"\n      refX=\"9\"\n      refY=\"3\"\n      orient=\"auto\"\n      markerUnits=\"strokeWidth\"\n    >\n      <polygon points=\"0,0 0,6 9,3\" fill=\"#8B5CF6",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 128,
        "end": 136,
        "startLoc": {
          "line": 128,
          "column": 17,
          "position": 831
        },
        "endLoc": {
          "line": 136,
          "column": 8,
          "position": 884
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 102,
        "end": 110,
        "startLoc": {
          "line": 102,
          "column": 17,
          "position": 653
        },
        "endLoc": {
          "line": 110,
          "column": 8,
          "position": 706
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\"\n      markerWidth=\"10\"\n      markerHeight=\"10\"\n      refX=\"9\"\n      refY=\"3\"\n      orient=\"auto\"\n      markerUnits=\"strokeWidth\"\n    >\n      <polygon points=\"0,0 0,6 9,3\" fill=\"#14B8A6",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 141,
        "end": 149,
        "startLoc": {
          "line": 141,
          "column": 17,
          "position": 920
        },
        "endLoc": {
          "line": 149,
          "column": 8,
          "position": 973
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIEdges.tsx",
        "start": 102,
        "end": 110,
        "startLoc": {
          "line": 102,
          "column": 17,
          "position": 653
        },
        "endLoc": {
          "line": 110,
          "column": 8,
          "position": 706
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "getNodeIcon(node)}\n                    </span>\n                    <div>\n                      <div className=\"text-sm font-medium text-white\">\n                        {node?.data?.label || 'Unnamed Node'}\n                      </div>\n                      <div className=\"text-xs text-gray-400\">{getNodeTypeDisplay(node)}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    {hasOutputData ? (\n                      <span className=\"px-2 py-1 bg-green-800 text-green-200 rounded text-xs flex items-center space-x-1\">\n                        <span>✓</span>\n                        <span>Data Ready",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx",
        "start": 71,
        "end": 84,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 699
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 821
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 109,
        "end": 122,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 988
        },
        "endLoc": {
          "line": 122,
          "column": 10,
          "position": 1110
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ") : (\n                  <div className=\"text-center py-4 text-gray-400\">\n                    <div className=\"text-sm\">No output data available</div>\n                    <div className=\"text-xs mt-1\">Test the connected node to generate data</div>\n                  </div>\n                )}\n              </div>\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx",
        "start": 100,
        "end": 107,
        "startLoc": {
          "line": 100,
          "column": 17,
          "position": 940
        },
        "endLoc": {
          "line": 107,
          "column": 3,
          "position": 1020
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 155,
        "end": 162,
        "startLoc": {
          "line": 155,
          "column": 19,
          "position": 1331
        },
        "endLoc": {
          "line": 162,
          "column": 2,
          "position": 1411
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const getNodeIcon = (node: any): string => {\n  if (\n    node?.data?.integrationData?.id === 'gmail' ||\n    node?.data?.enhancedNodeType?.id === 'gmail-trigger'\n  ) {\n    return '📧';\n  }\n  if (node?.type === 'transform') {\n    return '🔄';\n  }\n  if (node?.type === 'trigger'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx",
        "start": 333,
        "end": 343,
        "startLoc": {
          "line": 333,
          "column": 1,
          "position": 3354
        },
        "endLoc": {
          "line": 343,
          "column": 10,
          "position": 3463
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 518,
        "end": 528,
        "startLoc": {
          "line": 518,
          "column": 1,
          "position": 4537
        },
        "endLoc": {
          "line": 528,
          "column": 11,
          "position": 4646
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ";\n  }\n  if (node?.type === 'trigger') {\n    return '⚡';\n  }\n  return '📊';\n};\n\nconst getNodeType = (node: any): string => {\n  if (\n    node?.data?.integrationData?.id === 'gmail' ||\n    node?.data?.enhancedNodeType?.id === 'gmail-trigger'\n  ) {\n    return 'gmail-trigger';\n  }\n  if (node?.type === 'transform') {\n    return 'transform';\n  }\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx",
        "start": 341,
        "end": 359,
        "startLoc": {
          "line": 341,
          "column": 5,
          "position": 3447
        },
        "endLoc": {
          "line": 359,
          "column": 7,
          "position": 3586
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 529,
        "end": 547,
        "startLoc": {
          "line": 529,
          "column": 5,
          "position": 4672
        },
        "endLoc": {
          "line": 547,
          "column": 3,
          "position": 4811
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n  }\n  return node?.type || 'unknown';\n};\n\nconst getNodeTypeDisplay = (node: any): string => {\n  return (\n    node?.data?.enhancedNodeType?.displayName ||\n    node?.data?.nodeTypeData?.displayName ||\n    node?.data?.nodeTypeData?.name ||\n    node?.type ||\n    'Unknown Node Type'\n  );\n};\n\nexport default AIAgentInputPanel",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/AIAgentInputPanel.tsx",
        "start": 357,
        "end": 372,
        "startLoc": {
          "line": 357,
          "column": 12,
          "position": 3580
        },
        "endLoc": {
          "line": 372,
          "column": 18,
          "position": 3692
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/WorkflowEditor/ConditionInputPanel.tsx",
        "start": 548,
        "end": 563,
        "startLoc": {
          "line": 548,
          "column": 11,
          "position": 4847
        },
        "endLoc": {
          "line": 563,
          "column": 20,
          "position": 4959
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "const reader = new FileReader();\n      reader.onload = async (e) => {\n        const base64 = e.target?.result as string;\n        const pluginPackage = {\n          metadata: {\n            ...form.getFieldsValue(),\n            id: `${form.getFieldValue('name').toLowerCase().replace(/\\s+/g, '-')}`,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            downloads: 0,\n            rating: 0,\n            reviews: 0,\n            verified: false,\n            featured: false,\n          },\n          manifest: {\n            main: 'index.js',\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PublishPlugin.tsx",
        "start": 130,
        "end": 147,
        "startLoc": {
          "line": 130,
          "column": 7,
          "position": 990
        },
        "endLoc": {
          "line": 147,
          "column": 2,
          "position": 1166
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PublishPlugin.tsx",
        "start": 86,
        "end": 102,
        "startLoc": {
          "line": 86,
          "column": 7,
          "position": 631
        },
        "endLoc": {
          "line": 102,
          "column": 21,
          "position": 806
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": "// Get category color\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      integration: 'blue',\n      trigger: 'green',\n      action: 'orange',\n      utility: 'purple',\n      ai: 'red',\n    };\n    return colors[category as keyof typeof colors] || 'default';\n  };\n\n  // Get pricing color\n  const getPricingColor = (pricing: string) => {\n    const colors = {\n      free: 'green',\n      paid: 'gold',\n      freemium: 'blue',\n    };\n    return colors[pricing as keyof typeof colors] || 'default';\n  };\n\n  // Format download count\n  const formatDownloads = (count: number) => {\n    if (count >= 1000000) {\n      return `${(count / 1000000).toFixed(1)}M`;\n    }\n    if (count >= 1000) {\n      return `${(count / 1000).toFixed(1)}K`;\n    }\n    return count.toString();\n  };\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginCard.tsx",
        "start": 33,
        "end": 66,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 223
        },
        "endLoc": {
          "line": 66,
          "column": 6,
          "position": 507
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/PluginMarketplace/PluginDetails.tsx",
        "start": 87,
        "end": 120,
        "startLoc": {
          "line": 87,
          "column": 3,
          "position": 529
        },
        "endLoc": {
          "line": 120,
          "column": 23,
          "position": 813
        }
      }
    },
    {
      "format": "javascript",
      "lines": 66,
      "fragment": "} /> {item}\n              </List.Item>\n            )}\n          />\n        </div>\n      ),\n    },\n    {\n      id: 'integrations',\n      title: 'Business Integrations',\n      description: 'Connect your favorite business tools',\n      target: '.integrations-button',\n      content: (\n        <div>\n          <Paragraph>\n            Connect Reporunner with your existing business tools like Salesforce, Slack, Google\n            Workspace, and hundreds of other applications.\n          </Paragraph>\n          <Space wrap>\n            <Tag color=\"blue\">Salesforce</Tag>\n            <Tag color=\"green\">Slack</Tag>\n            <Tag color=\"red\">Gmail</Tag>\n            <Tag color=\"purple\">Zapier</Tag>\n          </Space>\n        </div>\n      ),\n    },\n    {\n      id: 'analytics',\n      title: 'Business Analytics',\n      description: 'Track your automation ROI and performance',\n      target: '.analytics-button',\n      content: (\n        <div>\n          <Paragraph>\n            Monitor your automation performance with detailed analytics. See time saved, processes\n            automated, and ROI metrics.\n          </Paragraph>\n          <Alert\n            message=\"ROI Tracking\"\n            description=\"Track how much time and money your automations are saving your business.\"\n            type=\"success\"\n            showIcon\n          />\n        </div>\n      ),\n    },\n    {\n      id: 'complete',\n      title: 'Ready to Automate! 🚀',\n      description: 'Start automating your business processes',\n      target: '.main-content',\n      content: (\n        <div>\n          <div style={{ textAlign: 'center', marginBottom: 16 }}>\n            <TrophyOutlined style={{ fontSize: 48, color: '#faad14' }} />\n          </div>\n          <Paragraph>\n            You're ready to start automating! Choose a template or create a custom workflow to begin\n            streamlining your business processes.\n          </Paragraph>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Button type=\"primary\" block icon={<RocketOutlined />}>\n              Browse Templates\n            </Button>\n            <Button block icon={<PlayCircleOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Onboarding/OnboardingTour.tsx",
        "start": 238,
        "end": 303,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 1658
        },
        "endLoc": {
          "line": 303,
          "column": 19,
          "position": 2205
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Onboarding/OnboardingTour.tsx",
        "start": 142,
        "end": 188,
        "startLoc": {
          "line": 142,
          "column": 3,
          "position": 971
        },
        "endLoc": {
          "line": 188,
          "column": 13,
          "position": 1332
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n\n  const handleCreateWorkflow = async () => {\n    const name = prompt('Enter workflow name:');\n    if (name) {\n      if (name.trim().length === 0) {\n        toast.error('Please enter a valid workflow name.');\n        return;\n      }\n\n      try {\n        await createNewWorkflow(name.trim(), navigate);\n        toast.success('Workflow created successfully!');\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Failed to create workflow';\n        toast.error(errorMessage);\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Header.tsx",
        "start": 12,
        "end": 33,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 157
        },
        "endLoc": {
          "line": 33,
          "column": 6,
          "position": 336
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Sidebar.tsx",
        "start": 23,
        "end": 44,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 286
        },
        "endLoc": {
          "line": 44,
          "column": 4,
          "position": 465
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n      <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n      {/* Animated Background Orbs */}\n      <div className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse\" />\n      <div className=\"absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/20 rounded-full blur-3xl animate-pulse delay-1000\" />\n\n      <div className=\"container mx-auto px-6 relative z-10",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/HeroSection.tsx",
        "start": 41,
        "end": 49,
        "startLoc": {
          "line": 41,
          "column": 26,
          "position": 312
        },
        "endLoc": {
          "line": 49,
          "column": 37,
          "position": 380
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Layout.tsx",
        "start": 15,
        "end": 23,
        "startLoc": {
          "line": 15,
          "column": 56,
          "position": 130
        },
        "endLoc": {
          "line": 23,
          "column": 33,
          "position": 198
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "></div>\n                  <div className=\"p-3\"></div>\n                  <div className=\"p-3\"></div>\n                  <div className=\"p-3\"></div>\n                  <div className=\"p-3\"></div>\n                </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/ComparisonTable.tsx",
        "start": 405,
        "end": 410,
        "startLoc": {
          "line": 405,
          "column": 2,
          "position": 2628
        },
        "endLoc": {
          "line": 410,
          "column": 3,
          "position": 2690
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Landing/ComparisonTable.tsx",
        "start": 403,
        "end": 409,
        "startLoc": {
          "line": 403,
          "column": 3,
          "position": 2612
        },
        "endLoc": {
          "line": 409,
          "column": 2,
          "position": 2676
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") {\n    const workflow = await this.workflowRepository.findOne({\n      _id: id,\n      $or: [{ userId }, { isPublic: true }],\n    });\n\n    if (!workflow) {\n      throw new AppError('Workflow not found', 404);\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/services/WorkflowService.ts",
        "start": 285,
        "end": 295,
        "startLoc": {
          "line": 285,
          "column": 7,
          "position": 2180
        },
        "endLoc": {
          "line": 295,
          "column": 6,
          "position": 2266
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/services/WorkflowService.ts",
        "start": 94,
        "end": 104,
        "startLoc": {
          "line": 94,
          "column": 7,
          "position": 741
        },
        "endLoc": {
          "line": 104,
          "column": 7,
          "position": 827
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= async (req: Request, res: Response) => {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      throw new AppError('Validation failed', 400);\n    }\n\n    const userId = (req as any).user?.id;",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/controllers/NodeExecutionController.ts",
        "start": 16,
        "end": 22,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 107
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 192
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/oauth/controllers/OAuthController.ts",
        "start": 16,
        "end": 22,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 107
        },
        "endLoc": {
          "line": 22,
          "column": 3,
          "position": 193
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "} = req.query;\n\n    if (!workflowId) {\n      res.status(400).json(ApiResponse.error('Workflow ID is required'));\n      return;\n    }\n\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - Number(dateRange));\n\n    // Get comment analytics",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/controllers/CommentController.ts",
        "start": 34,
        "end": 44,
        "startLoc": {
          "line": 34,
          "column": 5,
          "position": 232
        },
        "endLoc": {
          "line": 44,
          "column": 25,
          "position": 315
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/collaboration/controllers/SessionController.ts",
        "start": 26,
        "end": 36,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 194
        },
        "endLoc": {
          "line": 36,
          "column": 25,
          "position": 277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\n\n    // Transform response to match frontend expectations\n    const responseData = {\n      user: result.user,\n      token: result.accessToken, // Frontend expects 'token', backend returns 'accessToken'\n      refreshToken: result.refreshToken,\n      permissions: result.user.permissions || [],\n      sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n    };\n\n    logger.info(`User logged in: ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/controllers/AuthController.ts",
        "start": 55,
        "end": 66,
        "startLoc": {
          "line": 55,
          "column": 9,
          "position": 475
        },
        "endLoc": {
          "line": 66,
          "column": 18,
          "position": 582
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/auth/controllers/AuthController.ts",
        "start": 33,
        "end": 44,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 261
        },
        "endLoc": {
          "line": 44,
          "column": 19,
          "position": 368
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "this.connected = true;\n    return this.connection;\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.connection) {\n      // Close connection\n      this.connection = null;\n      this.connected = false;\n    }\n  }\n\n  getConnection(): any {\n    return this.connection;\n  }\n\n  isConnected(): boolean {\n    return this.connected;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/connection/connection-manager.ts",
        "start": 17,
        "end": 36,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 134
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 254
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/postgresql/connection/postgres-connection.ts",
        "start": 18,
        "end": 38,
        "startLoc": {
          "line": 18,
          "column": 5,
          "position": 159
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 281
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "z.object({\n      id: z.string(),\n      source: z.string(),\n      target: z.string(),\n      sourceHandle: z.string().optional(),\n      targetHandle: z.string().optional(),\n    })\n  )",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 20,
        "end": 27,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 214
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 288
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/validators/workflowValidators.ts",
        "start": 29,
        "end": 35,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 238
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 309
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({\n          success: false,\n          errors: error.errors,\n          message: 'Validation failed',\n        });\n      } else {\n        next(error);\n      }\n    }\n  }\n\n  async getById",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 127,
        "end": 142,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1380
        },
        "endLoc": {
          "line": 142,
          "column": 8,
          "position": 1480
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 80,
        "end": 95,
        "startLoc": {
          "line": 80,
          "column": 32,
          "position": 963
        },
        "endLoc": {
          "line": 95,
          "column": 5,
          "position": 1063
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".parse(req.body);\n      const userId = req.user?.id;\n\n      const workflow = await this.workflowService.get(id);\n\n      if (!workflow) {\n        res.status(404).json({\n          success: false,\n          message: 'Workflow not found',\n        });\n        return;\n      }\n\n      if (!this.hasSharePermission",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 319,
        "end": 332,
        "startLoc": {
          "line": 319,
          "column": 20,
          "position": 2973
        },
        "endLoc": {
          "line": 332,
          "column": 19,
          "position": 3074
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 246,
        "end": 259,
        "startLoc": {
          "line": 246,
          "column": 22,
          "position": 2409
        },
        "endLoc": {
          "line": 259,
          "column": 21,
          "position": 2510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const userId = req.user?.id;\n\n      const workflow = await this.workflowService.get(id);\n\n      if (!workflow) {\n        res.status(404).json({\n          success: false,\n          message: 'Workflow not found',\n        });\n        return;\n      }\n\n      // Create a new version",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 423,
        "end": 435,
        "startLoc": {
          "line": 423,
          "column": 7,
          "position": 3768
        },
        "endLoc": {
          "line": 435,
          "column": 24,
          "position": 3853
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/services/workflow-service/src/controllers/workflow.controller.ts",
        "start": 247,
        "end": 259,
        "startLoc": {
          "line": 247,
          "column": 7,
          "position": 2419
        },
        "endLoc": {
          "line": 259,
          "column": 3,
          "position": 2504
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(socket: Socket, data: unknown): void {\n    const workflowId = socket.data.workflowId;\n    const user = socket.data.user as IJwtPayload;\n\n    if (!workflowId) {\n      return;\n    }\n\n    socket.to(`workflow:${workflowId}`).emit('node:moved'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 348,
        "end": 356,
        "startLoc": {
          "line": 348,
          "column": 15,
          "position": 3130
        },
        "endLoc": {
          "line": 356,
          "column": 13,
          "position": 3213
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 333,
        "end": 341,
        "startLoc": {
          "line": 333,
          "column": 17,
          "position": 3004
        },
        "endLoc": {
          "line": 341,
          "column": 15,
          "position": 3087
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(socket: Socket, data: unknown): void {\n    const workflowId = socket.data.workflowId;\n    const user = socket.data.user as IJwtPayload;\n\n    if (!workflowId) {\n      return;\n    }\n\n    socket.to(`workflow:${workflowId}`).emit('edge:added'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 363,
        "end": 371,
        "startLoc": {
          "line": 363,
          "column": 14,
          "position": 3256
        },
        "endLoc": {
          "line": 371,
          "column": 13,
          "position": 3339
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 333,
        "end": 341,
        "startLoc": {
          "line": 333,
          "column": 17,
          "position": 3004
        },
        "endLoc": {
          "line": 341,
          "column": 15,
          "position": 3087
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(socket: Socket, data: unknown): void {\n    const workflowId = socket.data.workflowId;\n    const user = socket.data.user as IJwtPayload;\n\n    if (!workflowId) {\n      return;\n    }\n\n    socket.to(`workflow:${workflowId}`).emit('edge:updated'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 378,
        "end": 386,
        "startLoc": {
          "line": 378,
          "column": 17,
          "position": 3382
        },
        "endLoc": {
          "line": 386,
          "column": 15,
          "position": 3465
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 333,
        "end": 341,
        "startLoc": {
          "line": 333,
          "column": 17,
          "position": 3004
        },
        "endLoc": {
          "line": 341,
          "column": 15,
          "position": 3087
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(socket: Socket, data: unknown): void {\n    const workflowId = socket.data.workflowId;\n    const user = socket.data.user as IJwtPayload;\n\n    if (!workflowId) {\n      return;\n    }\n\n    socket.to(`workflow:${workflowId}`).emit('edge:deleted'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 393,
        "end": 401,
        "startLoc": {
          "line": 393,
          "column": 17,
          "position": 3508
        },
        "endLoc": {
          "line": 401,
          "column": 15,
          "position": 3591
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 333,
        "end": 341,
        "startLoc": {
          "line": 333,
          "column": 17,
          "position": 3004
        },
        "endLoc": {
          "line": 341,
          "column": 15,
          "position": 3087
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "(socket: Socket, data: { nodeId: string; field: string }): void {\n    const workflowId = socket.data.workflowId;\n    const user = socket.data.user as IJwtPayload;\n    const sessionId = socket.data.sessionId;\n\n    if (!workflowId) {\n      return;\n    }\n\n    socket.to(`workflow:${workflowId}`).emit('typing:stopped'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 479,
        "end": 488,
        "startLoc": {
          "line": 479,
          "column": 17,
          "position": 4246
        },
        "endLoc": {
          "line": 488,
          "column": 17,
          "position": 4356
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/real-time/socket-server/socket-manager.ts",
        "start": 462,
        "end": 471,
        "startLoc": {
          "line": 462,
          "column": 18,
          "position": 4091
        },
        "endLoc": {
          "line": 471,
          "column": 17,
          "position": 4201
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": ");\n  }\n\n  /**\n   * Convert string ID to ObjectId\n   */\n  protected toObjectId(id: ID): ObjectId {\n    return new ObjectId(id as string);\n  }\n\n  /**\n   * Transform repository filter to MongoDB filter\n   */\n  protected transformFilter(filter: Filter<T> = {}): any {\n    // Convert string IDs to ObjectIds in the filter\n    const transformed = { ...filter };\n    if (transformed._id) {\n      if (typeof transformed._id === 'string') {\n        transformed._id = this.toObjectId(transformed._id as unknown as ID);\n      } else if (typeof transformed._id === 'object') {\n        const idFilter = transformed._id as any;\n        if (idFilter.$eq) {\n          idFilter.$eq = this.toObjectId(idFilter.$eq);\n        }\n        if (idFilter.$in) {\n          idFilter.$in = idFilter.$in.map((id: string) => this.toObjectId(id as unknown as ID));\n        }\n      }\n    }\n    return transformed;\n  }\n\n  /**\n   * Transform repository sort to MongoDB sort\n   */\n  protected transformSort(sort: Sort<T> = {}): any {\n    const transformed: Record<string, 1 | -1> = {};\n    for (const [key, value] of Object.entries(sort)) {\n      transformed[key] = value === 'desc' || value === -1 ? -1 : 1;\n    }\n    return transformed;\n  }\n\n  protected",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 22,
        "end": 65,
        "startLoc": {
          "line": 22,
          "column": 12,
          "position": 201
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 608
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 16,
        "end": 59,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 146
        },
        "endLoc": {
          "line": 59,
          "column": 6,
          "position": 553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "as T | null;\n    });\n  }\n\n  async find(filter?: Filter<T>, sort?: Sort<T>, pagination?: Pagination): Promise<T[]> {\n    return this.wrapError(async () => {\n      let query = this.collection.find(this.transformFilter(filter), { session: this.session });\n\n      if (sort) {\n        query = query.sort(this.transformSort(sort));\n      }\n\n      if (pagination) {\n        if",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 105,
        "end": 118,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1013
        },
        "endLoc": {
          "line": 118,
          "column": 3,
          "position": 1165
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 73,
        "end": 86,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 750
        },
        "endLoc": {
          "line": 86,
          "column": 6,
          "position": 902
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "as T[];\n    });\n  }\n\n  async count(filter?: Filter<T>): Promise<number> {\n    return this.wrapError(async () => {\n      return this.collection.countDocuments(this.transformFilter(filter), {\n        session: this.session,\n      });\n    });\n  }\n\n  async create(data: Partial<T>): Promise<T> {\n    return this.wrapError(async () => {\n      const result = await this.collection.insertOne(data as any, { session: this.session });\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 127,
        "end": 142,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1255
        },
        "endLoc": {
          "line": 142,
          "column": 6,
          "position": 1426
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 90,
        "end": 105,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 948
        },
        "endLoc": {
          "line": 105,
          "column": 7,
          "position": 1119
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\n    });\n  }\n\n  async createMany(data: Partial<T>[]): Promise<T[]> {\n    return this.wrapError(async () => {\n      const result = await this.collection.insertMany(data as any[], { session: this.session });\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 144,
        "end": 151,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1475
        },
        "endLoc": {
          "line": 151,
          "column": 6,
          "position": 1566
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 105,
        "end": 112,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1139
        },
        "endLoc": {
          "line": 112,
          "column": 7,
          "position": 1230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    });\n  }\n\n  async update(id: ID, data: Partial<T>): Promise<T> {\n    return this.wrapError(async () => {\n      const result = await this.collection.findOneAndUpdate(\n        { _id: this.toObjectId(id) } as any,\n        { $set: data },\n        {\n          session: this.session,\n          returnDocument: 'after',\n        }\n      );\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 156,
        "end": 171,
        "startLoc": {
          "line": 156,
          "column": 9,
          "position": 1636
        },
        "endLoc": {
          "line": 171,
          "column": 6,
          "position": 1767
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 118,
        "end": 132,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1284
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1414
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ";\n    });\n  }\n\n  async updateMany(filter: Filter<T>, data: Partial<T>): Promise<number> {\n    return this.wrapError(async () => {\n      const result = await this.collection.updateMany(\n        this.transformFilter(filter),\n        { $set: data },\n        { session: this.session }\n      );\n      return result.modifiedCount;\n    });\n  }\n\n  async delete(id: ID): Promise<boolean> {\n    return this.wrapError(async () => {\n      const result = await this.collection.deleteOne({ _id: this.toObjectId(id) } as any, {\n        session: this.session,\n      });\n\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 173,
        "end": 194,
        "startLoc": {
          "line": 173,
          "column": 7,
          "position": 1810
        },
        "endLoc": {
          "line": 194,
          "column": 3,
          "position": 2025
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 132,
        "end": 152,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1433
        },
        "endLoc": {
          "line": 152,
          "column": 7,
          "position": 1647
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "return result.deletedCount > 0;\n    });\n  }\n\n  async deleteMany(filter: Filter<T>): Promise<number> {\n    return this.wrapError(async () => {\n      const result = await this.collection.deleteMany(this.transformFilter(filter), {\n        session: this.session,\n      });\n      return result.deletedCount;\n    });\n  }\n\n  protected async beginTransactionImpl(): Promise<void> {\n    this.session = await this.collection.db.client.startSession();\n    await this.session.startTransaction();\n  }\n\n  protected async commitTransactionImpl(): Promise<void> {\n    await this.session?.commitTransaction();\n    await this.session?.endSession();\n    this.session = undefined;\n  }\n\n  protected async rollbackTransactionImpl(): Promise<void> {\n    await this.session?.abortTransaction();\n    await this.session?.endSession();\n    this.session = undefined;\n  }\n\n  // Implement the abstract methods required by CachedRepository",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 198,
        "end": 228,
        "startLoc": {
          "line": 198,
          "column": 7,
          "position": 2055
        },
        "endLoc": {
          "line": 228,
          "column": 63,
          "position": 2339
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 152,
        "end": 181,
        "startLoc": {
          "line": 152,
          "column": 7,
          "position": 1647
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1929
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "{\n    const result = await this.collection.insertMany(data as any[], { session: this.session });\n    return data.map((item, index) => ({\n      ...item,\n      _id: result.insertedIds[index],\n    }))",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 241,
        "end": 246,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 2546
        },
        "endLoc": {
          "line": 246,
          "column": 2,
          "position": 2624
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 110,
        "end": 117,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 1190
        },
        "endLoc": {
          "line": 117,
          "column": 3,
          "position": 1272
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "{\n    const result = await this.collection.findOneAndUpdate(\n      { _id: this.toObjectId(id) } as any,\n      { $set: data },\n      {\n        session: this.session,\n        returnDocument: 'after',\n      }\n    );\n    return this.throwIfNotFound(result as T | null, id);\n  }\n\n  protected",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/cached-mongodb-repository.ts",
        "start": 249,
        "end": 261,
        "startLoc": {
          "line": 249,
          "column": 2,
          "position": 2669
        },
        "endLoc": {
          "line": 261,
          "column": 10,
          "position": 2772
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/repository/mongodb/mongodb-repository.ts",
        "start": 123,
        "end": 133,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1337
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 1437
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ": {\n    rules: [\n      {\n        field: 'email',\n        type: 'email',\n        required: true,\n        normalizeEmail: true,\n        toLowerCase: true,\n        sanitize: true,\n      },\n      {\n        field: 'password',\n        type: 'string',\n        required: true,\n        minLength: 8,\n        maxLength: 128,\n        pattern",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/validation.middleware.ts",
        "start": 767,
        "end": 783,
        "startLoc": {
          "line": 767,
          "column": 13,
          "position": 5764
        },
        "endLoc": {
          "line": 783,
          "column": 8,
          "position": 5862
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/validation.middleware.ts",
        "start": 747,
        "end": 763,
        "startLoc": {
          "line": 747,
          "column": 6,
          "position": 5652
        },
        "endLoc": {
          "line": 763,
          "column": 2,
          "position": 5750
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n\n    stream.on('error', reject);\n    stream.on('data', (chunk) => hash.update(chunk));\n    stream.on('end', () => resolve(hash.digest('hex')));\n  });\n}\n\n/**\n * Sanitize filename\n */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts",
        "start": 514,
        "end": 524,
        "startLoc": {
          "line": 514,
          "column": 9,
          "position": 4464
        },
        "endLoc": {
          "line": 524,
          "column": 4,
          "position": 4536
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/platform/src/upload/middleware/storage/LocalStorageEngine.ts",
        "start": 255,
        "end": 265,
        "startLoc": {
          "line": 255,
          "column": 5,
          "position": 2010
        },
        "endLoc": {
          "line": 265,
          "column": 6,
          "position": 2084
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ">) {\n  return (req: Request, res: Response, next: NextFunction): void => {\n    const files = req.file ? [req.file] : (req.files as Express.Multer.File[]) || [];\n\n    for (const file of files) {\n      const limit",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts",
        "start": 650,
        "end": 655,
        "startLoc": {
          "line": 650,
          "column": 7,
          "position": 5452
        },
        "endLoc": {
          "line": 655,
          "column": 6,
          "position": 5548
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts",
        "start": 613,
        "end": 618,
        "startLoc": {
          "line": 613,
          "column": 2,
          "position": 5146
        },
        "endLoc": {
          "line": 618,
          "column": 11,
          "position": 5242
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "): Promise<void> {\n  const globalWithAudit = global as {\n    auditLogger?: { log: (event: unknown) => Promise<void> };\n  };\n\n  if (!globalWithAudit.auditLogger) {\n    return;\n  }\n\n  await globalWithAudit.auditLogger.log({\n    type: 'FILE_DOWNLOADED'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts",
        "start": 751,
        "end": 761,
        "startLoc": {
          "line": 751,
          "column": 7,
          "position": 6206
        },
        "endLoc": {
          "line": 761,
          "column": 18,
          "position": 6296
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/file-upload.middleware.ts",
        "start": 317,
        "end": 327,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 2749
        },
        "endLoc": {
          "line": 327,
          "column": 16,
          "position": 2839
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": async (req: Request, res: Response) => {\n      if (!req.user) {\n        return res.status(401).json({\n          success: false,\n          error: {\n            code: ERROR_CODES.UNAUTHORIZED,\n            message: 'Not authenticated',\n          },\n        });\n      }\n\n      const {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware.ts",
        "start": 297,
        "end": 308,
        "startLoc": {
          "line": 297,
          "column": 14,
          "position": 2367
        },
        "endLoc": {
          "line": 308,
          "column": 2,
          "position": 2459
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware.ts",
        "start": 268,
        "end": 279,
        "startLoc": {
          "line": 268,
          "column": 12,
          "position": 2126
        },
        "endLoc": {
          "line": 279,
          "column": 9,
          "position": 2218
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ": string[]) {\n  return (req: Request, res: Response, next: NextFunction): void => {\n    if (!req.user) {\n      res.status(401).json({\n        success: false,\n        error: {\n          code: ERROR_CODES.UNAUTHORIZED,\n          message: 'Authentication required',\n        },\n      });\n      return;\n    }\n\n    if (\n      !(\n        req.user.permissions",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware.ts",
        "start": 366,
        "end": 381,
        "startLoc": {
          "line": 366,
          "column": 20,
          "position": 2877
        },
        "endLoc": {
          "line": 381,
          "column": 12,
          "position": 2999
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware.ts",
        "start": 335,
        "end": 348,
        "startLoc": {
          "line": 335,
          "column": 14,
          "position": 2637
        },
        "endLoc": {
          "line": 348,
          "column": 6,
          "position": 2755
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "?: string;\n  [key: string]: unknown;\n}\n\ninterface UserSession {\n  sessionId: string;\n  userId: string;\n  createdAt: Date;\n  expiresAt: Date;\n  lastUsedAt?: Date;\n  refreshCount?: number;\n  ipAddress?: string;\n  userAgent?: string;\n}\n\nexport interface JWTSessionManager {\n  verifyToken(token: string): Promise<JWTPayload>;\n  createToken(payload: JWTPayload): Promise<string>;\n  refreshToken(token: string): Promise<string>;\n  revokeToken(token: string): Promise<void>;\n\n  // Additional methods used by auth.middleware.ts - reusing the same interface",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/jwt-session/index.ts",
        "start": 5,
        "end": 26,
        "startLoc": {
          "line": 5,
          "column": 4,
          "position": 19
        },
        "endLoc": {
          "line": 26,
          "column": 78,
          "position": 183
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware/auth-utilities.ts",
        "start": 13,
        "end": 34,
        "startLoc": {
          "line": 13,
          "column": 15,
          "position": 100
        },
        "endLoc": {
          "line": 34,
          "column": 49,
          "position": 264
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "extractTokenFromHeader(authorization: string): string | null;\n  refreshAccessToken(\n    refreshToken: string,\n    ipAddress?: string,\n    userAgent?: string\n  ): Promise<{ accessToken: string; refreshToken: string }>;\n  revokeAllUserTokens(userId: string): Promise<void>;\n  revokeSession(sessionId: string): Promise<void>;\n  getUserSessions(userId: string): UserSession[];\n}\n\nexport interface SessionConfig",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/jwt-session/index.ts",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 186
        },
        "endLoc": {
          "line": 38,
          "column": 14,
          "position": 305
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/security/middleware/auth.middleware/auth-utilities.ts",
        "start": 35,
        "end": 46,
        "startLoc": {
          "line": 35,
          "column": 3,
          "position": 267
        },
        "endLoc": {
          "line": 46,
          "column": 22,
          "position": 386
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "= await this.client.chat.completions.create({\n        model: request.model,\n        messages: messages.map((msg) => {\n          const baseMsg: OpenAIMessage = {\n            role: msg.role,\n            content: msg.content,\n          };\n          // Only add optional fields if they exist\n          if (msg.toolCallId) {\n            baseMsg.tool_call_id = msg.toolCallId;\n          }\n          if (msg.name) {\n            baseMsg.name = msg.name;\n          }\n          return baseMsg as ChatCompletionMessageParam;\n        }),\n        temperature: request.temperature,\n        max_tokens: request.maxTokens,\n        stop: request.stop,\n        tools: request.tools ? this.formatTools(request.tools) : undefined,\n        tool_choice: request.toolChoice,\n        user: request.user,\n        stream",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/providers/openai-provider/openai-provider.ts",
        "start": 151,
        "end": 173,
        "startLoc": {
          "line": 151,
          "column": 2,
          "position": 1146
        },
        "endLoc": {
          "line": 173,
          "column": 7,
          "position": 1361
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/ai/src/providers/openai-provider/openai-provider.ts",
        "start": 83,
        "end": 105,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 548
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 763
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ".json({ success: true, data: result });\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Unknown error';\n      res.status(500).json({ error: message });\n    }\n  }\n\n  async handleUpdate",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/base/optimized/unified-service-base.ts",
        "start": 86,
        "end": 93,
        "startLoc": {
          "line": 86,
          "column": 4,
          "position": 875
        },
        "endLoc": {
          "line": 93,
          "column": 13,
          "position": 961
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/base/optimized/unified-service-base.ts",
        "start": 72,
        "end": 79,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 699
        },
        "endLoc": {
          "line": 79,
          "column": 14,
          "position": 785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      if (!result) {\n        res.status(404).json({ error: 'Not found' });\n        return;\n      }\n      res.json({ success: true, data: result });\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'Unknown error';\n      res.status(500).json({ error: message });\n    }\n  }\n\n  async handleDelete",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/base/optimized/unified-service-base.ts",
        "start": 96,
        "end": 108,
        "startLoc": {
          "line": 96,
          "column": 5,
          "position": 1032
        },
        "endLoc": {
          "line": 108,
          "column": 13,
          "position": 1161
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/base/optimized/unified-service-base.ts",
        "start": 81,
        "end": 79,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 832
        },
        "endLoc": {
          "line": 79,
          "column": 14,
          "position": 785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "import { type Request, type Response, Router } from 'express';\nimport { rateLimit } from 'express-rate-limit';\nimport { body, param } from 'express-validator';\nimport { authRequired } from '../middleware/auth';\nimport { validateRequest } from '../middleware/validation';\n\nconst router = Router();\n\n// Rate limiting for organization operations",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/organizations.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 45,
          "position": 91
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/webhooks.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 40,
          "position": 91
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "import { type Request, type Response, Router } from 'express';\nimport { rateLimit } from 'express-rate-limit';\nimport { param, query } from 'express-validator';\nimport { authRequired } from '../middleware/auth';\nimport { validateRequest } from '../middleware/validation';\n\nconst router = Router();\n\n// Rate limiting for execution operations",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/executions.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 42,
          "position": 91
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/nodes.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 37,
          "position": 91
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ").optional().isString(),\n    query('limit').optional().isInt({ min: 1, max: 100 }),\n    query('offset').optional().isInt({ min: 0 }),\n  ],\n  validateRequest,\n  async (_req: Request, res: Response) => {\n    res.json({ message: 'Credential routes not implemented yet'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/credentials.ts",
        "start": 39,
        "end": 45,
        "startLoc": {
          "line": 39,
          "column": 7,
          "position": 177
        },
        "endLoc": {
          "line": 45,
          "column": 40,
          "position": 278
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/routes/executions.ts",
        "start": 40,
        "end": 46,
        "startLoc": {
          "line": 40,
          "column": 9,
          "position": 185
        },
        "endLoc": {
          "line": 46,
          "column": 39,
          "position": 286
        }
      }
    },
    {
      "format": "javascript",
      "lines": 76,
      "fragment": "}\n          />\n        </SectionLayout>\n\n        {/* Additional Sections */}\n        {config.sections.map((section) => PageGenerator.renderSection(section))}\n      </BasePage>\n    );\n  }\n\n  /**\n   * Generate a list page\n   */\n  static generateListPage(config: ListPageConfig): React.ReactElement {\n    return (\n      <BasePage\n        title={config.title}\n        subtitle={config.subtitle}\n        actions={config.actions}\n        loading={config.loading}\n        error={config.error}\n      >\n        <PageSection>\n          {config.list.items.length > 0 ? (\n            <div className=\"space-y-4\">\n              {config.list.items.map((item, index) => config.list.renderItem(item, index))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12 text-gray-500\">\n              {config.list.emptyText || 'No items found'}\n            </div>\n          )}\n        </PageSection>\n\n        {/* Additional Sections */}\n        {config.sections.map((section) => PageGenerator.renderSection(section))}\n      </BasePage>\n    );\n  }\n\n  /**\n   * Render a page section based on its configuration\n   */\n  private static renderSection(section: PageSectionConfig): React.ReactElement {\n    const sectionProps = {\n      key: section.id,\n      title: section.title,\n      subtitle: section.subtitle,\n      actions: section.actions,\n      loading: section.loading,\n      className: section.className,\n    };\n\n    switch (section.type) {\n      case 'stats':\n        return (\n          <PageSection {...sectionProps}>\n            <ResponsiveGrid columns={{ xs: 1, sm: 2, lg: 4 }} gap=\"1.5rem\">\n              {section.data?.map((stat: Statistic, index: number) => (\n                <StatsCard\n                  key={index}\n                  title={stat.title}\n                  value={stat.value}\n                  icon={stat.icon}\n                  trend={stat.trend}\n                />\n              ))}\n            </ResponsiveGrid>\n          </PageSection>\n        );\n\n      case 'form':\n        return (\n          <PageSection {...sectionProps}>\n            <UniversalForm\n              properties={section",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/PageGenerator.tsx",
        "start": 158,
        "end": 233,
        "startLoc": {
          "line": 158,
          "column": 11,
          "position": 1118
        },
        "endLoc": {
          "line": 233,
          "column": 8,
          "position": 1674
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/generators/PageGenerator.tsx",
        "start": 100,
        "end": 146,
        "startLoc": {
          "line": 100,
          "column": 6,
          "position": 704
        },
        "endLoc": {
          "line": 146,
          "column": 7,
          "position": 1018
        }
      }
    },
    {
      "format": "javascript",
      "lines": 32,
      "fragment": "}\n      className={cn(\n        'w-full',\n        styling?.size === 'sm' && 'h-8',\n        styling?.size === 'lg' && 'h-12',\n        styling?.customClasses\n      )}\n      onChange={(e) => onChange?.(e.target.value)}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n};\n\nexport const NumberRenderer: React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <InputNumber\n      {...props}\n      value={value}\n      status={error ? 'error' : undefined}\n      className={cn(\n        'w-full',\n        styling?.size === 'sm' && 'h-8',\n        styling?.size === 'lg' && 'h-12',\n        styling?.customClasses\n      )}\n      onChange={(val",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 98,
        "end": 129,
        "startLoc": {
          "line": 98,
          "column": 11,
          "position": 777
        },
        "endLoc": {
          "line": 129,
          "column": 4,
          "position": 1035
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 73,
        "end": 105,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 558
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 822
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": ")}\n      onChange={(e) => onChange?.(e.target.value)}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n};\n\nexport const SelectRenderer: React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, options, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <Select\n      {...props}\n      value={value}\n      status={error ? 'error' : undefined}\n      className={cn(\n        'w-full',\n        styling?.size === 'sm' && 'h-8',\n        styling?.size === 'lg' && 'h-12',\n        styling?.customClasses\n      )}\n      onChange={onChange",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 148,
        "end": 173,
        "startLoc": {
          "line": 148,
          "column": 14,
          "position": 1245
        },
        "endLoc": {
          "line": 173,
          "column": 9,
          "position": 1467
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 79,
        "end": 105,
        "startLoc": {
          "line": 79,
          "column": 7,
          "position": 596
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 821
        }
      }
    },
    {
      "format": "javascript",
      "lines": 41,
      "fragment": "}\n      />\n      <span>{config.label}</span>\n    </div>\n  );\n};\n\nexport const DateRenderer: React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <DatePicker\n      {...props}\n      value={value}\n      status={error ? 'error' : undefined}\n      className={cn(\n        'w-full',\n        styling?.size === 'sm' && 'h-8',\n        styling?.size === 'lg' && 'h-12',\n        styling?.customClasses\n      )}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    />\n  );\n};\n\nexport const ColorRenderer: React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <ColorPicker\n      {...props}\n      value={value",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 246,
        "end": 286,
        "startLoc": {
          "line": 246,
          "column": 9,
          "position": 2223
        },
        "endLoc": {
          "line": 286,
          "column": 6,
          "position": 2563
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 82,
        "end": 178,
        "startLoc": {
          "line": 82,
          "column": 7,
          "position": 629
        },
        "endLoc": {
          "line": 178,
          "column": 7,
          "position": 1509
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <Input.Password",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 62,
        "end": 69,
        "startLoc": {
          "line": 62,
          "column": 17,
          "position": 406
        },
        "endLoc": {
          "line": 69,
          "column": 15,
          "position": 508
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <Input\n      {...props}\n      type",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 87,
        "end": 96,
        "startLoc": {
          "line": 87,
          "column": 14,
          "position": 646
        },
        "endLoc": {
          "line": 96,
          "column": 5,
          "position": 755
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 46,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 46,
          "column": 6,
          "position": 290
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <InputNumber",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 112,
        "end": 119,
        "startLoc": {
          "line": 112,
          "column": 15,
          "position": 865
        },
        "endLoc": {
          "line": 119,
          "column": 12,
          "position": 967
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <TextArea",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 136,
        "end": 143,
        "startLoc": {
          "line": 136,
          "column": 17,
          "position": 1074
        },
        "endLoc": {
          "line": 143,
          "column": 9,
          "position": 1176
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, options, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <Select\n      {...props}\n      mode",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 188,
        "end": 197,
        "startLoc": {
          "line": 188,
          "column": 20,
          "position": 1620
        },
        "endLoc": {
          "line": 197,
          "column": 5,
          "position": 1732
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 156,
        "end": 165,
        "startLoc": {
          "line": 156,
          "column": 15,
          "position": 1295
        },
        "endLoc": {
          "line": 165,
          "column": 6,
          "position": 1407
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "\n      value={value}\n      status={error ? 'error' : undefined}\n      className={cn('w-full', styling?.customClasses)}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n    >\n      {options?.map((option: any) => (\n        <Option key={option.value} value={option.value} disabled={option.disabled}>\n          {option.icon && <span className=\"mr-2\">{option.icon}</span>}\n          {option.label}\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 197,
        "end": 209,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 1737
        },
        "endLoc": {
          "line": 209,
          "column": 3,
          "position": 1872
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 164,
        "end": 181,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1406
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1566
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <div",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 233,
        "end": 240,
        "startLoc": {
          "line": 233,
          "column": 15,
          "position": 2067
        },
        "endLoc": {
          "line": 240,
          "column": 4,
          "position": 2163
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 215,
        "end": 222,
        "startLoc": {
          "line": 215,
          "column": 17,
          "position": 1899
        },
        "endLoc": {
          "line": 222,
          "column": 9,
          "position": 1995
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <DatePicker",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 253,
        "end": 260,
        "startLoc": {
          "line": 253,
          "column": 13,
          "position": 2258
        },
        "endLoc": {
          "line": 260,
          "column": 11,
          "position": 2360
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 44,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 44,
          "column": 6,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <ColorPicker",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 277,
        "end": 284,
        "startLoc": {
          "line": 277,
          "column": 14,
          "position": 2457
        },
        "endLoc": {
          "line": 284,
          "column": 12,
          "position": 2553
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 215,
        "end": 222,
        "startLoc": {
          "line": 215,
          "column": 17,
          "position": 1899
        },
        "endLoc": {
          "line": 222,
          "column": 9,
          "position": 1995
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  return (\n    <Upload",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 294,
        "end": 301,
        "startLoc": {
          "line": 294,
          "column": 13,
          "position": 2646
        },
        "endLoc": {
          "line": 301,
          "column": 7,
          "position": 2742
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 215,
        "end": 222,
        "startLoc": {
          "line": 215,
          "column": 17,
          "position": 1899
        },
        "endLoc": {
          "line": 222,
          "column": 9,
          "position": 1995
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ": React.FC<PropertyRendererProps> = ({ config, context }) => {\n  const { value, error, onChange, onFocus, onBlur, styling, ...props } = useMemo(\n    () => context.formData[config.id] ?? config.defaultValue,\n    [config, context]\n  );\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 315,
        "end": 321,
        "startLoc": {
          "line": 315,
          "column": 13,
          "position": 2832
        },
        "endLoc": {
          "line": 321,
          "column": 6,
          "position": 2928
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/design-system/components/PropertyRenderer.tsx",
        "start": 37,
        "end": 43,
        "startLoc": {
          "line": 37,
          "column": 13,
          "position": 181
        },
        "endLoc": {
          "line": 43,
          "column": 7,
          "position": 277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n      variables: metadata?.variables || {},\n      settings: metadata?.settings || {},\n      version: metadata?.version || 1,\n      createdAt: metadata?.createdAt || new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/workflowExporter.ts",
        "start": 67,
        "end": 74,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 520
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 608
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/utils/workflowExporter.ts",
        "start": 43,
        "end": 51,
        "startLoc": {
          "line": 43,
          "column": 6,
          "position": 292
        },
        "endLoc": {
          "line": 51,
          "column": 7,
          "position": 381
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ") => {\n      const { activeWorkflowId } = get();\n      if (!activeWorkflowId) {\n        return;\n      }\n\n      set((state) => ({\n        workflows: {\n          ...state.workflows,\n          [activeWorkflowId]: {\n            ...state.workflows[activeWorkflowId],\n            nodes: state.workflows[activeWorkflowId].nodes.filter",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 321,
        "end": 332,
        "startLoc": {
          "line": 321,
          "column": 7,
          "position": 3259
        },
        "endLoc": {
          "line": 332,
          "column": 7,
          "position": 3355
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 296,
        "end": 307,
        "startLoc": {
          "line": 296,
          "column": 2,
          "position": 3034
        },
        "endLoc": {
          "line": 307,
          "column": 4,
          "position": 3130
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ">) => {\n      const { activeWorkflowId } = get();\n      if (!activeWorkflowId) {\n        return;\n      }\n\n      set((state) => ({\n        workflows: {\n          ...state.workflows,\n          [activeWorkflowId]: {\n            ...state.workflows[activeWorkflowId],\n            edges",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 381,
        "end": 392,
        "startLoc": {
          "line": 381,
          "column": 13,
          "position": 3844
        },
        "endLoc": {
          "line": 392,
          "column": 6,
          "position": 3929
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 296,
        "end": 307,
        "startLoc": {
          "line": 296,
          "column": 13,
          "position": 3033
        },
        "endLoc": {
          "line": 307,
          "column": 6,
          "position": 3118
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": (id: string) => {\n      const { activeWorkflowId } = get();\n      if (!activeWorkflowId) {\n        return;\n      }\n\n      set((state) => ({\n        workflows: {\n          ...state.workflows,\n          [activeWorkflowId]: {\n            ...state.workflows[activeWorkflowId],\n            edges: state.workflows[activeWorkflowId].edges.filter",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 400,
        "end": 411,
        "startLoc": {
          "line": 400,
          "column": 11,
          "position": 4000
        },
        "endLoc": {
          "line": 411,
          "column": 7,
          "position": 4103
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/enhancedWorkflowStore.ts",
        "start": 321,
        "end": 392,
        "startLoc": {
          "line": 321,
          "column": 11,
          "position": 3252
        },
        "endLoc": {
          "line": 392,
          "column": 4,
          "position": 3941
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "await credentialApiService.deleteCredential(id);\n          const { credentials } = get();\n          set({\n            credentials: credentials.filter((cred) => cred.id !== id),\n            isLoading: false,\n          });\n        } catch (error) {\n          const message =\n            error instanceof Error ? error.message : 'Failed to revoke Gmail credential'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/credentialStore.ts",
        "start": 137,
        "end": 145,
        "startLoc": {
          "line": 137,
          "column": 11,
          "position": 1522
        },
        "endLoc": {
          "line": 145,
          "column": 36,
          "position": 1622
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/credentialStore.ts",
        "start": 108,
        "end": 115,
        "startLoc": {
          "line": 108,
          "column": 11,
          "position": 1184
        },
        "endLoc": {
          "line": 115,
          "column": 30,
          "position": 1283
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n          set({\n            user: authResponse.user,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n        } catch (error: any) {\n          set({\n            user: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: error.message || 'Registration failed'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/authStore.ts",
        "start": 62,
        "end": 74,
        "startLoc": {
          "line": 62,
          "column": 9,
          "position": 569
        },
        "endLoc": {
          "line": 74,
          "column": 22,
          "position": 662
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/stores/authStore.ts",
        "start": 41,
        "end": 53,
        "startLoc": {
          "line": 41,
          "column": 12,
          "position": 398
        },
        "endLoc": {
          "line": 53,
          "column": 15,
          "position": 491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": z\n      .object({\n        totalExecutions: z.number().int().min(0),\n        successfulExecutions: z.number().int().min(0),\n        failedExecutions: z.number().int().min(0),\n        avgDuration: z.number().min(0).optional(),\n        successRate: z.number().min(0).max(100).optional(),\n      })\n      .optional(), // Backend returns \"statistics\" instead of \"executionStats\"",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/WorkflowSchemas.ts",
        "start": 101,
        "end": 109,
        "startLoc": {
          "line": 101,
          "column": 11,
          "position": 971
        },
        "endLoc": {
          "line": 109,
          "column": 60,
          "position": 1097
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/WorkflowSchemas.ts",
        "start": 92,
        "end": 101,
        "startLoc": {
          "line": 92,
          "column": 15,
          "position": 843
        },
        "endLoc": {
          "line": 101,
          "column": 11,
          "position": 970
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "export const PaginationSchema = z.object({\n  page: z.number().min(1).default(1),\n  limit: z.number().min(1).max(100).default(10),\n  total: z.number().min(0),\n  pages: z.number().min(0),\n});\n\n// Pagination query parameters (for API requests)",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/schemas/BaseSchemas.ts",
        "start": 42,
        "end": 49,
        "startLoc": {
          "line": 42,
          "column": 1,
          "position": 363
        },
        "endLoc": {
          "line": 49,
          "column": 50,
          "position": 461
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/api/schemas/index.ts",
        "start": 86,
        "end": 93,
        "startLoc": {
          "line": 86,
          "column": 1,
          "position": 945
        },
        "endLoc": {
          "line": 93,
          "column": 34,
          "position": 1043
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "{\n        displayName: enhancedNode.displayName || enhancedNode.name,\n        name: enhancedNode.name,\n        icon: enhancedNode.icon || 'fa:envelope',\n        group: [enhancedNode.type === 'trigger' ? 'trigger' : 'transform'],\n        version: 1,\n        description: enhancedNode.description || '',\n        defaults: {\n          name: enhancedNode.displayName || enhancedNode.name,\n          color: (enhancedNode as any).color || '#DD4B39',\n        },\n        inputs: (enhancedNode.inputs || [{ type: 'main' }]).map((input: any) =>\n          typeof input === 'string' ? input : input.type || 'main'\n        ),\n        outputs: (enhancedNode.outputs || [{ type: 'main' }]).map((output: any) =>\n          typeof output === 'string' ? output : output.type || 'main'\n        ),\n        categories: enhancedNode.codex?.categories || [],\n        properties: [], // Enhanced nodes use different property system\n        // Preserve custom UI components from enhanced nodes\n        customBodyComponent: (enhancedNode as any).customBodyComponent,\n        // customPropertiesPanel: (enhancedNode as any).customPropertiesPanel,\n      })",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/registry.ts",
        "start": 233,
        "end": 255,
        "startLoc": {
          "line": 233,
          "column": 2,
          "position": 1694
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 1992
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/registry.ts",
        "start": 176,
        "end": 198,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1206
        },
        "endLoc": {
          "line": 198,
          "column": 2,
          "position": 1504
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "[\n          { name: 'GET', value: 'GET' },\n          { name: 'POST', value: 'POST' },\n          { name: 'PUT', value: 'PUT' },\n          { name: 'DELETE', value: 'DELETE' },\n          { name: 'PATCH', value: 'PATCH' },\n        ],\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/BaseNodeDefinition.ts",
        "start": 287,
        "end": 294,
        "startLoc": {
          "line": 287,
          "column": 9,
          "position": 1915
        },
        "endLoc": {
          "line": 294,
          "column": 2,
          "position": 2007
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/nodes/definitions/Trigger.node.ts",
        "start": 80,
        "end": 87,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 501
        },
        "endLoc": {
          "line": 87,
          "column": 15,
          "position": 593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        LoginApiResponseSchema as any\n      );\n\n      // Store tokens in localStorage\n      if (response.token) {\n        localStorage.setItem(configService.get('auth').tokenKey, response.token);\n      }\n      if (response.refreshToken) {\n        localStorage.setItem(configService.get('auth').refreshTokenKey, response.refreshToken);\n      }\n\n      return response as",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/AuthApiService.ts",
        "start": 109,
        "end": 121,
        "startLoc": {
          "line": 109,
          "column": 9,
          "position": 681
        },
        "endLoc": {
          "line": 121,
          "column": 3,
          "position": 774
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/AuthApiService.ts",
        "start": 77,
        "end": 89,
        "startLoc": {
          "line": 77,
          "column": 12,
          "position": 453
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 545
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      });\n\n      // Backend returns: { success, data: { user: UserProfile } }\n      // Extract user from nested structure\n      const responseData = response.data as any;\n      const userData = responseData.data?.user || responseData.user;\n\n      if (!userData) {\n        throw new ApiClientError('Invalid profile response structure', 422, 'INVALID_RESPONSE');\n      }\n\n      // Transform and validate the user data\n      return this.transformUserProfile(userData);\n    } catch (error) {\n      throw new ApiClientError('Failed to update profile'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/AuthApiService.ts",
        "start": 276,
        "end": 291,
        "startLoc": {
          "line": 276,
          "column": 8,
          "position": 1853
        },
        "endLoc": {
          "line": 291,
          "column": 27,
          "position": 1968
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/core/api/AuthApiService.ts",
        "start": 248,
        "end": 263,
        "startLoc": {
          "line": 248,
          "column": 16,
          "position": 1654
        },
        "endLoc": {
          "line": 263,
          "column": 31,
          "position": 1769
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ");\n\ninterface SettingsData {\n  profile: {\n    name: string;\n    email: string;\n    timezone: string;\n  };\n  notifications: {\n    emailNotifications: boolean;\n    workflowFailures: boolean;\n    weeklyReports: boolean;\n    maintenanceUpdates: boolean;\n  };\n  security: {\n    twoFactorAuth: boolean;\n    sessionTimeout: number;\n    apiAccess: boolean;\n  };\n  preferences: {\n    theme: 'light' | 'dark' | 'auto';\n    language: string;\n    defaultWorkflowPrivacy: 'private' | 'team' | 'public';\n  };\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.legacy.tsx",
        "start": 5,
        "end": 31,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 54
        },
        "endLoc": {
          "line": 31,
          "column": 6,
          "position": 214
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.tsx",
        "start": 19,
        "end": 45,
        "startLoc": {
          "line": 19,
          "column": 11,
          "position": 122
        },
        "endLoc": {
          "line": 45,
          "column": 7,
          "position": 282
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "const Settings: React.FC = () => {\n  const [settings, setSettings] = useState<SettingsData>({\n    profile: {\n      name: '',\n      email: '',\n      timezone: 'UTC-5',\n    },\n    notifications: {\n      emailNotifications: true,\n      workflowFailures: true,\n      weeklyReports: false,\n      maintenanceUpdates: true,\n    },\n    security: {\n      twoFactorAuth: false,\n      sessionTimeout: 60,\n      apiAccess: true,\n    },\n    preferences: {\n      theme: 'light',\n      language: 'en',\n      defaultWorkflowPrivacy: 'private',\n    },\n  });\n\n  const [activeTab",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.legacy.tsx",
        "start": 31,
        "end": 56,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 214
        },
        "endLoc": {
          "line": 56,
          "column": 10,
          "position": 392
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Settings.tsx",
        "start": 45,
        "end": 70,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 284
        },
        "endLoc": {
          "line": 70,
          "column": 10,
          "position": 462
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ";\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              <",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/SelfHosted.tsx",
        "start": 176,
        "end": 190,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1025
        },
        "endLoc": {
          "line": 190,
          "column": 2,
          "position": 1134
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 48,
        "end": 62,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "};\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              Product",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Roadmap.tsx",
        "start": 258,
        "end": 272,
        "startLoc": {
          "line": 258,
          "column": 3,
          "position": 1830
        },
        "endLoc": {
          "line": 272,
          "column": 8,
          "position": 1940
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/SelfHosted.tsx",
        "start": 176,
        "end": 62,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 1024
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              <span className=\"bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                Privacy",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Privacy.tsx",
        "start": 82,
        "end": 99,
        "startLoc": {
          "line": 82,
          "column": 15,
          "position": 496
        },
        "endLoc": {
          "line": 99,
          "column": 8,
          "position": 624
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 46,
        "end": 191,
        "startLoc": {
          "line": 46,
          "column": 108,
          "position": 247
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 1145
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              Simple",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/PricingPage.tsx",
        "start": 271,
        "end": 287,
        "startLoc": {
          "line": 271,
          "column": 2,
          "position": 1563
        },
        "endLoc": {
          "line": 287,
          "column": 7,
          "position": 1680
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 46,
        "end": 62,
        "startLoc": {
          "line": 46,
          "column": 108,
          "position": 247
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ">\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-purple-600\">\n        <div className=\"container mx-auto px-6 text-center text-white\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Get Started?</h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto opacity-90\">\n            Join",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/PricingPage.tsx",
        "start": 538,
        "end": 550,
        "startLoc": {
          "line": 538,
          "column": 2,
          "position": 3756
        },
        "endLoc": {
          "line": 550,
          "column": 5,
          "position": 3845
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 7,
          "position": 1497
        },
        "endLoc": {
          "line": 190,
          "column": 3,
          "position": 1586
        }
      }
    },
    {
      "format": "javascript",
      "lines": 77,
      "fragment": "} className=\"space-y-6\">\n                {/* Global Error */}\n                {error && (\n                  <div className=\"rounded-lg bg-red-500/20 border border-red-500/30 p-4\">\n                    <div className=\"text-sm text-red-200\">{error}</div>\n                  </div>\n                )}\n\n                {/* Email Field */}\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-200 mb-2\">\n                    Email address\n                  </label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      value={formData.email}\n                      onChange={handleChange}\n                      className={`w-full pl-10 pr-4 py-3 bg-white/10 border backdrop-blur-sm rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                        formErrors.email ? 'border-red-500/50' : 'border-white/20'\n                      }`}\n                      placeholder=\"Enter your email\"\n                    />\n                  </div>\n                  {formErrors.email && (\n                    <p className=\"mt-2 text-sm text-red-300\">{formErrors.email}</p>\n                  )}\n                </div>\n\n                {/* Password Field */}\n                <div>\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block text-sm font-medium text-slate-200 mb-2\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      autoComplete=\"current-password\"\n                      required\n                      value={formData.password}\n                      onChange={handleChange}\n                      className={`w-full pl-10 pr-12 py-3 bg-white/10 border backdrop-blur-sm rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                        formErrors.password ? 'border-red-500/50' : 'border-white/20'\n                      }`}\n                      placeholder=\"Enter your password\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-200 transition-colors\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {formErrors.password && (\n                    <p className=\"mt-2 text-sm text-red-300\">{formErrors.password}</p>\n                  )}\n                </div>\n\n                {/* Remember Me & Forgot Password */}\n                <div className=\"flex items-center justify-between\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"rememberMe\"\n                      checked={formData",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 172,
        "end": 248,
        "startLoc": {
          "line": 172,
          "column": 13,
          "position": 1531
        },
        "endLoc": {
          "line": 248,
          "column": 9,
          "position": 2064
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 302,
        "end": 390,
        "startLoc": {
          "line": 302,
          "column": 2,
          "position": 2503
        },
        "endLoc": {
          "line": 390,
          "column": 10,
          "position": 3100
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "} from 'lucide-react';\nimport type React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuthStore } from '@/core/stores/authStore';\nimport { Footer } from '../components/Landing/Footer';\nimport { Header } from '../components/Landing/Header';\n\nconst Login",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 27
        },
        "endLoc": {
          "line": 9,
          "column": 6,
          "position": 119
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 12,
        "end": 20,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 44
        },
        "endLoc": {
          "line": 20,
          "column": 9,
          "position": 136
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Animation trigger\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  // Redirect if already authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/app/dashboard');\n    }\n  }, [isAuthenticated, navigate]);\n\n  // Clear errors when component mounts\n  useEffect(() => {\n    clearError();\n  }, [clearError]);\n\n  const validateForm = () => {\n    const errors: Record<string, string> = {};\n\n    if (!formData.email",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 20,
        "end": 43,
        "startLoc": {
          "line": 20,
          "column": 16,
          "position": 254
        },
        "endLoc": {
          "line": 43,
          "column": 6,
          "position": 431
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 35,
        "end": 58,
        "startLoc": {
          "line": 35,
          "column": 23,
          "position": 310
        },
        "endLoc": {
          "line": 58,
          "column": 10,
          "position": 487
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n\n    setFormErrors",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 43,
        "end": 53,
        "startLoc": {
          "line": 43,
          "column": 5,
          "position": 425
        },
        "endLoc": {
          "line": 53,
          "column": 14,
          "position": 508
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 66,
        "end": 74,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 541
        },
        "endLoc": {
          "line": 74,
          "column": 5,
          "position": 622
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 50,
        "end": 65,
        "startLoc": {
          "line": 50,
          "column": 23,
          "position": 501
        },
        "endLoc": {
          "line": 65,
          "column": 6,
          "position": 593
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 85,
        "end": 100,
        "startLoc": {
          "line": 85,
          "column": 43,
          "position": 731
        },
        "endLoc": {
          "line": 100,
          "column": 6,
          "position": 823
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ");\n      navigate('/app/dashboard');\n    } catch (_error) {}\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n\n    // Clear field error when user starts typing\n    if (formErrors[name]) {\n      setFormErrors((prev) => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 65,
        "end": 83,
        "startLoc": {
          "line": 65,
          "column": 9,
          "position": 598
        },
        "endLoc": {
          "line": 83,
          "column": 7,
          "position": 770
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 101,
        "end": 119,
        "startLoc": {
          "line": 101,
          "column": 13,
          "position": 846
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 1018
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": ";\n\n  return (\n    <div className=\"min-h-screen relative overflow-hidden\">\n      {/* Header */}\n      <Header />\n      {/* Background Elements - matching landing page */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n      <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n      {/* Animated Background Orbs */}\n      <div className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/20 rounded-full blur-3xl animate-pulse\" />\n      <div className=\"absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/20 rounded-full blur-3xl animate-pulse delay-1000\" />\n\n      {/* Floating Elements */}\n      <div className=\"absolute top-20 right-20 w-20 h-20 bg-blue-500/20 rounded-lg backdrop-blur-sm animate-float hidden lg:block\" />\n      <div className=\"absolute bottom-20 left-20 w-16 h-16 bg-purple-500/20 rounded-full backdrop-blur-sm animate-float delay-1000 hidden lg:block\" />\n\n      <div className=\"relative z-10 min-h-screen flex\">\n        {/* Left Side - Branding */}\n        <div className=\"hidden lg:flex lg:w-1/2 flex-col justify-center px-12\">\n          <div\n            className={`transition-all duration-1000 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}\n          >\n            {/* Logo */}\n            <Link to=\"/\" className=\"inline-flex items-center gap-3 mb-8 group\">\n              <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-blue-600 to-purple-600 flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                <Crown className=\"w-6 h-6 text-white\" />\n              </div>\n              <span className=\"text-3xl font-bold text-white\">Reporunner</span>\n            </Link>\n\n            <h1 className=\"text-5xl font-bold text-white mb-6 leading-tight\">\n              Welcome",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 81,
        "end": 114,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 766
        },
        "endLoc": {
          "line": 114,
          "column": 8,
          "position": 1023
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 153,
        "end": 186,
        "startLoc": {
          "line": 153,
          "column": 2,
          "position": 1350
        },
        "endLoc": {
          "line": 186,
          "column": 5,
          "position": 1607
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "}\n        <div className=\"w-full lg:w-1/2 flex items-center justify-center px-6 py-12\">\n          <div\n            className={`w-full max-w-md transition-all duration-1000 delay-300 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'}`}\n          >\n            {/* Mobile Logo */}\n            <div className=\"lg:hidden text-center mb-8\">\n              <Link to=\"/\" className=\"inline-flex items-center gap-3 group\">\n                <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-blue-600 to-purple-600 flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                  <Crown className=\"w-6 h-6 text-white\" />\n                </div>\n                <span className=\"text-2xl font-bold text-white\">Reporunner</span>\n              </Link>\n            </div>\n\n            {/* Form Card */}\n            <div className=\"bg-white/10 backdrop-blur-md rounded-2xl border border-white/20 p-8 shadow-2xl\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-3xl font-bold text-white mb-2\">Welcome",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 150,
        "end": 168,
        "startLoc": {
          "line": 150,
          "column": 30,
          "position": 1323
        },
        "endLoc": {
          "line": 168,
          "column": 8,
          "position": 1483
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 223,
        "end": 241,
        "startLoc": {
          "line": 223,
          "column": 37,
          "position": 1931
        },
        "endLoc": {
          "line": 241,
          "column": 7,
          "position": 2091
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</p>\n              </div>\n\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {/* Global Error */}\n                {error && (\n                  <div className=\"rounded-lg bg-red-500/20 border border-red-500/30 p-4\">\n                    <div className=\"text-sm text-red-200\">{error}</div>\n                  </div>\n                )}\n\n                {/* Email Field */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 169,
        "end": 180,
        "startLoc": {
          "line": 169,
          "column": 8,
          "position": 1513
        },
        "endLoc": {
          "line": 180,
          "column": 18,
          "position": 1593
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 242,
        "end": 253,
        "startLoc": {
          "line": 242,
          "column": 6,
          "position": 2119
        },
        "endLoc": {
          "line": 253,
          "column": 18,
          "position": 2199
        }
      }
    },
    {
      "format": "tsx",
      "lines": 41,
      "fragment": "{/* Email Field */}\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-200 mb-2\">\n                    Email address\n                  </label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      value={formData.email}\n                      onChange={handleChange}\n                      className={`w-full pl-10 pr-4 py-3 bg-white/10 border backdrop-blur-sm rounded-lg text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                        formErrors.email ? 'border-red-500/50' : 'border-white/20'\n                      }`}\n                      placeholder=\"Enter your email\"\n                    />\n                  </div>\n                  {formErrors.email && (\n                    <p className=\"mt-2 text-sm text-red-300\">{formErrors.email}</p>\n                  )}\n                </div>\n\n                {/* Password Field */}\n                <div>\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block text-sm font-medium text-slate-200 mb-2\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-slate-400\" />\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      autoComplete=\"current-password",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 180,
        "end": 220,
        "startLoc": {
          "line": 180,
          "column": 17,
          "position": 1592
        },
        "endLoc": {
          "line": 220,
          "column": 17,
          "position": 1858
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 312,
        "end": 352,
        "startLoc": {
          "line": 312,
          "column": 17,
          "position": 2563
        },
        "endLoc": {
          "line": 352,
          "column": 13,
          "position": 2829
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-200 transition-colors\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {formErrors",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 227,
        "end": 237,
        "startLoc": {
          "line": 227,
          "column": 20,
          "position": 1901
        },
        "endLoc": {
          "line": 237,
          "column": 11,
          "position": 1981
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 359,
        "end": 370,
        "startLoc": {
          "line": 359,
          "column": 18,
          "position": 2872
        },
        "endLoc": {
          "line": 370,
          "column": 34,
          "position": 2953
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "}\n              <div className=\"mt-8\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <div className=\"w-full border-t border-white/20\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-sm\">\n                    <span className=\"px-4 bg-transparent text-slate-400\">New",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 283,
        "end": 290,
        "startLoc": {
          "line": 283,
          "column": 20,
          "position": 2282
        },
        "endLoc": {
          "line": 290,
          "column": 4,
          "position": 2355
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 495,
        "end": 503,
        "startLoc": {
          "line": 495,
          "column": 17,
          "position": 3781
        },
        "endLoc": {
          "line": 503,
          "column": 8,
          "position": 3856
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": "account\n                    <ArrowRight className=\"w-4 h-4\" />\n                  </Link>\n                </div>\n              </div>\n\n              {/* Back to home link */}\n              <div className=\"mt-6 text-center\">\n                <Link\n                  to=\"/\"\n                  className=\"text-sm text-slate-400 hover:text-slate-200 transition-colors inline-flex items-center gap-1\"\n                >\n                  ← Back to home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Login",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Login.tsx",
        "start": 299,
        "end": 325,
        "startLoc": {
          "line": 299,
          "column": 2,
          "position": 2410
        },
        "endLoc": {
          "line": 325,
          "column": 6,
          "position": 2542
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Register.tsx",
        "start": 513,
        "end": 539,
        "startLoc": {
          "line": 513,
          "column": 2,
          "position": 3919
        },
        "endLoc": {
          "line": 539,
          "column": 9,
          "position": 4051
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              <span className=\"bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                150",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/IntegrationsPage.tsx",
        "start": 258,
        "end": 273,
        "startLoc": {
          "line": 258,
          "column": 2,
          "position": 2034
        },
        "endLoc": {
          "line": 273,
          "column": 4,
          "position": 2154
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 48,
        "end": 191,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 255
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 1145
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const integrations = useMemo(() => {\n    const nodeTypes = nodeRegistry.getAllNodeTypeDescriptions();\n    return nodeTypes.map((nodeType) => ({\n      id: nodeType.name,\n      name: nodeType.displayName,\n      description: nodeType.description,\n      category: nodeType.categories?.[0] || 'Other',\n      icon: nodeType.icon || '⚡',\n      version: 1.0,\n      status: 'available',\n      isConnected: false, // Mock data - in real app would come from backend",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx",
        "start": 7,
        "end": 17,
        "startLoc": {
          "line": 7,
          "column": 3,
          "position": 60
        },
        "endLoc": {
          "line": 17,
          "column": 51,
          "position": 184
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 189
        },
        "endLoc": {
          "line": 35,
          "column": 13,
          "position": 313
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "integrations.filter((integration) => {\n      const matchesCategory =\n        selectedCategory === 'All' || integration.category === selectedCategory;\n      const matchesSearch =\n        integration.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (integration.description || '').toLowerCase().includes(searchTerm.toLowerCase());\n\n      return matchesCategory && matchesSearch;\n    });\n\n    setFilteredIntegrationsState",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx",
        "start": 43,
        "end": 53,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 437
        },
        "endLoc": {
          "line": 53,
          "column": 29,
          "position": 544
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx",
        "start": 53,
        "end": 61,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 463
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 568
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "\">{integration.name}</h3>\n                        <p className=\"text-sm text-gray-500\">{integration.category}</p>\n                      </div>\n                    </div>\n                    {integration.isConnected && (\n                      <span className=\"bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                        Connected\n                      </span>\n                    )}\n                  </div>\n\n                  <p className=\"text-gray-600 text-sm mb-4",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx",
        "start": 164,
        "end": 175,
        "startLoc": {
          "line": 164,
          "column": 28,
          "position": 1453
        },
        "endLoc": {
          "line": 175,
          "column": 27,
          "position": 1539
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx",
        "start": 118,
        "end": 131,
        "startLoc": {
          "line": 118,
          "column": 47,
          "position": 1058
        },
        "endLoc": {
          "line": 131,
          "column": 46,
          "position": 1148
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\">{integration.description}</p>\n\n                  <div className=\"mb-4\">\n                    <p className=\"text-xs text-gray-500 mb-2\">\n                      {integration.nodeTypes.length} node type\n                      {integration.nodeTypes.length !== 1 ? 's' : ''} available\n                    </p>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {integration.nodeTypes.slice(0, 3).map((nodeType: any) => (\n                        <span\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx",
        "start": 175,
        "end": 185,
        "startLoc": {
          "line": 175,
          "column": 27,
          "position": 1540
        },
        "endLoc": {
          "line": 185,
          "column": 27,
          "position": 1656
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx",
        "start": 131,
        "end": 143,
        "startLoc": {
          "line": 131,
          "column": 46,
          "position": 1149
        },
        "endLoc": {
          "line": 143,
          "column": 25,
          "position": 1269
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\n                          {nodeType.name}\n                        </span>\n                      ))}\n                      {integration.nodeTypes.length > 3 && (\n                        <span className=\"text-xs text-gray-500\">\n                          +{integration.nodeTypes.length - 3} more\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-end\">\n                    {integration.isConnected ? (\n                      <button\n                        ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.legacy.tsx",
        "start": 187,
        "end": 202,
        "startLoc": {
          "line": 187,
          "column": 25,
          "position": 1671
        },
        "endLoc": {
          "line": 202,
          "column": 25,
          "position": 1777
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Integrations.tsx",
        "start": 145,
        "end": 160,
        "startLoc": {
          "line": 145,
          "column": 23,
          "position": 1284
        },
        "endLoc": {
          "line": 160,
          "column": 23,
          "position": 1390
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ",\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              Features",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Features.tsx",
        "start": 294,
        "end": 309,
        "startLoc": {
          "line": 294,
          "column": 2,
          "position": 1678
        },
        "endLoc": {
          "line": 309,
          "column": 9,
          "position": 1791
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Roadmap.tsx",
        "start": 257,
        "end": 62,
        "startLoc": {
          "line": 257,
          "column": 2,
          "position": 1827
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "javascript",
      "lines": 42,
      "fragment": "={filterOption.key}\n                onClick={() => setFilter(filterOption.key as any)}\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 ${\n                  filter === filterOption.key\n                    ? 'bg-white/20 text-blue-300 backdrop-blur-sm border border-white/30'\n                    : 'text-slate-300 hover:bg-white/10 hover:text-white'\n                }`}\n              >\n                {filterOption.label}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Executions List */}\n      <div className=\"bg-white/10 backdrop-blur-md rounded-lg border border-white/20 shadow-lg\">\n        <div className=\"p-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400 mx-auto\"></div>\n              <p className=\"mt-2 text-slate-300\">Loading executions...</p>\n            </div>\n          ) : executions.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-slate-300\">No executions found</p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {executions.map((execution) => (\n                <div\n                  key={execution.id}\n                  className=\"bg-white/5 backdrop-blur-sm border border-white/20 rounded-lg p-4 hover:bg-white/10 transition-all duration-300\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3\">\n                        <h3 className=\"font-medium text-white\">\n                          Workflow ID: {execution.workflowId}\n                        </h3>\n                        <span\n                          className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 178,
        "end": 219,
        "startLoc": {
          "line": 178,
          "column": 4,
          "position": 1710
        },
        "endLoc": {
          "line": 219,
          "column": 15,
          "position": 2050
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 165,
        "end": 194,
        "startLoc": {
          "line": 165,
          "column": 4,
          "position": 1531
        },
        "endLoc": {
          "line": 194,
          "column": 26,
          "position": 1730
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const Executions: React.FC = () => {\n  const [executions, setExecutions] = useState<WorkflowExecution[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filter, setFilter] = useState<\n    'all' | 'pending' | 'running' | 'success' | 'error' | 'cancelled'\n  >('all');\n  const [page, setPage] = useState(1);\n  const [",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 8,
        "end": 15,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 73
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 199
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 25,
        "end": 33,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 136
        },
        "endLoc": {
          "line": 33,
          "column": 15,
          "position": 263
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ");\n\n  const loadExecutions = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const result = await workflowApiService.getExecutions({\n        status: filter === 'all' ? undefined : filter,\n        limit: 20,\n        offset: (page - 1) * 20,\n        sortOrder: 'desc',\n      });\n\n      // Transform results to match WorkflowExecution interface\n      const transformedExecutions = result.items.map((execution) => ({\n        ...execution,\n        error: execution.error\n          ? typeof execution.error === 'string'\n            ? {\n                message: execution.error,\n                nodeId: undefined,\n                code: undefined,\n                stack: undefined,",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 15,
        "end": 36,
        "startLoc": {
          "line": 15,
          "column": 5,
          "position": 210
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 399
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 31,
        "end": 48,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 256
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 442
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": "}\n            : execution.error\n          : undefined,\n        logs: Array.isArray(execution.logs)\n          ? execution.logs.map((log: any) =>\n              typeof log === 'string' ? log : log.message || String(log)\n            )\n          : [],\n        results: Array.isArray(execution.results)\n          ? execution.results.map((nodeResult) => ({\n              ...nodeResult,\n              // Map backend status values to correct NodeExecution status type\n              status:\n                (nodeResult.status as any) === 'success'\n                  ? ('completed' as const)\n                  : (nodeResult.status as any) === 'error'\n                    ? ('failed' as const)\n                    : (nodeResult.status as\n                        | 'pending'\n                        | 'running'\n                        | 'completed'\n                        | 'failed'\n                        | 'skipped'),\n            }))\n          : undefined,\n      }));\n\n      if (page === 1) {\n        setExecutions(transformedExecutions as any);\n      } else {\n        setExecutions((prev) => [...prev, ...transformedExecutions] as any);\n      }\n      // Check if there are more results (if we got a full page)",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 37,
        "end": 69,
        "startLoc": {
          "line": 37,
          "column": 15,
          "position": 402
        },
        "endLoc": {
          "line": 69,
          "column": 59,
          "position": 695
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 48,
        "end": 80,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 442
        },
        "endLoc": {
          "line": 80,
          "column": 2,
          "position": 735
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "} catch (_error) {\n      setExecutions([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [filter, page]);\n\n  useEffect(() => {\n    loadExecutions();\n  }, [loadExecutions]);\n\n  const handleStopExecution = async (executionId: string) => {\n    try {\n      await workflowApiService.stopExecution(executionId);\n      // Refresh executions",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 71,
        "end": 85,
        "startLoc": {
          "line": 71,
          "column": 5,
          "position": 713
        },
        "endLoc": {
          "line": 85,
          "column": 22,
          "position": 826
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 80,
        "end": 94,
        "startLoc": {
          "line": 80,
          "column": 5,
          "position": 735
        },
        "endLoc": {
          "line": 94,
          "column": 8,
          "position": 848
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\n    }\n  };\n\n  const formatDuration = (execution: WorkflowExecution) => {\n    if (!(execution.endTime && execution.startTime)) {\n      return 'N/A';\n    }\n    const start = new Date(execution.startTime).getTime();\n    const end = new Date(execution.endTime).getTime();\n    const seconds = Math.floor((end - start) / 1000);\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 106,
        "end": 122,
        "startLoc": {
          "line": 106,
          "column": 60,
          "position": 962
        },
        "endLoc": {
          "line": 122,
          "column": 7,
          "position": 1151
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 97,
        "end": 113,
        "startLoc": {
          "line": 97,
          "column": 2,
          "position": 876
        },
        "endLoc": {
          "line": 113,
          "column": 14,
          "position": 1065
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "[\n              { key: 'all', label: 'All' },\n              { key: 'pending', label: 'Pending' },\n              { key: 'running', label: 'Running' },\n              { key: 'success', label: 'Success' },\n              { key: 'error', label: 'Failed' },\n              { key: 'cancelled', label: 'Cancelled' },\n            ].",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 169,
        "end": 176,
        "startLoc": {
          "line": 169,
          "column": 2,
          "position": 1588
        },
        "endLoc": {
          "line": 176,
          "column": 2,
          "position": 1694
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 146,
        "end": 153,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1335
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 1441
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3\">\n                        <h3 className=\"font-medium text-white\">\n                          Workflow ID: {execution.workflowId}\n                        </h3>\n                        <span\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 211,
        "end": 219,
        "startLoc": {
          "line": 211,
          "column": 17,
          "position": 1978
        },
        "endLoc": {
          "line": 219,
          "column": 27,
          "position": 2044
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 187,
        "end": 193,
        "startLoc": {
          "line": 187,
          "column": 5,
          "position": 1662
        },
        "endLoc": {
          "line": 193,
          "column": 15,
          "position": 1724
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": ">\n                          {execution.status}\n                        </span>\n                      </div>\n                      <div className=\"mt-2 flex items-center space-x-6 text-sm text-slate-300\">\n                        <span>\n                          Started:{' '}\n                          {execution.startTime\n                            ? new Date(execution.startTime).toLocaleString()\n                            : 'N/A'}\n                        </span>\n                        <span>Duration: {formatDuration(execution)}</span>\n                        <span>Triggered by: {execution.triggerType}</span>\n                      </div>\n                      {execution.nodeExecutions && execution.nodeExecutions.length > 0 && (\n                        <div className=\"mt-3\">\n                          <details className=\"group\">\n                            <summary className=\"cursor-pointer text-sm text-blue-300 hover:text-blue-200 transition-colors\">\n                              View Node Results ({execution.nodeExecutions.length} nodes)\n                            </summary>\n                            <div className=\"mt-2 bg-white/10 backdrop-blur-sm rounded p-3 text-sm border border-white/20\">\n                              {execution.nodeExecutions.map((nodeExec, index) => (\n                                <div key={index} className=\"text-slate-300 mb-1\">\n                                  <span className=\"font-medium text-white\">\n                                    {nodeExec.nodeName || nodeExec.nodeId}:\n                                  </span>\n                                  <span\n                                    ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 220,
        "end": 247,
        "startLoc": {
          "line": 220,
          "column": 25,
          "position": 2060
        },
        "endLoc": {
          "line": 247,
          "column": 37,
          "position": 2334
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 204,
        "end": 229,
        "startLoc": {
          "line": 204,
          "column": 13,
          "position": 1785
        },
        "endLoc": {
          "line": 229,
          "column": 25,
          "position": 2057
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ">\n                                    {nodeExec.status}\n                                  </span>\n                                  {nodeExec.duration && (\n                                    <span className=\"ml-2 text-slate-400\">\n                                      ({nodeExec.duration}ms)\n                                    </span>\n                                  )}\n                                </div>\n                              ))}\n                            </div>\n                          </details>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      {(execution.status === 'running' || execution.status === 'pending') && (\n                        <button\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 248,
        "end": 266,
        "startLoc": {
          "line": 248,
          "column": 35,
          "position": 2370
        },
        "endLoc": {
          "line": 266,
          "column": 27,
          "position": 2498
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.tsx",
        "start": 236,
        "end": 252,
        "startLoc": {
          "line": 236,
          "column": 23,
          "position": 2094
        },
        "endLoc": {
          "line": 252,
          "column": 15,
          "position": 2218
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-6xl mx-auto",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Enterprise.tsx",
        "start": 250,
        "end": 260,
        "startLoc": {
          "line": 250,
          "column": 3,
          "position": 1189
        },
        "endLoc": {
          "line": 260,
          "column": 18,
          "position": 1278
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 50,
        "end": 60,
        "startLoc": {
          "line": 50,
          "column": 3,
          "position": 259
        },
        "endLoc": {
          "line": 60,
          "column": 30,
          "position": 348
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "}\n      <Row gutter={[16, 16]} style={{ marginBottom: 24 }}>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Total Workflows\"\n              value={data.quickStats.totalWorkflows}\n              prefix={<DashboardOutlined />}\n              valueStyle={{ color: '#1890ff' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Active Workflows",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/EnhancedDashboard.tsx",
        "start": 315,
        "end": 330,
        "startLoc": {
          "line": 315,
          "column": 18,
          "position": 2177
        },
        "endLoc": {
          "line": 330,
          "column": 17,
          "position": 2323
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Analytics/AnalyticsDashboard.tsx",
        "start": 319,
        "end": 334,
        "startLoc": {
          "line": 319,
          "column": 18,
          "position": 2276
        },
        "endLoc": {
          "line": 334,
          "column": 17,
          "position": 2423
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "\"\n              value={data.quickStats.activeWorkflows}\n              prefix={<PlayCircleOutlined />}\n              valueStyle={{ color: '#52c41a' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Total Executions\"\n              value={data.quickStats.totalExecutions}\n              prefix={<RocketOutlined />}\n              valueStyle={{ color: '#722ed1' }}\n            />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={6}>\n          <Card>\n            <Statistic\n              title=\"Success Rate\"\n              value={data.quickStats.successRate}\n              suffix=\"%\"\n              prefix={<TrophyOutlined />}\n              valueStyle={{ color: data.quickStats.successRate > 95 ? '#52c41a' : '#faad14' }}\n            />\n          </Card>\n        </Col>\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/EnhancedDashboard.tsx",
        "start": 330,
        "end": 358,
        "startLoc": {
          "line": 330,
          "column": 17,
          "position": 2324
        },
        "endLoc": {
          "line": 358,
          "column": 3,
          "position": 2552
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Analytics/AnalyticsDashboard.tsx",
        "start": 324,
        "end": 357,
        "startLoc": {
          "line": 324,
          "column": 16,
          "position": 2342
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 2581
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "// };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              <span className=\"bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                Documentation",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Documentation.tsx",
        "start": 295,
        "end": 310,
        "startLoc": {
          "line": 295,
          "column": 3,
          "position": 1927
        },
        "endLoc": {
          "line": 310,
          "column": 14,
          "position": 2047
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Enterprise.tsx",
        "start": 248,
        "end": 191,
        "startLoc": {
          "line": 248,
          "column": 3,
          "position": 1185
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 1145
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-purple-600\">\n        <div className=\"container mx-auto px-6 text-center text-white\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Start",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Documentation.tsx",
        "start": 560,
        "end": 570,
        "startLoc": {
          "line": 560,
          "column": 17,
          "position": 4031
        },
        "endLoc": {
          "line": 570,
          "column": 6,
          "position": 4102
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 17,
          "position": 1495
        },
        "endLoc": {
          "line": 188,
          "column": 4,
          "position": 1566
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ");\n\n  const handleCreateWorkflow = async () => {\n    const name = prompt('Enter workflow name:');\n    if (name) {\n      if (name.trim().length === 0) {\n        toast.error('Please enter a valid workflow name.');\n        return;\n      }\n\n      try {\n        await createNewWorkflow(name.trim(), navigate);\n        // Refresh the dashboard workflows list",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.legacy.tsx",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1019
        },
        "endLoc": {
          "line": 118,
          "column": 40,
          "position": 1119
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/components/Layout/Header.tsx",
        "start": 12,
        "end": 35,
        "startLoc": {
          "line": 12,
          "column": 6,
          "position": 156
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 385
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ".map((stat) => (\n          <div\n            key={stat.name}\n            className=\"bg-white/10 backdrop-blur-md p-6 rounded-lg border border-white/20 shadow-lg hover:bg-white/15 transition-all duration-300\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"text-2xl mr-4\">{stat.icon}</div>\n              <div>\n                <p className=\"text-sm font-medium text-slate-300\">{stat.name}</p>\n                <p className=\"text-2xl font-semibold text-white\">{stat.value}</p>\n                {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.legacy.tsx",
        "start": 242,
        "end": 252,
        "startLoc": {
          "line": 242,
          "column": 15,
          "position": 2159
        },
        "endLoc": {
          "line": 252,
          "column": 2,
          "position": 2264
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Executions.legacy.tsx",
        "start": 149,
        "end": 159,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1418
        },
        "endLoc": {
          "line": 159,
          "column": 3,
          "position": 1523
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "} = useCredentialStore();\n\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [selectedType, setSelectedType] = useState<CredentialTypeDefinition | null>(null);\n  const [editingCredential, setEditingCredential] = useState<Credential | null>(null);\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.legacy.tsx",
        "start": 23,
        "end": 28,
        "startLoc": {
          "line": 23,
          "column": 3,
          "position": 160
        },
        "endLoc": {
          "line": 28,
          "column": 6,
          "position": 239
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.tsx",
        "start": 34,
        "end": 40,
        "startLoc": {
          "line": 34,
          "column": 3,
          "position": 221
        },
        "endLoc": {
          "line": 40,
          "column": 10,
          "position": 301
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const credentialStatus = urlParams.get('credential');\n    const credentialId = urlParams.get('id');\n    const credentialName = urlParams.get('name');\n    const errorMessage = urlParams.get('message');\n\n    if (credentialStatus === 'success' && credentialId && credentialName) {\n      alert(`Gmail credential \"${decodeURIComponent(credentialName)}\" created successfully!`);\n      // Reload credentials to show the new one",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.legacy.tsx",
        "start": 37,
        "end": 46,
        "startLoc": {
          "line": 37,
          "column": 3,
          "position": 326
        },
        "endLoc": {
          "line": 46,
          "column": 42,
          "position": 451
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.tsx",
        "start": 46,
        "end": 55,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 340
        },
        "endLoc": {
          "line": 55,
          "column": 16,
          "position": 465
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</h2>\n            <button\n              onClick={() => setShowCreateForm(true)}\n              className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg hover:scale-105 transition-all duration-300 shadow-lg\"\n            >\n              Create New\n            </button>\n          </div>\n        </div>\n        <div className=\"p-6\">\n          {isLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400 mx-auto\"></div>\n              <p className=\"mt-2 text-slate-300\">Loading credentials",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Credentials.legacy.tsx",
        "start": 261,
        "end": 274,
        "startLoc": {
          "line": 261,
          "column": 12,
          "position": 2246
        },
        "endLoc": {
          "line": 274,
          "column": 12,
          "position": 2352
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Dashboard.legacy.tsx",
        "start": 269,
        "end": 283,
        "startLoc": {
          "line": 269,
          "column": 10,
          "position": 2421
        },
        "endLoc": {
          "line": 283,
          "column": 10,
          "position": 2520
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "// };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              Get",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Contact.tsx",
        "start": 179,
        "end": 193,
        "startLoc": {
          "line": 179,
          "column": 3,
          "position": 957
        },
        "endLoc": {
          "line": 193,
          "column": 4,
          "position": 1066
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Enterprise.tsx",
        "start": 248,
        "end": 62,
        "startLoc": {
          "line": 248,
          "column": 3,
          "position": 1185
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "</div>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-3xl mx-auto\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Contact.tsx",
        "start": 333,
        "end": 343,
        "startLoc": {
          "line": 333,
          "column": 13,
          "position": 2337
        },
        "endLoc": {
          "line": 343,
          "column": 38,
          "position": 2413
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/PricingPage.tsx",
        "start": 521,
        "end": 531,
        "startLoc": {
          "line": 521,
          "column": 13,
          "position": 3586
        },
        "endLoc": {
          "line": 531,
          "column": 38,
          "position": 3662
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "</div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-purple-600\">\n        <div className=\"container mx-auto px-6 text-center text-white\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Get Started?</h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto opacity-90\">\n            Don't",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Contact.tsx",
        "start": 355,
        "end": 365,
        "startLoc": {
          "line": 355,
          "column": 13,
          "position": 2553
        },
        "endLoc": {
          "line": 365,
          "column": 6,
          "position": 2634
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 13,
          "position": 1505
        },
        "endLoc": {
          "line": 190,
          "column": 3,
          "position": 1586
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "},\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              Building",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/About.tsx",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 966
        },
        "endLoc": {
          "line": 185,
          "column": 9,
          "position": 1080
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/Terms.tsx",
        "start": 47,
        "end": 62,
        "startLoc": {
          "line": 47,
          "column": 5,
          "position": 250
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 364
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "};\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\n      {/* Header */}\n      <Header />\n      {/* Hero Section */}\n      <section className=\"relative py-20 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900\" />\n        <div className=\"absolute inset-0 bg-[url('/grid.svg')] opacity-20\" />\n\n        <div className=\"container mx-auto px-6 relative z-10\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-6 leading-tight\">\n              <span className=\"bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                API",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/APIReference.tsx",
        "start": 338,
        "end": 353,
        "startLoc": {
          "line": 338,
          "column": 3,
          "position": 1549
        },
        "endLoc": {
          "line": 353,
          "column": 4,
          "position": 1670
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/SelfHosted.tsx",
        "start": 176,
        "end": 191,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 1024
        },
        "endLoc": {
          "line": 191,
          "column": 5,
          "position": 1145
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</p>\n                    </div>\n                    <ExternalLink className=\"w-5 h-5 text-gray-400\" />\n                  </div>\n                </div>\n                <div className=\"border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-semibold text-gray-900\">Go",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/APIReference.tsx",
        "start": 699,
        "end": 707,
        "startLoc": {
          "line": 699,
          "column": 11,
          "position": 4559
        },
        "endLoc": {
          "line": 707,
          "column": 3,
          "position": 4627
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/pages/APIReference.tsx",
        "start": 690,
        "end": 698,
        "startLoc": {
          "line": 690,
          "column": 4,
          "position": 4471
        },
        "endLoc": {
          "line": 698,
          "column": 7,
          "position": 4539
        }
      }
    },
    {
      "format": "javascript",
      "lines": 41,
      "fragment": "}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>🧪</span> Test\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>📄</span> Copy\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>📋</span> Duplicate\n                </button>\n                <hr className=\"my-1 border-gray-600\" />\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete?.();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-red-400 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>🗑️</span> Delete\n                </button>\n              </div>\n            )}\n\n            {/* Status Badges */}\n            {nodeData.disabled && <StatusBadge type=\"disabled\" position=\"top-right\" />}\n            {mode === 'rules' && rules.length > 0 && (\n              <StatusBadge type=\"count\" content={rules",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 177,
        "end": 217,
        "startLoc": {
          "line": 177,
          "column": 2,
          "position": 1176
        },
        "endLoc": {
          "line": 217,
          "column": 6,
          "position": 1465
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 161,
        "end": 192,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1077
        },
        "endLoc": {
          "line": 192,
          "column": 2,
          "position": 1263
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "} size=\"md\" />\n\n            {/* Shared NodeToolbar */}\n            <NodeToolbar\n              visible={isHovered}\n              onPlay={() => {}}\n              onStop={() => {}}\n              onDelete={(e) => {\n                e.stopPropagation();\n                onDelete?.();\n              }}\n              onMenuToggle={() => setShowLocalMenu(!showLocalMenu)}\n              menuTriggerRef={menuTriggerRef as any}\n            />\n\n            {/* Menu Dropdown */}\n            {showLocalMenu && (\n              <div\n                ref={menuRef}\n                className={`${positionClasses} bg-gray-800 border border-gray-600 rounded-md shadow-lg py-1 min-w-[120px]`}\n                style={positionStyles}\n                onClick={(e) => e.stopPropagation()}\n              >\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onOpenProperties",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx",
        "start": 133,
        "end": 159,
        "startLoc": {
          "line": 133,
          "column": 12,
          "position": 816
        },
        "endLoc": {
          "line": 159,
          "column": 37,
          "position": 995
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 137,
        "end": 176,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 920
        },
        "endLoc": {
          "line": 176,
          "column": 21,
          "position": 1168
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>📂</span> Open\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>🧪</span> Test\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>📄</span> Copy\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowLocalMenu(false);\n                  }}\n                  className=\"w-full px-3 py-1.5 text-left text-sm text-gray-200 hover:bg-gray-700 flex items-center gap-2\"\n                >\n                  <span>📋</span> Duplicate\n                </button>\n                <hr className=\"my-1 border-gray-600\" />\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx",
        "start": 159,
        "end": 197,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 998
        },
        "endLoc": {
          "line": 197,
          "column": 29,
          "position": 1229
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 175,
        "end": 194,
        "startLoc": {
          "line": 175,
          "column": 16,
          "position": 1165
        },
        "endLoc": {
          "line": 194,
          "column": 21,
          "position": 1276
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "import type React from 'react';\nimport { useRef, useState } from 'react';\nimport { Handle, Position } from 'reactflow';\nimport NodeToolbar from '../components/WorkflowEditor/NodeTypes/BaseNode/NodeToolbar';\nimport { useSmartMenuPosition } from '../hooks/useSmartMenuPosition';\nimport { NodeIcon, NodeLabel, StatusBadge } from './shared';\nimport type { CustomNodeBodyProps } from './types';\n\n/**\n * Custom AI Agent Node Body Component\n * Gmail-style UI with AI-specific features and handles\n */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 4,
          "position": 100
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 4,
          "position": 100
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "// Menu state for NodeToolbar\n  const [showLocalMenu, setShowLocalMenu] = useState(false);\n  const menuTriggerRef = useRef<HTMLButtonElement>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const { positionClasses, positionStyles } = useSmartMenuPosition({\n    isOpen: showLocalMenu,\n    triggerRef: menuTriggerRef,\n    menuRef: menuRef,\n    offset: 4,\n    onClose: () => setShowLocalMenu(false),\n  });\n\n  // Click-outside handling is now centralized in useSmartMenuPosition hook\n\n  const handleDoubleClick",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx",
        "start": 28,
        "end": 43,
        "startLoc": {
          "line": 28,
          "column": 3,
          "position": 217
        },
        "endLoc": {
          "line": 43,
          "column": 18,
          "position": 344
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 27,
        "end": 41,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 224
        },
        "endLoc": {
          "line": 41,
          "column": 6,
          "position": 350
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "const handleDoubleClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    onOpenProperties?.();\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"relative\">\n        <div className=\"flex items-center\">\n          <div\n            className={`\n              relative flex items-center justify-center bg-gray-800 p-4 shadow-lg transition-all duration-200\n              rounded-md min-w-[80px] max-w-[150px] min-h-[60px]\n              ${selected ? 'ring-2 ring-offset-2 ring-offset-gray-900 ring-purple-400' : ''}\n              ${isHovered ? 'hover:shadow-xl hover:scale-105 ring-2 ring-offset-2 ring-offset-gray-900 ring-purple-400' : ''}\n            `}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            onDoubleClick={handleDoubleClick}\n          >\n            {/* Standard Input Handle */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/AIAgentNodeBody.tsx",
        "start": 43,
        "end": 63,
        "startLoc": {
          "line": 43,
          "column": 3,
          "position": 342
        },
        "endLoc": {
          "line": 63,
          "column": 28,
          "position": 474
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/node-extensions/ConditionNodeBody.tsx",
        "start": 52,
        "end": 72,
        "startLoc": {
          "line": 52,
          "column": 3,
          "position": 467
        },
        "endLoc": {
          "line": 72,
          "column": 19,
          "position": 599
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n\n      // Calculate available space in each direction\n      const spaceRight = viewport.width - triggerRect.right;\n      const spaceLeft = triggerRect.left;\n      const spaceBelow = viewport.height - triggerRect.bottom;\n\n      let newPosition: MenuPosition = {};\n      let strategy: typeof positionStrategy = 'right';\n\n      // Try positioning to the right of the button (preferred)\n      if (spaceRight >= menuRect",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useSmartMenuPosition.ts",
        "start": 156,
        "end": 167,
        "startLoc": {
          "line": 156,
          "column": 2,
          "position": 1321
        },
        "endLoc": {
          "line": 167,
          "column": 9,
          "position": 1417
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/frontend/src/app/hooks/useSmartMenuPosition.ts",
        "start": 77,
        "end": 88,
        "startLoc": {
          "line": 77,
          "column": 4,
          "position": 636
        },
        "endLoc": {
          "line": 88,
          "column": 19,
          "position": 732
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "workflowId: z.string(),\n  status: z.enum(['pending', 'running', 'success', 'error', 'cancelled']),\n  startTime: z.date(),\n  endTime: z.date().optional(),\n  executionTime: z.number().optional(),\n  nodeExecutions: z\n    .record(\n      z.string(),\n      z.object",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/entity-schemas.ts",
        "start": 11,
        "end": 19,
        "startLoc": {
          "line": 11,
          "column": 3,
          "position": 95
        },
        "endLoc": {
          "line": 19,
          "column": 7,
          "position": 194
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/query-types.ts",
        "start": 43,
        "end": 48,
        "startLoc": {
          "line": 43,
          "column": 3,
          "position": 379
        },
        "endLoc": {
          "line": 48,
          "column": 4,
          "position": 473
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "email: z.string().email(),\n  username: z.string(),\n  passwordHash: z.string(),\n  roles: z.array(z.string()),\n  permissions: z.array(z.string()),\n  isActive: z.boolean().default(true),\n  lastLoginAt: z.date().optional(),\n  organizationId: z.string().optional(),\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/entity-schemas.ts",
        "start": 34,
        "end": 42,
        "startLoc": {
          "line": 34,
          "column": 3,
          "position": 374
        },
        "endLoc": {
          "line": 42,
          "column": 2,
          "position": 488
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/query-types.ts",
        "start": 57,
        "end": 65,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 582
        },
        "endLoc": {
          "line": 65,
          "column": 10,
          "position": 697
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "name: z.string(),\n  description: z.string().optional(),\n  nodes: z.array(z.any()),\n  edges: z.array(z.any()),\n  isActive: z.boolean().default(true),\n  ownerId: z.string(),\n  organizationId: z.string().optional(),\n  version: z.number().default(1),\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/entity-schemas.ts",
        "start": 45,
        "end": 53,
        "startLoc": {
          "line": 45,
          "column": 3,
          "position": 508
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 623
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/types/query-types.ts",
        "start": 29,
        "end": 37,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 207
        },
        "endLoc": {
          "line": 37,
          "column": 10,
          "position": 323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "export enum ExecutionStatus {\n  PENDING = 'pending',\n  RUNNING = 'running',\n  SUCCESS = 'success',\n  ERROR = 'error',\n  CANCELLED = 'cancelled',\n  TIMEOUT = 'timeout',\n}\n\nexport enum NodeStatus {\n  PENDING = 'pending',\n  RUNNING = 'running',\n  SUCCESS = 'success',\n  ERROR = 'error',\n  SKIPPED = 'skipped',\n}\n\nexport enum TriggerType {\n  MANUAL = 'manual',\n  WEBHOOK = 'webhook',\n  SCHEDULE = 'schedule',\n  API = 'api',\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/types/execution-types.ts",
        "start": 2,
        "end": 26,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 26,
          "column": 7,
          "position": 155
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/execution-types.ts",
        "start": 2,
        "end": 26,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 26,
          "column": 28,
          "position": 155
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (entry.isDirectory() && !entry.name.includes('node_modules'))",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 180,
        "end": 185,
        "startLoc": {
          "line": 180,
          "column": 7,
          "position": 1574
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1656
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 217,
        "end": 224,
        "startLoc": {
          "line": 217,
          "column": 7,
          "position": 1725
        },
        "endLoc": {
          "line": 224,
          "column": 3,
          "position": 1811
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ")) {\n          scanDirectory(fullPath);\n        } else if (entry.isFile() && (entry.name.endsWith('.ts') || entry.name.endsWith('.tsx'))) {\n          files.push(fullPath);\n        }\n      }\n    };\n\n    scanDirectory(srcDir",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 185,
        "end": 193,
        "startLoc": {
          "line": 185,
          "column": 15,
          "position": 1655
        },
        "endLoc": {
          "line": 193,
          "column": 7,
          "position": 1731
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 225,
        "end": 234,
        "startLoc": {
          "line": 225,
          "column": 7,
          "position": 1822
        },
        "endLoc": {
          "line": 234,
          "column": 12,
          "position": 1900
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "async getPackageDirectories(): Promise<string[]> {\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n    const packages: string[] = [];\n\n    // Get main packages\n    const mainPackages = ['backend', 'frontend', 'shared'];\n    for (const pkg of mainPackages) {\n      const pkgPath = path.join(packagesDir, pkg);\n      if (fs.existsSync(pkgPath)) {\n        packages.push(pkgPath);\n      }\n    }\n\n    // Get @reporunner packages\n    const reporunnerDir = path.join(packagesDir, '@reporunner');\n    if (fs.existsSync(reporunnerDir)) {\n      const reporunnerPackages = fs\n        .readdirSync(reporunnerDir, { withFileTypes: true })\n        .filter((dirent) => dirent.isDirectory())\n        .map((dirent) => path.join(reporunnerDir, dirent.name));\n      packages.push(...reporunnerPackages);\n    }\n\n    return packages;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/analyzer.ts",
        "start": 132,
        "end": 157,
        "startLoc": {
          "line": 132,
          "column": 3,
          "position": 1048
        },
        "endLoc": {
          "line": 157,
          "column": 2,
          "position": 1310
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 197,
        "end": 223,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 1748
        },
        "endLoc": {
          "line": 223,
          "column": 8,
          "position": 2012
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", ...args], {\n        cwd: this.workspaceRoot,\n        stdio: ['pipe', 'pipe', 'pipe'],\n      });\n\n      let stdout = '';\n      let stderr = '';\n\n      child.stdout?.on('data', (data) => {\n        stdout += data.toString();\n      });\n\n      child.stderr?.on('data', (data) => {\n        stderr += data.toString();\n      });\n\n      child.on('close', (code) => {\n        resolve",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestOrchestrator.ts",
        "start": 236,
        "end": 253,
        "startLoc": {
          "line": 236,
          "column": 8,
          "position": 1632
        },
        "endLoc": {
          "line": 253,
          "column": 8,
          "position": 1783
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestSuiteRunner.ts",
        "start": 196,
        "end": 213,
        "startLoc": {
          "line": 196,
          "column": 9,
          "position": 1561
        },
        "endLoc": {
          "line": 213,
          "column": 3,
          "position": 1712
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(packageName);\n      packageResults.push(result);\n    }\n\n    const totalTime = Date.now() - startTime;\n\n    return {\n      overallStatus: packageResults.every((p) => p.status === 'success') ? 'success' : 'failure',\n      packageBuilds: packageResults,\n      totalBuildTime: totalTime,\n      parallelEfficiency: 100,\n      cacheHitRate: 0,\n    };\n  }\n\n  /**\n   * Measure build performance metrics\n   * Requirements: 1.4\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/BuildValidator.ts",
        "start": 124,
        "end": 142,
        "startLoc": {
          "line": 124,
          "column": 28,
          "position": 918
        },
        "endLoc": {
          "line": 142,
          "column": 6,
          "position": 1029
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/BuildValidator.ts",
        "start": 87,
        "end": 105,
        "startLoc": {
          "line": 87,
          "column": 25,
          "position": 637
        },
        "endLoc": {
          "line": 105,
          "column": 6,
          "position": 748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(packageName: string): Promise<PackageBuildResult> {\n    const startTime = Date.now();\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    try {\n      const packagePath = this.resolvePackagePath(packageName);\n\n      // Check if package has node_modules or relies on workspace hoisting",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/BuildValidator.ts",
        "start": 390,
        "end": 398,
        "startLoc": {
          "line": 390,
          "column": 28,
          "position": 2856
        },
        "endLoc": {
          "line": 398,
          "column": 69,
          "position": 2940
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/BuildValidator.ts",
        "start": 277,
        "end": 284,
        "startLoc": {
          "line": 277,
          "column": 25,
          "position": 1952
        },
        "endLoc": {
          "line": 284,
          "column": 6,
          "position": 2035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "(endpoint);\n        if (result.success) {\n          validatedCount++;\n        } else {\n          failures.push(result.failure!);\n        }\n      } catch (error) {\n        failures.push({\n          endpoint: endpoint.path,\n          method: endpoint.method,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        });\n      }\n    }\n\n    const responseTimeMetrics = this.calculateResponseTimeMetrics();\n\n    return {\n      totalEndpoints: this.config.endpoints.length,\n      validatedEndpoints: validatedCount,\n      failedEndpoints: failures,\n      responseTimeMetrics,\n      status: failures.length === 0 ? 'success' : 'failure',\n    };\n  }\n\n  /**\n   * Test error handling for endpoints\n   * Requirements: 1.2\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 89,
        "end": 118,
        "startLoc": {
          "line": 89,
          "column": 23,
          "position": 646
        },
        "endLoc": {
          "line": 118,
          "column": 6,
          "position": 839
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 52,
        "end": 81,
        "startLoc": {
          "line": 52,
          "column": 23,
          "position": 362
        },
        "endLoc": {
          "line": 81,
          "column": 6,
          "position": 555
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(endpoint);\n        if (result.success) {\n          validatedCount++;\n        } else {\n          failures.push(result.failure!);\n        }\n      } catch (error) {\n        failures.push({\n          endpoint: endpoint.path,\n          method: endpoint.method,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        });\n      }\n    }\n\n    const responseTimeMetrics = this.calculateResponseTimeMetrics();\n\n    return {\n      totalEndpoints: errorTestEndpoints",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 132,
        "end": 150,
        "startLoc": {
          "line": 132,
          "column": 22,
          "position": 1014
        },
        "endLoc": {
          "line": 150,
          "column": 19,
          "position": 1150
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 52,
        "end": 70,
        "startLoc": {
          "line": 52,
          "column": 23,
          "position": 362
        },
        "endLoc": {
          "line": 70,
          "column": 5,
          "position": 498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(endpoint);\n        if (result.success) {\n          validatedCount++;\n        } else {\n          failures.push(result.failure!);\n        }\n      } catch (error) {\n        failures.push({\n          endpoint: endpoint.path,\n          method: endpoint.method,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        });\n      }\n    }\n\n    const responseTimeMetrics = this.calculateResponseTimeMetrics();\n\n    return {\n      totalEndpoints: healthEndpoints",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 174,
        "end": 192,
        "startLoc": {
          "line": 174,
          "column": 23,
          "position": 1355
        },
        "endLoc": {
          "line": 192,
          "column": 16,
          "position": 1491
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 52,
        "end": 70,
        "startLoc": {
          "line": 52,
          "column": 23,
          "position": 362
        },
        "endLoc": {
          "line": 70,
          "column": 5,
          "position": 498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n  }> {\n    const startTime = Date.now();\n\n    try {\n      const config = this.buildRequestConfig(endpoint);\n      const response = await axios(config);\n      const responseTime = Date.now() - startTime;\n      this.responseTimes.push(responseTime);\n\n      // Check if response is valid JSON object",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 302,
        "end": 312,
        "startLoc": {
          "line": 302,
          "column": 16,
          "position": 2400
        },
        "endLoc": {
          "line": 312,
          "column": 42,
          "position": 2489
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 244,
        "end": 254,
        "startLoc": {
          "line": 244,
          "column": 7,
          "position": 1950
        },
        "endLoc": {
          "line": 254,
          "column": 3,
          "position": 2039
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(endpoint: APIEndpoint): Promise<{\n    success: boolean;\n    failure?: EndpointFailure;\n  }> {\n    const startTime = Date.now();\n\n    try {\n      const config = this.buildRequestConfig(endpoint);\n      const response = await axios(config);\n      const responseTime = Date.now() - startTime;\n      this.responseTimes.push(responseTime);\n\n      if (response.status === endpoint.expectedStatus) {\n        return { success: true }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 362,
        "end": 375,
        "startLoc": {
          "line": 362,
          "column": 22,
          "position": 2842
        },
        "endLoc": {
          "line": 375,
          "column": 2,
          "position": 2982
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 300,
        "end": 255,
        "startLoc": {
          "line": 300,
          "column": 23,
          "position": 2375
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2064
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "${endpoint.expectedStatus}, got ${response.status}`,\n            statusCode: response.status,\n            responseTime,\n          },\n        };\n      }\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n      this.responseTimes.push(responseTime);\n\n      if (axios.isAxiosError(error) && error.response) {\n        if",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 382,
        "end": 393,
        "startLoc": {
          "line": 382,
          "column": 24,
          "position": 3033
        },
        "endLoc": {
          "line": 393,
          "column": 3,
          "position": 3133
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 262,
        "end": 273,
        "startLoc": {
          "line": 262,
          "column": 18,
          "position": 2119
        },
        "endLoc": {
          "line": 273,
          "column": 7,
          "position": 2219
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "response.status === endpoint.expectedStatus) {\n          return { success: true };\n        } else {\n          return {\n            success: false,\n            failure: {\n              endpoint: endpoint.path,\n              method: endpoint.method,\n              error: `Expected error status ${endpoint.expectedStatus}, got ${error",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 393,
        "end": 401,
        "startLoc": {
          "line": 393,
          "column": 2,
          "position": 3138
        },
        "endLoc": {
          "line": 401,
          "column": 6,
          "position": 3219
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 374,
        "end": 382,
        "startLoc": {
          "line": 374,
          "column": 2,
          "position": 2959
        },
        "endLoc": {
          "line": 382,
          "column": 9,
          "position": 3040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(endpoint: APIEndpoint): Promise<{\n    success: boolean;\n    failure?: EndpointFailure;\n  }> {\n    const startTime = Date.now();\n\n    try {\n      const config = this.buildRequestConfig(endpoint);\n      const response = await axios(config);\n      const responseTime = Date.now() - startTime;\n      this.responseTimes.push(responseTime);\n\n      if (response.status !==",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 424,
        "end": 436,
        "startLoc": {
          "line": 424,
          "column": 23,
          "position": 3343
        },
        "endLoc": {
          "line": 436,
          "column": 4,
          "position": 3464
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 300,
        "end": 254,
        "startLoc": {
          "line": 300,
          "column": 23,
          "position": 2375
        },
        "endLoc": {
          "line": 254,
          "column": 4,
          "position": 2046
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        return {\n          success: false,\n          failure: {\n            endpoint: endpoint.path,\n            method: endpoint.method,\n            error: `Expected status ${endpoint.expectedStatus}, got ${response.status}`,\n            statusCode: response.status,\n            responseTime,\n          },\n        };\n      }\n\n      // Check if health endpoint indicates healthy status",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 436,
        "end": 449,
        "startLoc": {
          "line": 436,
          "column": 2,
          "position": 3471
        },
        "endLoc": {
          "line": 449,
          "column": 53,
          "position": 3554
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 256,
        "end": 268,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 2076
        },
        "endLoc": {
          "line": 268,
          "column": 2,
          "position": 2158
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "}\n      }\n\n      return { success: true };\n    } catch (error) {\n      const responseTime = Date.now() - startTime;\n      this.responseTimes.push(responseTime);\n\n      return {\n        success: false,\n        failure: {\n          endpoint: endpoint.path,\n          method: endpoint.method,\n          error: error instanceof Error ? error.message : 'Unknown error',\n          responseTime,\n        },\n      };\n    }\n  }\n\n  /**\n   * Build request configuration for axios\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 464,
        "end": 486,
        "startLoc": {
          "line": 464,
          "column": 9,
          "position": 3680
        },
        "endLoc": {
          "line": 486,
          "column": 6,
          "position": 3817
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/APIValidator.ts",
        "start": 339,
        "end": 361,
        "startLoc": {
          "line": 339,
          "column": 9,
          "position": 2697
        },
        "endLoc": {
          "line": 361,
          "column": 6,
          "position": 2834
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "private generatePerformanceDashboard(results: ValidationResults): PerformanceDashboard {\n    const charts = this.generateChartData(results);\n    const metrics = this.generateMetricCards(results);\n    const trends = this.generateTrendAnalysis(results);\n    const comparisons = this.generateComparisonData(results);\n\n    return {\n      charts,\n      metrics,\n      trends,\n      comparisons,\n    };\n  }\n\n  /**\n   * Generate chart data for dashboard\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts",
        "start": 99,
        "end": 115,
        "startLoc": {
          "line": 99,
          "column": 3,
          "position": 560
        },
        "endLoc": {
          "line": 115,
          "column": 6,
          "position": 666
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts",
        "start": 105,
        "end": 121,
        "startLoc": {
          "line": 105,
          "column": 3,
          "position": 592
        },
        "endLoc": {
          "line": 121,
          "column": 6,
          "position": 698
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "charts.push({\n      id: 'build-time-comparison',\n      type: 'bar',\n      title: 'Package Build Times',\n      data: Object.entries(results.performanceAnalysis.buildMetrics.packageBuildTimes).map(\n        ([pkg, time]) => ({\n          package: pkg,\n          buildTime: Math.round(time / 1000), // Convert to seconds\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts",
        "start": 120,
        "end": 128,
        "startLoc": {
          "line": 120,
          "column": 5,
          "position": 707
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 795
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts",
        "start": 127,
        "end": 135,
        "startLoc": {
          "line": 127,
          "column": 7,
          "position": 756
        },
        "endLoc": {
          "line": 135,
          "column": 7,
          "position": 844
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "charts.push({\n      id: 'bundle-size-distribution',\n      type: 'pie',\n      title: 'Bundle Size Distribution',\n      data: Object.entries(results.performanceAnalysis.bundleMetrics.packageSizes).map(\n        ([pkg, size]) => ({\n          package: pkg,\n          size: Math.round(size / 1024), // Convert to KB\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 5,
          "position": 826
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 914
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts",
        "start": 145,
        "end": 153,
        "startLoc": {
          "line": 145,
          "column": 7,
          "position": 926
        },
        "endLoc": {
          "line": 153,
          "column": 11,
          "position": 1014
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n      title: 'Architecture Health Score',\n      value: results.architectureValidation.dependencyAnalysis.healthScore,\n      unit: '/100',\n      status:\n        results.architectureValidation.dependencyAnalysis.healthScore >= 90\n          ? 'success'\n          : results.architectureValidation.dependencyAnalysis.healthScore >= 70\n            ? 'warning'\n            : 'error',\n    });\n\n    // Cache hit rate",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts",
        "start": 242,
        "end": 254,
        "startLoc": {
          "line": 242,
          "column": 22,
          "position": 1645
        },
        "endLoc": {
          "line": 254,
          "column": 18,
          "position": 1729
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts",
        "start": 372,
        "end": 383,
        "startLoc": {
          "line": 372,
          "column": 28,
          "position": 2665
        },
        "endLoc": {
          "line": 383,
          "column": 2,
          "position": 2748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    return {\n      critical: recommendations.filter((r) => r.priority === 'critical'),\n      high: recommendations.filter((r) => r.priority === 'high'),\n      medium: recommendations.filter((r) => r.priority === 'medium'),\n      low: recommendations.filter((r) => r.priority === 'low'),\n    };\n  }\n\n  /**\n   * Generate documentation updates based on validation results\n   */\n  private generateDocumentationUpdates(results: ValidationResults): DocumentationUpdate[] {\n    const updates: DocumentationUpdate[] = [];\n\n    // Update architecture documentation",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ReportingEngine.ts",
        "start": 364,
        "end": 380,
        "startLoc": {
          "line": 364,
          "column": 16,
          "position": 2549
        },
        "endLoc": {
          "line": 380,
          "column": 37,
          "position": 2700
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/ValidationReportAggregator.ts",
        "start": 555,
        "end": 571,
        "startLoc": {
          "line": 555,
          "column": 2,
          "position": 4350
        },
        "endLoc": {
          "line": 571,
          "column": 37,
          "position": 4501
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "cacheHitRate: results.performanceAnalysis?.buildMetrics?.cacheHitRate || 0,\n      parallelEfficiency: results.performanceAnalysis?.buildMetrics?.parallelEfficiency || 0,\n      architectureHealthScore: results.architectureValidation?.dependencyAnalysis?.healthScore || 0,\n      typeScriptCompilationTime:\n        (results.performanceAnalysis?.devExperienceMetrics?.typeScriptPerformance\n          ?.compilationTime || 0) / 1000,\n      autocompleteSpeed",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/BenchmarkingSystem.ts",
        "start": 380,
        "end": 386,
        "startLoc": {
          "line": 380,
          "column": 7,
          "position": 2917
        },
        "endLoc": {
          "line": 386,
          "column": 18,
          "position": 3005
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/reporting/PerformanceTracker.ts",
        "start": 527,
        "end": 532,
        "startLoc": {
          "line": 527,
          "column": 7,
          "position": 4491
        },
        "endLoc": {
          "line": 532,
          "column": 22,
          "position": 4578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(values: number[]): 'improving' | 'degrading' | 'stable' {\n    if (values.length < 2) {\n      return 'stable';\n    }\n\n    const first = values[0];\n    const last = values[values.length - 1];\n    const change = (",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryOptimizer.ts",
        "start": 225,
        "end": 232,
        "startLoc": {
          "line": 225,
          "column": 24,
          "position": 1647
        },
        "endLoc": {
          "line": 232,
          "column": 2,
          "position": 1733
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/system/TestOrchestrator.ts",
        "start": 367,
        "end": 373,
        "startLoc": {
          "line": 367,
          "column": 15,
          "position": 2601
        },
        "endLoc": {
          "line": 373,
          "column": 5,
          "position": 2686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ");\n    }\n  }\n\n  /**\n   * Get current memory statistics\n   */\n  private getCurrentMemoryStats(): MemoryStats {\n    const memUsage = process.memoryUsage();\n    return {\n      heapUsed: memUsage.heapUsed,\n      heapTotal: memUsage.heapTotal,\n      external: memUsage.external,\n      rss: memUsage.rss,\n      peak: memUsage.heapUsed,\n    };\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryOptimizer.ts",
        "start": 264,
        "end": 281,
        "startLoc": {
          "line": 264,
          "column": 3,
          "position": 1998
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 2094
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/PerformanceMonitor.ts",
        "start": 195,
        "end": 215,
        "startLoc": {
          "line": 195,
          "column": 7,
          "position": 1282
        },
        "endLoc": {
          "line": 215,
          "column": 6,
          "position": 1380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n    }\n  }\n\n  /**\n   * Get current memory statistics\n   */\n  private getCurrentMemoryStats(): MemoryStats {\n    const memUsage = process.memoryUsage();\n    return {\n      heapUsed: memUsage.heapUsed,\n      heapTotal: memUsage.heapTotal,\n      external: memUsage.external,\n      rss: memUsage.rss,\n      peak: memUsage.heapUsed,\n    };\n  }\n\n  /**\n   * Get garbage collection information\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryMonitor.ts",
        "start": 214,
        "end": 234,
        "startLoc": {
          "line": 214,
          "column": 4,
          "position": 1532
        },
        "endLoc": {
          "line": 234,
          "column": 6,
          "position": 1630
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/PerformanceMonitor.ts",
        "start": 195,
        "end": 215,
        "startLoc": {
          "line": 195,
          "column": 7,
          "position": 1282
        },
        "endLoc": {
          "line": 215,
          "column": 6,
          "position": 1380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "}\n\n  /**\n   * Get current memory statistics\n   */\n  private getCurrentMemoryStats(): MemoryStats {\n    const memUsage = process.memoryUsage();\n    return {\n      heapUsed: memUsage.heapUsed,\n      heapTotal: memUsage.heapTotal,\n      external: memUsage.external,\n      rss: memUsage.rss,\n      peak: memUsage.heapUsed,\n    };\n  }\n\n  /**\n   * Get garbage collection information\n   */\n  private getGCInfo(): GCInfo {\n    // In a real implementation, you might use v8.getHeapStatistics()",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/MemoryLeakDetector.ts",
        "start": 394,
        "end": 414,
        "startLoc": {
          "line": 394,
          "column": 3,
          "position": 2889
        },
        "endLoc": {
          "line": 414,
          "column": 66,
          "position": 2995
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/monitoring/PerformanceMonitor.ts",
        "start": 197,
        "end": 236,
        "startLoc": {
          "line": 197,
          "column": 3,
          "position": 1289
        },
        "endLoc": {
          "line": 236,
          "column": 7,
          "position": 1645
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": "} catch (_error) {\n    process.exit(1);\n  }\n}\n\nfunction findWorkspaceRoot(): string {\n  let currentDir = process.cwd();\n\n  while (currentDir !== path.dirname(currentDir)) {\n    const packageJsonPath = path.join(currentDir, 'package.json');\n    const pnpmWorkspacePath = path.join(currentDir, 'pnpm-workspace.yaml');\n\n    try {\n      const fs = require('node:fs');\n      if (fs.existsSync(packageJsonPath) && fs.existsSync(pnpmWorkspacePath)) {\n        return currentDir;\n      }\n    } catch (_error) {\n      // Continue searching\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  // Fallback to a reasonable default for testing\n  return path.resolve(__dirname, '../../../../../');\n}\n\nif (require.main === module) {\n  runImportOptimizationTest",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/test-runner.ts",
        "start": 70,
        "end": 99,
        "startLoc": {
          "line": 70,
          "column": 3,
          "position": 790
        },
        "endLoc": {
          "line": 99,
          "column": 26,
          "position": 1016
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/test-runner.ts",
        "start": 21,
        "end": 50,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 196
        },
        "endLoc": {
          "line": 50,
          "column": 26,
          "position": 422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const reporunnerDir = path.join(packagesDir, '@reporunner');\n    if (fs.existsSync(reporunnerDir)) {\n      const reporunnerPackages = fs\n        .readdirSync(reporunnerDir, { withFileTypes: true })\n        .filter((dirent) => dirent.isDirectory())\n        .map((dirent) => dirent",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/path-suggestion-engine.ts",
        "start": 323,
        "end": 328,
        "startLoc": {
          "line": 323,
          "column": 5,
          "position": 2900
        },
        "endLoc": {
          "line": 328,
          "column": 7,
          "position": 2984
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 211,
        "end": 216,
        "startLoc": {
          "line": 211,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 216,
          "column": 5,
          "position": 1973
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n\n    // Get main packages\n    const mainPackages = ['backend', 'frontend', 'shared'];\n    for (const pkg of mainPackages) {\n      const pkgPath = path.join(packagesDir, pkg);\n      if (fs.existsSync(pkgPath)) {\n        packages.push(pkgPath);\n      }\n    }\n\n    // Get @reporunner packages\n    const reporunnerDir = path.join(packagesDir, '@reporunner');\n    if (fs.existsSync(reporunnerDir)) {\n      const reporunnerPackages = fs\n        .readdirSync(reporunnerDir, { withFileTypes: true })\n        .filter((dirent:",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-path-optimizer.ts",
        "start": 192,
        "end": 208,
        "startLoc": {
          "line": 192,
          "column": 2,
          "position": 1645
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 1799
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 199,
        "end": 215,
        "startLoc": {
          "line": 199,
          "column": 2,
          "position": 1798
        },
        "endLoc": {
          "line": 215,
          "column": 2,
          "position": 1952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const packageJsonPath = path.join(packageDir, 'package.json');\n\n    if (fs.existsSync(packageJsonPath)) {\n      try {\n        const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));\n        return packageJson.name || path.basename(packageDir);\n      } catch (_error) {}\n    }\n\n    return path.basename(packageDir);\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-path-optimizer.ts",
        "start": 218,
        "end": 230,
        "startLoc": {
          "line": 218,
          "column": 5,
          "position": 1894
        },
        "endLoc": {
          "line": 230,
          "column": 8,
          "position": 2003
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 224,
        "end": 235,
        "startLoc": {
          "line": 224,
          "column": 5,
          "position": 2028
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2135
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\n    }\n\n    const scanDirectory = (dir: string) => {\n      const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (entry.isDirectory())",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-path-optimizer.ts",
        "start": 257,
        "end": 266,
        "startLoc": {
          "line": 257,
          "column": 8,
          "position": 2317
        },
        "endLoc": {
          "line": 266,
          "column": 2,
          "position": 2412
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/compilation-analyzer.ts",
        "start": 176,
        "end": 185,
        "startLoc": {
          "line": 176,
          "column": 6,
          "position": 1549
        },
        "endLoc": {
          "line": 185,
          "column": 3,
          "position": 1645
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "imports.forEach((imp) => {\n      if (!importGroups.has(imp.source)) {\n        importGroups.set(imp.source, []);\n      }\n      importGroups.get(imp.source)?.push(imp);\n    });\n\n    // Suggest consolidating multiple imports from same source",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-consistency-validator.ts",
        "start": 216,
        "end": 223,
        "startLoc": {
          "line": 216,
          "column": 5,
          "position": 1875
        },
        "endLoc": {
          "line": 223,
          "column": 59,
          "position": 1946
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/path-suggestion-engine.ts",
        "start": 189,
        "end": 196,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1645
        },
        "endLoc": {
          "line": 196,
          "column": 63,
          "position": 1716
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  private async getAllTypeScriptFiles(): Promise<string[]> {\n    const files: string[] = [];\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n\n    const scanDirectory = (dir: string) => {\n      if (!fs.existsSync(dir)) {\n        return;\n      }\n\n      const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (\n          entry.isDirectory() &&\n          !entry.name.includes('node_modules') &&\n          !entry.name.includes('dist') &&",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-consistency-validator.ts",
        "start": 340,
        "end": 360,
        "startLoc": {
          "line": 340,
          "column": 20,
          "position": 2918
        },
        "endLoc": {
          "line": 360,
          "column": 3,
          "position": 3121
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 205,
        "end": 226,
        "startLoc": {
          "line": 205,
          "column": 8,
          "position": 1621
        },
        "endLoc": {
          "line": 226,
          "column": 2,
          "position": 1825
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ")\n        ) {\n          scanDirectory(fullPath);\n        } else if (entry.isFile() && (entry.name.endsWith('.ts') || entry.name.endsWith('.tsx'))) {\n          files.push(fullPath);\n        }\n      }\n    };\n\n    scanDirectory(packagesDir);\n    return files;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/import-consistency-validator.ts",
        "start": 361,
        "end": 373,
        "startLoc": {
          "line": 361,
          "column": 8,
          "position": 3132
        },
        "endLoc": {
          "line": 373,
          "column": 2,
          "position": 3223
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 225,
        "end": 237,
        "startLoc": {
          "line": 225,
          "column": 7,
          "position": 1822
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 1913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": ";\n  }\n\n  private async getAllTypeScriptFiles(): Promise<string[]> {\n    const files: string[] = [];\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n\n    const scanDirectory = (dir: string) => {\n      if (!fs.existsSync(dir)) {\n        return;\n      }\n\n      const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (\n          entry.isDirectory() &&\n          !entry.name.includes('node_modules') &&\n          !entry.name.includes('dist') &&\n          !entry.name.includes('build')\n        ) {\n          scanDirectory(fullPath);\n        } else if (entry.isFile() && (entry.name.endsWith('.ts') || entry.name.endsWith('.tsx'))) {\n          files.push(fullPath);\n        }\n      }\n    };\n\n    scanDirectory(packagesDir);\n    return files;\n  }\n\n  // Public method to get dependency graph for analysis",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/import-optimization/circular-dependency-detector.ts",
        "start": 253,
        "end": 287,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 2173
        },
        "endLoc": {
          "line": 287,
          "column": 54,
          "position": 2480
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 205,
        "end": 237,
        "startLoc": {
          "line": 205,
          "column": 8,
          "position": 1621
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 1913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ".length > 0) {\n      }\n    });\n  } catch (_error) {\n    process.exit(1);\n  }\n}\n\nfunction findWorkspaceRoot(): string {\n  let currentDir = process.cwd();\n\n  while (currentDir !== path.dirname(currentDir)) {\n    const packageJsonPath = path.join(currentDir, 'package.json');\n    const pnpmWorkspacePath = path.join(currentDir, 'pnpm-workspace.yaml');\n\n    try {\n      const fs = require('node:fs');\n      if (fs.existsSync(packageJsonPath) && fs.existsSync(pnpmWorkspacePath)) {\n        return currentDir;\n      }\n    } catch (_error) {\n      // Continue searching\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  // Fallback to a reasonable default for testing\n  return path.resolve(__dirname, '../../../../../');\n}\n\nif (require.main === module) {\n  runIDEPerformanceTest",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/test-runner.ts",
        "start": 31,
        "end": 63,
        "startLoc": {
          "line": 31,
          "column": 7,
          "position": 356
        },
        "endLoc": {
          "line": 63,
          "column": 22,
          "position": 601
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/test-runner.ts",
        "start": 18,
        "end": 50,
        "startLoc": {
          "line": 18,
          "column": 7,
          "position": 177
        },
        "endLoc": {
          "line": 50,
          "column": 26,
          "position": 422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    }\n\n    const configPath = path.join(this.workspaceRoot, 'tsconfig.base.json');\n    const configFile = ts.readConfigFile(configPath, ts.sys.readFile);\n\n    if (configFile.error) {\n      throw new Error(`Error reading TypeScript config: ${configFile.error.messageText}`);\n    }\n\n    const { options, fileNames }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 223,
        "end": 233,
        "startLoc": {
          "line": 223,
          "column": 16,
          "position": 1758
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 1851
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 181,
        "end": 191,
        "startLoc": {
          "line": 181,
          "column": 8,
          "position": 1414
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n\n    const servicesHost: ts.LanguageServiceHost = {\n      getScriptFileNames: () => Object.keys(files),\n      getScriptVersion: (fileName) => files[fileName]?.version.toString(),\n      getScriptSnapshot: (fileName) => {\n        if (!fs.existsSync(fileName)) {\n          return undefined;\n        }\n        return ts.ScriptSnapshot.fromString(fs.readFileSync(fileName).toString());\n      },\n      getCurrentDirectory: () => this.workspaceRoot,\n      getCompilationSettings: () => options",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 246,
        "end": 258,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 1986
        },
        "endLoc": {
          "line": 258,
          "column": 8,
          "position": 2128
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/autocomplete-tester.ts",
        "start": 160,
        "end": 171,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 1366
        },
        "endLoc": {
          "line": 171,
          "column": 16,
          "position": 1507
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n      getDefaultLibFileName: (options) => ts.getDefaultLibFilePath(options),\n      fileExists: ts.sys.fileExists,\n      readFile: ts.sys.readFile,\n      readDirectory: ts.sys.readDirectory,\n      directoryExists: ts.sys.directoryExists,\n      getDirectories: ts.sys.getDirectories,\n    };\n\n    this.languageService = ts.createLanguageService(servicesHost, ts.createDocumentRegistry());\n    return this.languageService;\n  }\n\n  private async",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 258,
        "end": 271,
        "startLoc": {
          "line": 258,
          "column": 8,
          "position": 2129
        },
        "endLoc": {
          "line": 271,
          "column": 6,
          "position": 2246
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/autocomplete-tester.ts",
        "start": 171,
        "end": 184,
        "startLoc": {
          "line": 171,
          "column": 16,
          "position": 1508
        },
        "endLoc": {
          "line": 184,
          "column": 18,
          "position": 1625
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ";\n  }\n\n  private async getAllTypeScriptFiles(): Promise<string[]> {\n    const files: string[] = [];\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n\n    const scanDirectory = (dir: string) => {\n      if (!fs.existsSync(dir)) {\n        return;\n      }\n\n      const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (\n          entry.isDirectory() &&\n          !entry.name.includes('node_modules') &&\n          !entry.name.includes('dist')\n        ) {\n          scanDirectory(fullPath);\n        } else if (entry.isFile() && (entry.name.endsWith('.ts') || entry.name.endsWith('.tsx'))) {\n          files.push(fullPath);\n        }\n      }\n    };\n\n    scanDirectory(packagesDir);\n    return files;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 268,
        "end": 300,
        "startLoc": {
          "line": 268,
          "column": 16,
          "position": 2237
        },
        "endLoc": {
          "line": 300,
          "column": 2,
          "position": 2529
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/type-resolution-validator.ts",
        "start": 205,
        "end": 237,
        "startLoc": {
          "line": 205,
          "column": 8,
          "position": 1621
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 1913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "> {\n    const startTime = Date.now();\n\n    try {\n      const languageService = await this.getLanguageService();\n      const sourceFilePath = path.resolve(this.workspaceRoot, testCase.sourceFile);\n\n      // Create test file if it doesn't exist\n      const testFileExists = fs.existsSync(sourceFilePath);\n      if (!testFileExists) {\n        await this.createIntelliSenseTestFile",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/intellisense-tester.ts",
        "start": 41,
        "end": 51,
        "startLoc": {
          "line": 41,
          "column": 23,
          "position": 342
        },
        "endLoc": {
          "line": 51,
          "column": 27,
          "position": 438
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 21,
          "position": 339
        },
        "endLoc": {
          "line": 49,
          "column": 25,
          "position": 435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", 'utf-8');\n    const lines = content.split('\\n');\n\n    let offset = 0;\n    for (let i = 0; i < position.line && i < lines.length; i++) {\n      offset += lines[i].length + 1; // +1 for newline character\n    }\n\n    return offset + position.character;\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/intellisense-tester.ts",
        "start": 264,
        "end": 275,
        "startLoc": {
          "line": 264,
          "column": 9,
          "position": 1984
        },
        "endLoc": {
          "line": 275,
          "column": 8,
          "position": 2094
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/autocomplete-tester.ts",
        "start": 193,
        "end": 203,
        "startLoc": {
          "line": 193,
          "column": 9,
          "position": 1719
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1827
        }
      }
    },
    {
      "format": "typescript",
      "lines": 83,
      "fragment": ";\n  }\n\n  private async getLanguageService(): Promise<ts.LanguageService> {\n    if (this.languageService) {\n      return this.languageService;\n    }\n\n    const configPath = path.join(this.workspaceRoot, 'tsconfig.base.json');\n    const configFile = ts.readConfigFile(configPath, ts.sys.readFile);\n\n    if (configFile.error) {\n      throw new Error(`Error reading TypeScript config: ${configFile.error.messageText}`);\n    }\n\n    const { options, fileNames } = ts.parseJsonConfigFileContent(\n      configFile.config,\n      ts.sys,\n      this.workspaceRoot\n    );\n\n    // Get all TypeScript files from packages\n    const packageFiles = await this.getAllTypeScriptFiles();\n    const allFiles = [...fileNames, ...packageFiles];\n\n    const files: { [fileName: string]: { version: number } } = {};\n    allFiles.forEach((fileName) => {\n      files[fileName] = { version: 0 };\n    });\n\n    const servicesHost: ts.LanguageServiceHost = {\n      getScriptFileNames: () => Object.keys(files),\n      getScriptVersion: (fileName) => files[fileName]?.version.toString(),\n      getScriptSnapshot: (fileName) => {\n        if (!fs.existsSync(fileName)) {\n          return undefined;\n        }\n        return ts.ScriptSnapshot.fromString(fs.readFileSync(fileName).toString());\n      },\n      getCurrentDirectory: () => this.workspaceRoot,\n      getCompilationSettings: () => options,\n      getDefaultLibFileName: (options) => ts.getDefaultLibFilePath(options),\n      fileExists: ts.sys.fileExists,\n      readFile: ts.sys.readFile,\n      readDirectory: ts.sys.readDirectory,\n      directoryExists: ts.sys.directoryExists,\n      getDirectories: ts.sys.getDirectories,\n    };\n\n    this.languageService = ts.createLanguageService(servicesHost, ts.createDocumentRegistry());\n    return this.languageService;\n  }\n\n  private async getAllTypeScriptFiles(): Promise<string[]> {\n    const files: string[] = [];\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n\n    const scanDirectory = (dir: string) => {\n      if (!fs.existsSync(dir)) {\n        return;\n      }\n\n      const entries = fs.readdirSync(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (\n          entry.isDirectory() &&\n          !entry.name.includes('node_modules') &&\n          !entry.name.includes('dist')\n        ) {\n          scanDirectory(fullPath);\n        } else if (entry.isFile() && (entry.name.endsWith('.ts') || entry.name.endsWith('.tsx'))) {\n          files.push(fullPath);\n        }\n      }\n    };\n\n    scanDirectory(packagesDir);\n    return files;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/intellisense-tester.ts",
        "start": 272,
        "end": 354,
        "startLoc": {
          "line": 272,
          "column": 10,
          "position": 2087
        },
        "endLoc": {
          "line": 354,
          "column": 2,
          "position": 2900
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/ide-performance/navigation-tester.ts",
        "start": 218,
        "end": 237,
        "startLoc": {
          "line": 218,
          "column": 9,
          "position": 1716
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 1913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n  }\n\n  private async runCommand(\n    command: string,\n    args: string[],\n    options: { timeout?: number } = {}\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const child = spawn(command, args, {\n        cwd: this.workspaceRoot,\n        stdio: 'pipe',\n      });\n\n      const timeout = options.timeout || 30000;\n      const timer = setTimeout(() => {\n        child.kill();\n        reject(new Error(`Command timed out after ${timeout}ms`));\n      }, timeout);\n\n      child.on('close', (code",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/DevExperienceMetrics.ts",
        "start": 428,
        "end": 448,
        "startLoc": {
          "line": 428,
          "column": 2,
          "position": 3767
        },
        "endLoc": {
          "line": 448,
          "column": 5,
          "position": 3958
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/developer-experience/IDEPerformanceAnalyzer.ts",
        "start": 622,
        "end": 642,
        "startLoc": {
          "line": 622,
          "column": 16,
          "position": 5160
        },
        "endLoc": {
          "line": 642,
          "column": 6,
          "position": 5351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "function findWorkspaceRoot(): string {\n  let currentDir = process.cwd();\n\n  while (currentDir !== path.dirname(currentDir)) {\n    const packageJsonPath = path.join(currentDir, 'package.json');\n    const pnpmWorkspacePath = path.join(currentDir, 'pnpm-workspace.yaml');\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 124,
        "end": 131,
        "startLoc": {
          "line": 124,
          "column": 1,
          "position": 1005
        },
        "endLoc": {
          "line": 131,
          "column": 3,
          "position": 1087
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/typescript/test-runner.ts",
        "start": 26,
        "end": 33,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 221
        },
        "endLoc": {
          "line": 33,
          "column": 4,
          "position": 303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "();\n      }\n\n      // Display results\n      displayResults(report, options.verbose);\n\n      // Save to file if requested\n      if (options.output) {\n        const outputPath = path.resolve(options.output);\n        fs.writeFileSync(outputPath, JSON.stringify(report, null, 2));\n      }\n\n      // Exit with appropriate code\n      const hasErrors =\n        report.issues",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/import-optimizer-cli.ts",
        "start": 77,
        "end": 91,
        "startLoc": {
          "line": 77,
          "column": 20,
          "position": 621
        },
        "endLoc": {
          "line": 91,
          "column": 7,
          "position": 716
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 23,
          "position": 527
        },
        "endLoc": {
          "line": 77,
          "column": 19,
          "position": 621
        }
      }
    },
    {
      "format": "typescript",
      "lines": 60,
      "fragment": "}\n    } catch (_error) {\n      process.exit(1);\n    }\n  });\n\nprogram\n  .command('report')\n  .description('Generate a formatted report from analysis results')\n  .argument('<input>', 'Input JSON file with analysis results')\n  .option('-f, --format <format>', 'Output format (console, markdown, html)', 'console')\n  .option('-o, --output <file>', 'Output file for formatted report')\n  .action(async (input, options) => {\n    try {\n      const inputPath = path.resolve(input);\n      const reportData = JSON.parse(fs.readFileSync(inputPath, 'utf-8'));\n\n      let formattedReport: string;\n\n      switch (options.format) {\n        case 'markdown':\n          formattedReport = generateMarkdownReport(reportData);\n          break;\n        case 'html':\n          formattedReport = generateHtmlReport(reportData);\n          break;\n        default:\n          displayResults(reportData, true);\n          return;\n      }\n\n      if (options.output) {\n        fs.writeFileSync(options.output, formattedReport);\n      } else {\n      }\n    } catch (_error) {\n      process.exit(1);\n    }\n  });\n\nfunction findWorkspaceRoot(): string {\n  let currentDir = process.cwd();\n\n  while (currentDir !== path.dirname(currentDir)) {\n    const packageJsonPath = path.join(currentDir, 'package.json');\n    const pnpmWorkspacePath = path.join(currentDir, 'pnpm-workspace.yaml');\n\n    if (fs.existsSync(packageJsonPath) && fs.existsSync(pnpmWorkspacePath)) {\n      return currentDir;\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  throw new Error(\n    'Could not find workspace root (looking for package.json and pnpm-workspace.yaml)'\n  );\n}\n\nfunction displayResults(report: ImportOptimizationReport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/import-optimizer-cli.ts",
        "start": 115,
        "end": 174,
        "startLoc": {
          "line": 115,
          "column": 7,
          "position": 937
        },
        "endLoc": {
          "line": 174,
          "column": 25,
          "position": 1383
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 84,
        "end": 143,
        "startLoc": {
          "line": 84,
          "column": 7,
          "position": 715
        },
        "endLoc": {
          "line": 143,
          "column": 25,
          "position": 1161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Add other sections...\n\n  if (report.recommendations.length > 0) {\n    markdown += `## Recommendations\\n\\n`;\n    report.recommendations.forEach((rec, index) => {\n      markdown += `${index + 1}. ${rec}\\n`;\n    });\n  }\n\n  return markdown;\n}\n\nfunction generateHtmlReport(report: ImportOptimizationReport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/import-optimizer-cli.ts",
        "start": 245,
        "end": 257,
        "startLoc": {
          "line": 245,
          "column": 3,
          "position": 2240
        },
        "endLoc": {
          "line": 257,
          "column": 25,
          "position": 2330
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 222,
        "end": 234,
        "startLoc": {
          "line": 222,
          "column": 3,
          "position": 2021
        },
        "endLoc": {
          "line": 234,
          "column": 25,
          "position": 2111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "();\n      }\n\n      // Display results\n      displayResults(report, options.verbose);\n\n      // Save to file if requested\n      if (options.output) {\n        const outputPath = path.resolve(options.output);\n        fs.writeFileSync(outputPath, JSON.stringify(report, null, 2));\n      }\n\n      // Exit with appropriate code\n      const hasIssues",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/ide-performance-cli.ts",
        "start": 86,
        "end": 99,
        "startLoc": {
          "line": 86,
          "column": 23,
          "position": 665
        },
        "endLoc": {
          "line": 99,
          "column": 10,
          "position": 753
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 64,
        "end": 77,
        "startLoc": {
          "line": 64,
          "column": 23,
          "position": 527
        },
        "endLoc": {
          "line": 77,
          "column": 10,
          "position": 615
        }
      }
    },
    {
      "format": "typescript",
      "lines": 51,
      "fragment": ")\n  .option('-f, --format <format>', 'Output format (console, markdown, html)', 'console')\n  .option('-o, --output <file>', 'Output file for formatted report')\n  .action(async (input, options) => {\n    try {\n      const inputPath = path.resolve(input);\n      const reportData = JSON.parse(fs.readFileSync(inputPath, 'utf-8'));\n\n      let formattedReport: string;\n\n      switch (options.format) {\n        case 'markdown':\n          formattedReport = generateMarkdownReport(reportData);\n          break;\n        case 'html':\n          formattedReport = generateHtmlReport(reportData);\n          break;\n        default:\n          displayResults(reportData, true);\n          return;\n      }\n\n      if (options.output) {\n        fs.writeFileSync(options.output, formattedReport);\n      } else {\n      }\n    } catch (_error) {\n      process.exit(1);\n    }\n  });\n\nfunction findWorkspaceRoot(): string {\n  let currentDir = process.cwd();\n\n  while (currentDir !== path.dirname(currentDir)) {\n    const packageJsonPath = path.join(currentDir, 'package.json');\n    const pnpmWorkspacePath = path.join(currentDir, 'pnpm-workspace.yaml');\n\n    if (fs.existsSync(packageJsonPath) && fs.existsSync(pnpmWorkspacePath)) {\n      return currentDir;\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  throw new Error(\n    'Could not find workspace root (looking for package.json and pnpm-workspace.yaml)'\n  );\n}\n\nfunction displayResults(report: IDEPerformanceReport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/ide-performance-cli.ts",
        "start": 116,
        "end": 166,
        "startLoc": {
          "line": 116,
          "column": 42,
          "position": 908
        },
        "endLoc": {
          "line": 166,
          "column": 21,
          "position": 1299
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 93,
        "end": 143,
        "startLoc": {
          "line": 93,
          "column": 40,
          "position": 770
        },
        "endLoc": {
          "line": 143,
          "column": 25,
          "position": 1161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "if (report.recommendations.length > 0) {\n    markdown += `## Recommendations\\n\\n`;\n    report.recommendations.forEach((rec, index) => {\n      markdown += `${index + 1}. ${rec}\\n`;\n    });\n  }\n\n  return markdown;\n}\n\nfunction generateHtmlReport(report: IDEPerformanceReport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/ide-performance-cli.ts",
        "start": 234,
        "end": 244,
        "startLoc": {
          "line": 234,
          "column": 3,
          "position": 2015
        },
        "endLoc": {
          "line": 244,
          "column": 21,
          "position": 2101
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/cli/typescript-analyzer-cli.ts",
        "start": 224,
        "end": 234,
        "startLoc": {
          "line": 224,
          "column": 3,
          "position": 2025
        },
        "endLoc": {
          "line": 234,
          "column": 25,
          "position": 2111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= 0;\n    let inString = false;\n    let stringChar = '';\n\n    for (let i = startIndex; i < content.length; i++) {\n      const char = content[i];\n      const prevChar = i > 0 ? content[i - 1] : '';\n\n      if (!inString) {\n        if (char === '\"' || char === \"'\" || char === '`') {\n          inString = true;\n          stringChar = char;\n        } else if (char === '{' ||",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 286,
        "end": 298,
        "startLoc": {
          "line": 286,
          "column": 2,
          "position": 2550
        },
        "endLoc": {
          "line": 298,
          "column": 3,
          "position": 2716
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 257,
        "end": 269,
        "startLoc": {
          "line": 257,
          "column": 2,
          "position": 2246
        },
        "endLoc": {
          "line": 269,
          "column": 2,
          "position": 2411
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "for (const packagePath of this.packagePaths) {\n      const packageName = await this.getPackageName(packagePath);\n      const srcPath = path.join(packagePath, 'src');\n      const files = await this.getTypeScriptFiles(srcPath);\n\n      for (const filePath of files) {\n        try {\n          const content = await fs.readFile(filePath, 'utf-8');\n          const relativeFilePath = path.relative(this.workspaceRoot, filePath);\n          const fileIssues",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 602,
        "end": 611,
        "startLoc": {
          "line": 602,
          "column": 5,
          "position": 5476
        },
        "endLoc": {
          "line": 611,
          "column": 11,
          "position": 5608
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 143,
        "end": 152,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1160
        },
        "endLoc": {
          "line": 152,
          "column": 6,
          "position": 1292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 40,
      "fragment": "();\n  }\n\n  private async discoverPackages(): Promise<string[]> {\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n    const packages: string[] = [];\n\n    try {\n      // Main packages\n      const mainPackages = await fs.readdir(packagesDir);\n      for (const pkg of mainPackages) {\n        const pkgPath = path.join(packagesDir, pkg);\n        const stat = await fs.stat(pkgPath);\n        if (stat.isDirectory() && pkg !== '@reporunner') {\n          packages.push(pkgPath);\n        }\n      }\n\n      // @reporunner scoped packages\n      const scopedDir = path.join(packagesDir, '@reporunner');\n      try {\n        const scopedPackages = await fs.readdir(scopedDir);\n        for (const pkg of scopedPackages) {\n          const pkgPath = path.join(scopedDir, pkg);\n          const stat = await fs.stat(pkgPath);\n          if (stat.isDirectory()) {\n            packages.push(pkgPath);\n          }\n        }\n      } catch (_error) {\n        // @reporunner directory might not exist\n      }\n\n      return packages;\n    } catch (_error) {\n      return [];\n    }\n  }\n\n  async",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/dependency-analyzer.ts",
        "start": 26,
        "end": 65,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 189
        },
        "endLoc": {
          "line": 65,
          "column": 6,
          "position": 536
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 29,
        "end": 68,
        "startLoc": {
          "line": 29,
          "column": 21,
          "position": 237
        },
        "endLoc": {
          "line": 68,
          "column": 8,
          "position": 584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n  }\n\n  private async getPackageName(packagePath: string): Promise<string> {\n    try {\n      const packageJsonPath = path.join(packagePath, 'package.json');\n      const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf-8'));\n      return packageJson.name || path.basename(packagePath);\n    } catch (_error) {\n      return path.basename(packagePath);\n    }\n  }\n\n  private async",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/dependency-analyzer.ts",
        "start": 194,
        "end": 207,
        "startLoc": {
          "line": 194,
          "column": 10,
          "position": 1625
        },
        "endLoc": {
          "line": 207,
          "column": 6,
          "position": 1749
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 824,
        "end": 837,
        "startLoc": {
          "line": 824,
          "column": 6,
          "position": 7395
        },
        "endLoc": {
          "line": 837,
          "column": 27,
          "position": 7519
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "];\n\n    try {\n      const entries = await fs.readdir(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (entry.isDirectory())",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/dependency-analyzer.ts",
        "start": 530,
        "end": 538,
        "startLoc": {
          "line": 530,
          "column": 2,
          "position": 4399
        },
        "endLoc": {
          "line": 538,
          "column": 2,
          "position": 4481
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 805,
        "end": 813,
        "startLoc": {
          "line": 805,
          "column": 7,
          "position": 7184
        },
        "endLoc": {
          "line": 813,
          "column": 3,
          "position": 7267
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": "{\n  private workspaceRoot: string;\n  private packagePaths: string[];\n\n  constructor(workspaceRoot: string = process.cwd()) {\n    this.workspaceRoot = workspaceRoot;\n    this.packagePaths = [];\n  }\n\n  async initialize(): Promise<void> {\n    this.packagePaths = await this.discoverPackages();\n  }\n\n  private async discoverPackages(): Promise<string[]> {\n    const packagesDir = path.join(this.workspaceRoot, 'packages');\n    const packages: string[] = [];\n\n    try {\n      // Main packages\n      const mainPackages = await fs.readdir(packagesDir);\n      for (const pkg of mainPackages) {\n        const pkgPath = path.join(packagesDir, pkg);\n        const stat = await fs.stat(pkgPath);\n        if (stat.isDirectory() && pkg !== '@reporunner') {\n          packages.push(pkgPath);\n        }\n      }\n\n      // @reporunner scoped packages\n      const scopedDir = path.join(packagesDir, '@reporunner');\n      try {\n        const scopedPackages = await fs.readdir(scopedDir);\n        for (const pkg of scopedPackages) {\n          const pkgPath = path.join(scopedDir, pkg);\n          const stat = await fs.stat(pkgPath);\n          if (stat.isDirectory()) {\n            packages.push(pkgPath);\n          }\n        }\n      } catch (_error) {\n        // @reporunner directory might not exist\n      }\n\n      return packages;\n    } catch (_error) {\n      return [];\n    }\n  }\n\n  async validateCodeOrganization",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 15,
        "end": 64,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 91
        },
        "endLoc": {
          "line": 64,
          "column": 25,
          "position": 534
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/dependency-analyzer.ts",
        "start": 16,
        "end": 65,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 95
        },
        "endLoc": {
          "line": 65,
          "column": 26,
          "position": 538
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "[] = [];\n\n    for (const packagePath of this.packagePaths) {\n      const srcPath = path.join(packagePath, 'src');\n      const files = await this.getSourceFiles(srcPath);\n\n      for (const filePath of files) {\n        try {\n          const content = await fs.readFile(filePath, 'utf-8');\n          const relativeFilePath",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 485,
        "end": 494,
        "startLoc": {
          "line": 485,
          "column": 16,
          "position": 4134
        },
        "endLoc": {
          "line": 494,
          "column": 17,
          "position": 4240
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 378,
        "end": 387,
        "startLoc": {
          "line": 378,
          "column": 16,
          "position": 3175
        },
        "endLoc": {
          "line": 387,
          "column": 6,
          "position": 3281
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n  }\n\n  private async getPackageName(packagePath: string): Promise<string> {\n    try {\n      const packageJsonPath = path.join(packagePath, 'package.json');\n      const packageJson = JSON.parse(await fs.readFile(packageJsonPath, 'utf-8'));\n      return packageJson.name || path.basename(packagePath);\n    } catch (_error) {\n      return path.basename(packagePath);\n    }\n  }\n\n  private async countSourceFiles",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 693,
        "end": 706,
        "startLoc": {
          "line": 693,
          "column": 16,
          "position": 5848
        },
        "endLoc": {
          "line": 706,
          "column": 17,
          "position": 5974
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 824,
        "end": 207,
        "startLoc": {
          "line": 824,
          "column": 6,
          "position": 7395
        },
        "endLoc": {
          "line": 207,
          "column": 23,
          "position": 1751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "];\n\n    try {\n      const entries = await fs.readdir(dir, { withFileTypes: true });\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name);\n\n        if (entry.isDirectory() && !entry.name.startsWith('.') && entry.name !== 'node_modules') {\n          const subFiles = await this.getSourceFiles",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 718,
        "end": 727,
        "startLoc": {
          "line": 718,
          "column": 7,
          "position": 6119
        },
        "endLoc": {
          "line": 727,
          "column": 15,
          "position": 6238
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 805,
        "end": 814,
        "startLoc": {
          "line": 805,
          "column": 7,
          "position": 7184
        },
        "endLoc": {
          "line": 814,
          "column": 19,
          "position": 7303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(fullPath);\n          files.push(...subFiles);\n        } else if (entry.isFile() && extensions.some((ext) => entry.name.endsWith(ext))) {\n          files.push(fullPath);\n        }\n      }\n    } catch (_error) {\n      // Directory might not exist or be accessible\n    }\n\n    return files;\n  }\n\n  private calculateOverallScore",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/code-organization-checker.ts",
        "start": 727,
        "end": 740,
        "startLoc": {
          "line": 727,
          "column": 15,
          "position": 6239
        },
        "endLoc": {
          "line": 740,
          "column": 22,
          "position": 6339
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/validation/src/architecture/type-safety-validator.ts",
        "start": 814,
        "end": 827,
        "startLoc": {
          "line": 814,
          "column": 19,
          "position": 7304
        },
        "endLoc": {
          "line": 827,
          "column": 6,
          "position": 7404
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(\n    name: string,\n    config: unknown\n  ): {\n    success: boolean;\n    data?: unknown;\n    errors?: Array<{ message?: string; path?: string; code?: string }>;\n  } {\n    const schema = this.schemas.get(name) || this.schemas.get('base');\n\n    if (!schema) {\n      return {\n        success: false,\n        errors: [{ message: `No schema found for ${name}` }],\n      };\n    }\n\n    try {\n      // Cast schema to ZodObject to access .partial() method",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/config/configuration-schema.ts",
        "start": 271,
        "end": 289,
        "startLoc": {
          "line": 271,
          "column": 16,
          "position": 2814
        },
        "endLoc": {
          "line": 289,
          "column": 56,
          "position": 2973
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/config/configuration-schema.ts",
        "start": 230,
        "end": 248,
        "startLoc": {
          "line": 230,
          "column": 9,
          "position": 2457
        },
        "endLoc": {
          "line": 248,
          "column": 6,
          "position": 2616
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ".parse(config);\n      return { success: true, data };\n    } catch (error: unknown) {\n      if (error instanceof z.ZodError) {\n        return {\n          success: false,\n          errors: error.issues.map((e: z.ZodIssue) => ({\n            path: e.path.join('.'),\n            message: e.message,\n            code: e.code,\n          })),\n        };\n      }\n      return {\n        success: false,\n        errors: [{ message: error instanceof Error ? error.message : 'Unknown error' }],\n      };\n    }\n  }\n\n  /**\n   * Get schema\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/config/configuration-schema.ts",
        "start": 291,
        "end": 313,
        "startLoc": {
          "line": 291,
          "column": 14,
          "position": 3010
        },
        "endLoc": {
          "line": 313,
          "column": 6,
          "position": 3197
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/config/configuration-schema.ts",
        "start": 248,
        "end": 270,
        "startLoc": {
          "line": 248,
          "column": 7,
          "position": 2623
        },
        "endLoc": {
          "line": 270,
          "column": 6,
          "position": 2810
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "private async executeWithRetry<T>(\n    fn: () => Promise<T>,\n    maxRetries: number = 3,\n    delay: number = 1000\n  ): Promise<T> {\n    let lastError: unknown;\n\n    for (let attempt = 0; attempt <= maxRetries; attempt++) {\n      try {\n        return await fn();\n      } catch (error:",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/base/base-integration.ts",
        "start": 302,
        "end": 312,
        "startLoc": {
          "line": 302,
          "column": 3,
          "position": 2203
        },
        "endLoc": {
          "line": 312,
          "column": 2,
          "position": 2318
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/integrations/src/webhook/webhook-manager.ts",
        "start": 263,
        "end": 273,
        "startLoc": {
          "line": 263,
          "column": 3,
          "position": 2119
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2234
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "[]> {\n    const userAssignments = this.userRoleAssignments.get(userId) || [];\n    const activeAssignments = userAssignments.filter(\n      (assignment) =>\n        assignment.isActive &&\n        (!assignment.expiresAt || assignment.expiresAt > new Date()) &&\n        (!organizationId || assignment.organizationId === organizationId)\n    );\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac/advanced-rbac.ts",
        "start": 638,
        "end": 647,
        "startLoc": {
          "line": 638,
          "column": 5,
          "position": 4606
        },
        "endLoc": {
          "line": 647,
          "column": 7,
          "position": 4706
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac/advanced-rbac.ts",
        "start": 595,
        "end": 604,
        "startLoc": {
          "line": 595,
          "column": 11,
          "position": 4215
        },
        "endLoc": {
          "line": 604,
          "column": 6,
          "position": 4315
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  createdBy: z.string(),\n  metadata: z.record(z.string(), z.unknown()).optional(),\n});\n\nexport type Tenant",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/multi-tenant/tenant-manager.ts",
        "start": 73,
        "end": 80,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 876
        },
        "endLoc": {
          "line": 80,
          "column": 7,
          "position": 948
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/enterprise/src/rbac/advanced-rbac.ts",
        "start": 49,
        "end": 56,
        "startLoc": {
          "line": 49,
          "column": 5,
          "position": 394
        },
        "endLoc": {
          "line": 56,
          "column": 5,
          "position": 466
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(schema: SchemaDefinition) {\n  return (_target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    const methodName = propertyKey;\n    const validator = new SchemaValidator(schema);\n\n    descriptor.value = async function (...args: any[]) {\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/validation.ts",
        "start": 55,
        "end": 62,
        "startLoc": {
          "line": 55,
          "column": 15,
          "position": 504
        },
        "endLoc": {
          "line": 62,
          "column": 6,
          "position": 601
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/validation.ts",
        "start": 29,
        "end": 36,
        "startLoc": {
          "line": 29,
          "column": 14,
          "position": 273
        },
        "endLoc": {
          "line": 36,
          "column": 4,
          "position": 370
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(logger?: Logger) {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    const className = target.constructor.name;\n\n    descriptor.value = async function (...args: any[]) {\n      const methodLogger = logger || new Logger(`${className}:${propertyKey}`);\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/core.ts",
        "start": 28,
        "end": 35,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 255
        },
        "endLoc": {
          "line": 35,
          "column": 6,
          "position": 369
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/core.ts",
        "start": 4,
        "end": 12,
        "startLoc": {
          "line": 4,
          "column": 4,
          "position": 21
        },
        "endLoc": {
          "line": 12,
          "column": 4,
          "position": 136
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n  return (_target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    const methodName = propertyKey;\n\n    descriptor.value = async function (...args: any[]) {\n      const user = (this as any).currentUser || args[0]?.user;\n\n      if (!user) {\n        throw new AuthenticationError('No authenticated user found');\n      }\n\n      if (!user.permissions",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 30,
        "end": 42,
        "startLoc": {
          "line": 30,
          "column": 7,
          "position": 269
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 406
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 4,
        "end": 16,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 31
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 168
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= propertyKey;\n\n    descriptor.value = async function (...args: any[]) {\n      const user = (this as any).currentUser || args[0]?.user;\n\n      if (!user) {\n        throw new AuthenticationError('No authenticated user found');\n      }\n\n      // Extract resource ID from args using the path",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 59,
        "end": 68,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 539
        },
        "endLoc": {
          "line": 68,
          "column": 48,
          "position": 623
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 7,
        "end": 16,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 78
        },
        "endLoc": {
          "line": 16,
          "column": 3,
          "position": 162
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": string) {\n  return (_target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    const methodName = propertyKey;\n\n    descriptor.value = async function (...args: any[]) {\n      const user = (this as any).currentUser || args[0]?.user;\n\n      if (!user) {\n        throw new AuthenticationError('No authenticated user found');\n      }\n\n      // Extract action from method name or args",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 94,
        "end": 106,
        "startLoc": {
          "line": 94,
          "column": 9,
          "position": 816
        },
        "endLoc": {
          "line": 106,
          "column": 43,
          "position": 950
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 30,
        "end": 16,
        "startLoc": {
          "line": 30,
          "column": 11,
          "position": 266
        },
        "endLoc": {
          "line": 16,
          "column": 3,
          "position": 162
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ") {\n  return (_target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n    const _methodName = propertyKey;\n\n    descriptor.value = async function (...args: any[]) {\n      const user = (this as any).currentUser || args[0]?.user;\n\n      if (!user) {\n        throw new AuthenticationError('No authenticated user found');\n      }\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 124,
        "end": 136,
        "startLoc": {
          "line": 124,
          "column": 7,
          "position": 1087
        },
        "endLoc": {
          "line": 136,
          "column": 6,
          "position": 1218
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/core/src/decorators/auth.ts",
        "start": 56,
        "end": 16,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 492
        },
        "endLoc": {
          "line": 16,
          "column": 3,
          "position": 162
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ");\n      const duration = Date.now() - startTime;\n\n      if (testCase.expectedOutput) {\n        const isMatch = JSON.stringify(actualOutput) === JSON.stringify(testCase.expectedOutput);\n\n        if (!isMatch) {\n          return {\n            testCaseId: testCase.id,\n            status: 'failed',\n            duration,\n            actualOutput,\n            assertion: 'Output does not match expected',\n          };\n        }\n      }\n\n      return {\n        testCaseId: testCase.id,\n        status: 'passed',\n        duration,\n        actualOutput,\n      };\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      const errorMessage = error instanceof Error ? error.message : String(error);\n\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/testing.ts",
        "start": 164,
        "end": 191,
        "startLoc": {
          "line": 164,
          "column": 8,
          "position": 1502
        },
        "endLoc": {
          "line": 191,
          "column": 7,
          "position": 1710
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/dev-tools/testing.ts",
        "start": 43,
        "end": 70,
        "startLoc": {
          "line": 43,
          "column": 6,
          "position": 341
        },
        "endLoc": {
          "line": 70,
          "column": 3,
          "position": 549
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "function createNodeCommand(): Command {\n  return new Command('create')\n    .description('Create a new node')\n    .option('-n, --name <name>', 'Node name')\n    .option('-c, --category <category>', 'Node category')\n    .option('-t, --template <template>', 'Template to use', 'basic')\n    .option('--skip-install', 'Skip dependency installation')\n    .action(async (options) => {\n      const spinner",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 20,
        "end": 28,
        "startLoc": {
          "line": 20,
          "column": 1,
          "position": 178
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 266
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-handlers.ts",
        "start": 9,
        "end": 17,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 73
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 51,
      "fragment": "{\n      const spinner = ora('Creating node...').start();\n\n      try {\n        // Get node details\n        const answers = await inquirer.prompt([\n          {\n            type: 'input',\n            name: 'name',\n            message: 'Node name:',\n            when: !options.name,\n            validate: (input) => input.length > 0 || 'Node name is required',\n          },\n          {\n            type: 'list',\n            name: 'category',\n            message: 'Select category:',\n            when: !options.category,\n            choices: [\n              'Communication',\n              'Data Storage',\n              'AI/ML',\n              'Analytics',\n              'Developer Tools',\n              'Finance',\n              'Marketing',\n              'Productivity',\n              'Social Media',\n              'E-commerce',\n              'Other',\n            ],\n          },\n          {\n            type: 'list',\n            name: 'template',\n            message: 'Select template:',\n            when: !options.template || options.template === 'basic',\n            choices: [\n              { name: 'Basic Node (Simple API call)', value: 'basic' },\n              { name: 'OAuth Node (OAuth authentication)', value: 'oauth' },\n              { name: 'Webhook Node (Webhook trigger)', value: 'webhook' },\n              { name: 'AI Node (AI/ML integration)', value: 'ai' },\n              { name: 'Database Node (Database operations)', value: 'database' },\n              { name: 'File Node (File operations)', value: 'file' },\n            ],\n          },\n          {\n            type: 'input',\n            name: 'description',\n            message: 'Node description:',\n            default: (answers: any",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 27,
        "end": 77,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 261
        },
        "endLoc": {
          "line": 77,
          "column": 4,
          "position": 649
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-setup.ts",
        "start": 26,
        "end": 76,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 203
        },
        "endLoc": {
          "line": 76,
          "column": 16,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 46,
      "fragment": ") => `${answers.name || options.name} integration for Reporunner`,\n          },\n          {\n            type: 'input',\n            name: 'author',\n            message: 'Author name:',\n            default: 'Reporunner Team',\n          },\n          {\n            type: 'confirm',\n            name: 'addCredentials',\n            message: 'Does this node require credentials?',\n            default: true,\n          },\n          {\n            type: 'checkbox',\n            name: 'credentialTypes',\n            message: 'Select credential types:',\n            when: (answers) => answers.addCredentials,\n            choices: [\n              { name: 'API Key', value: 'apiKey' },\n              { name: 'OAuth2', value: 'oauth2' },\n              { name: 'Basic Auth', value: 'basic' },\n              { name: 'Bearer Token', value: 'bearer' },\n              { name: 'Custom', value: 'custom' },\n            ],\n          },\n        ]);\n\n        const nodeName = options.name || answers.name;\n        const category = options.category || answers.category;\n        const template = options.template || answers.template || 'basic';\n\n        spinner.text = `Creating ${nodeName} node...`;\n\n        // Create node directory\n        const nodeDir = join(\n          process.cwd(),\n          'nodes',\n          category.toLowerCase(),\n          nodeName.toLowerCase()\n        );\n        ensureDirSync(nodeDir);\n\n        // Generate node files\n        await",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 77,
        "end": 122,
        "startLoc": {
          "line": 77,
          "column": 4,
          "position": 650
        },
        "endLoc": {
          "line": 122,
          "column": 6,
          "position": 1015
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-setup.ts",
        "start": 76,
        "end": 117,
        "startLoc": {
          "line": 76,
          "column": 16,
          "position": 592
        },
        "endLoc": {
          "line": 117,
          "column": 6,
          "position": 951
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "await generateNodeFiles(nodeDir, {\n          ...answers,\n          name: nodeName,\n          category,\n          template,\n        });\n\n        spinner.succeed(chalk.green(`✅ Node '${nodeName}' created successfully!`));\n\n        if (!options.skipInstall) {\n          const installSpinner = ora('Installing dependencies...').start();\n          try {\n            await execAsync('pnpm install', { cwd: nodeDir });\n            installSpinner.succeed(chalk.green('Dependencies installed'));\n          } catch (_error) {\n            installSpinner.fail(chalk.red('Failed to install dependencies'));\n          }\n        }\n      } catch (_error) {\n        spinner.fail(chalk.red('Failed to create node'));\n        process.exit(1);\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 122,
        "end": 144,
        "startLoc": {
          "line": 122,
          "column": 9,
          "position": 1015
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1205
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-setup.ts",
        "start": 118,
        "end": 140,
        "startLoc": {
          "line": 118,
          "column": 5,
          "position": 970
        },
        "endLoc": {
          "line": 140,
          "column": 2,
          "position": 1159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "function testNodeCommand(): Command {\n  return new Command('test')\n    .description('Test a node')\n    .option('-n, --name <name>', 'Node name')\n    .option('-d, --data <data>', 'Test data JSON')\n    .action(async (_options) => {\n      const spinner = ora('Running node tests...').start();\n\n      try {\n        // Implementation for testing nodes\n        spinner.succeed(chalk.green('Tests passed!'));\n      } catch (_error) {\n        spinner.fail(chalk.red('Tests failed'));\n        process.exit(1);\n      }\n    });\n}\n\nfunction",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 147,
        "end": 165,
        "startLoc": {
          "line": 147,
          "column": 1,
          "position": 1212
        },
        "endLoc": {
          "line": 165,
          "column": 9,
          "position": 1359
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-handlers.ts",
        "start": 22,
        "end": 40,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 196
        },
        "endLoc": {
          "line": 40,
          "column": 7,
          "position": 343
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "function buildNodeCommand(): Command {\n  return new Command('build')\n    .description('Build a node')\n    .option('-n, --name <name>', 'Node name')\n    .option('-w, --watch', 'Watch for changes')\n    .action(async (options) => {\n      const spinner = ora('Building node...').start();\n\n      try {\n        const command = options.watch ? 'pnpm build:watch' : 'pnpm build';\n        await execAsync(command);\n        spinner.succeed(chalk.green('Node built successfully!'));\n      } catch (_error) {\n        spinner.fail(chalk.red('Build failed'));\n        process.exit(1);\n      }\n    });\n}\n\nfunction",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 165,
        "end": 184,
        "startLoc": {
          "line": 165,
          "column": 1,
          "position": 1359
        },
        "endLoc": {
          "line": 184,
          "column": 9,
          "position": 1532
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-handlers.ts",
        "start": 40,
        "end": 59,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 345
        },
        "endLoc": {
          "line": 59,
          "column": 7,
          "position": 518
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "function validateNodeCommand(): Command {\n  return new Command('validate')\n    .description('Validate a node definition')\n    .option('-n, --name <name>', 'Node name')\n    .action(async (_options) => {\n      const spinner = ora('Validating node...').start();\n\n      try {\n        // Implementation for validating nodes\n        spinner.succeed(chalk.green('Node is valid!'));\n      } catch (_error) {\n        spinner.fail(chalk.red('Validation failed'));\n        process.exit(1);\n      }\n    });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 184,
        "end": 199,
        "startLoc": {
          "line": 184,
          "column": 1,
          "position": 1532
        },
        "endLoc": {
          "line": 199,
          "column": 2,
          "position": 1666
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/command-handlers.ts",
        "start": 59,
        "end": 74,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 520
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 654
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "writeFileSync(join(nodeDir, 'package.json'), Mustache.render(packageJsonTemplate, data));\n\n  writeFileSync(join(nodeDir, 'src/index.ts'), Mustache.render(nodeTemplate, data));\n\n  writeFileSync(join(nodeDir, 'src/credentials.ts'), Mustache.render(credentialsTemplate, data));\n\n  writeFileSync(join(nodeDir, 'src/properties.ts'), Mustache.render(propertiesTemplate, data));\n\n  writeFileSync(join(nodeDir, 'README.md'), Mustache.render(readmeTemplate, data));\n\n  writeFileSync(join(nodeDir, 'tsconfig.json'), tsConfigTemplate);\n\n  /",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node.ts",
        "start": 296,
        "end": 308,
        "startLoc": {
          "line": 296,
          "column": 3,
          "position": 1801
        },
        "endLoc": {
          "line": 308,
          "column": 2,
          "position": 1943
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/cli/src/commands/node/file-generation.ts",
        "start": 107,
        "end": 113,
        "startLoc": {
          "line": 107,
          "column": 3,
          "position": 240
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 375
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") {\n    return async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {\n      try {\n        if (!req.userId) {\n          res.status(401).json({ error: 'Not authenticated' });\n          return;\n        }\n\n        const userRoleIds = await config.getUserRoles(req.userId);\n        const userRoles = config.roles.filter((role) => userRoleIds.includes(role.id));\n        const hasRequiredRole",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/middleware/rbac-middleware.ts",
        "start": 59,
        "end": 69,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 534
        },
        "endLoc": {
          "line": 69,
          "column": 16,
          "position": 670
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/auth/src/middleware/rbac-middleware.ts",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 11,
          "position": 175
        },
        "endLoc": {
          "line": 33,
          "column": 14,
          "position": 312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= z.object({\n  id: z.string(),\n  type: z.string(),\n  position: z.object({\n    x: z.number(),\n    y: z.number(),\n  }),\n  data: z.record(z.string(), z.any()).",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/types/workflow.ts",
        "start": 20,
        "end": 27,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 76
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 164
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/validators/workflowValidators.ts",
        "start": 18,
        "end": 25,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 135
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= z.object({\n  id: z.string(),\n  source: z.string(),\n  target: z.string(),\n  sourceHandle: z.string().optional(),\n  targetHandle: z.string().optional(),\n  type",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/types/workflow.ts",
        "start": 38,
        "end": 44,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 282
        },
        "endLoc": {
          "line": 44,
          "column": 5,
          "position": 354
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/workflows/validators/workflowValidators.ts",
        "start": 29,
        "end": 35,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 236
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\n  id: string;\n  workflowId: string;\n  userId: string;\n  status: 'pending' | 'running' | 'success' | 'error' | 'cancelled';\n  startedAt: Date;\n  completedAt?: Date;\n  executedNodes: string[];\n  currentNode?: string;\n  results: Map<string, any>;\n  error?: string;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/types/workflow.ts",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 143
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 242
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/domains/executions/interfaces/index.ts",
        "start": 5,
        "end": 16,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 9
        },
        "endLoc": {
          "line": 16,
          "column": 9,
          "position": 109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateExecutionId(): string {\n    return `exec_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\n// Singleton instance\nexport const triggerSystemService",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/TriggerSystemService.ts",
        "start": 598,
        "end": 607,
        "startLoc": {
          "line": 598,
          "column": 8,
          "position": 4923
        },
        "endLoc": {
          "line": 607,
          "column": 21,
          "position": 5017
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/WorkflowSchedulerService.ts",
        "start": 436,
        "end": 445,
        "startLoc": {
          "line": 436,
          "column": 11,
          "position": 3514
        },
        "endLoc": {
          "line": 445,
          "column": 25,
          "position": 3608
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "): Promise<void> {\n    try {\n      const monitoringState = this.activeExecutions.get(executionId);\n      if (!monitoringState) {\n        return;\n      }\n\n      if (monitoringState.nodeStates?.[nodeId]) {\n        monitoringState.nodeStates[nodeId] = {\n          ...monitoringState.nodeStates[nodeId],\n          executionStatus: 'error'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/ExecutionMonitoringService.ts",
        "start": 242,
        "end": 252,
        "startLoc": {
          "line": 242,
          "column": 6,
          "position": 1778
        },
        "endLoc": {
          "line": 252,
          "column": 8,
          "position": 1870
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/ExecutionMonitoringService.ts",
        "start": 200,
        "end": 210,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1456
        },
        "endLoc": {
          "line": 210,
          "column": 10,
          "position": 1548
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "): Promise<void> {\n    const workflowId = this.socketToWorkflow.get(socketId);\n    const userId = this.socketToUser.get(socketId);\n\n    if (!(workflowId && userId)) {\n      return;\n    }\n\n    const workflowUsers = this.workflowPresence.get(workflowId);\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 214,
        "end": 223,
        "startLoc": {
          "line": 214,
          "column": 15,
          "position": 1488
        },
        "endLoc": {
          "line": 223,
          "column": 6,
          "position": 1575
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 175,
        "end": 184,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1225
        },
        "endLoc": {
          "line": 184,
          "column": 3,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "): Promise<void> {\n    const workflowId = this.socketToWorkflow.get(socketId);\n    const userId = this.socketToUser.get(socketId);\n\n    if (!(workflowId && userId)) {\n      return;\n    }\n\n    const workflowUsers = this.workflowPresence.get(workflowId);\n    const userPresence = workflowUsers?.get(userId);\n\n    if (userPresence) {\n      userPresence.selection",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 255,
        "end": 267,
        "startLoc": {
          "line": 255,
          "column": 3,
          "position": 1770
        },
        "endLoc": {
          "line": 267,
          "column": 10,
          "position": 1885
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 175,
        "end": 226,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1225
        },
        "endLoc": {
          "line": 226,
          "column": 7,
          "position": 1603
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "]\n  ): Promise<void> {\n    const workflowId = this.socketToWorkflow.get(socketId);\n    const userId = this.socketToUser.get(socketId);\n\n    if (!(workflowId && userId)) {\n      return;\n    }\n\n    const workflowUsers = this.workflowPresence.get(workflowId);\n    const userPresence = workflowUsers?.get(userId);\n\n    if (userPresence) {\n      userPresence.activeArea",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 294,
        "end": 307,
        "startLoc": {
          "line": 294,
          "column": 13,
          "position": 2026
        },
        "endLoc": {
          "line": 307,
          "column": 11,
          "position": 2144
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 254,
        "end": 226,
        "startLoc": {
          "line": 254,
          "column": 12,
          "position": 1767
        },
        "endLoc": {
          "line": 226,
          "column": 7,
          "position": 1603
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    excludeSocketId?: string\n  ): void {\n    if (!this.io) {\n      return;\n    }\n\n    const room = `workflow-${workflowId}`;\n    if (excludeSocketId) {\n      this.io.to(room).except(excludeSocketId).emit(event",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CollaborationService.ts",
        "start": 654,
        "end": 663,
        "startLoc": {
          "line": 654,
          "column": 4,
          "position": 4807
        },
        "endLoc": {
          "line": 663,
          "column": 6,
          "position": 4884
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/services/CursorTrackingService.ts",
        "start": 480,
        "end": 489,
        "startLoc": {
          "line": 480,
          "column": 14,
          "position": 3490
        },
        "endLoc": {
          "line": 489,
          "column": 17,
          "position": 3567
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: result.error,\n      });\n    }\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Webhook processing failed'",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/triggers.ts",
        "start": 264,
        "end": 275,
        "startLoc": {
          "line": 264,
          "column": 5,
          "position": 2097
        },
        "endLoc": {
          "line": 275,
          "column": 28,
          "position": 2195
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/triggers.ts",
        "start": 183,
        "end": 194,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1494
        },
        "endLoc": {
          "line": 194,
          "column": 29,
          "position": 1592
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n  authenticate,\n  asyncHandler(async (req, res) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: 'Authentication required',\n      });\n    }\n\n    const { pluginId } = req.params;\n    const { rating",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/marketplace.ts",
        "start": 383,
        "end": 394,
        "startLoc": {
          "line": 383,
          "column": 28,
          "position": 2421
        },
        "endLoc": {
          "line": 394,
          "column": 7,
          "position": 2513
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/marketplace.ts",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 30,
          "position": 1286
        },
        "endLoc": {
          "line": 220,
          "column": 8,
          "position": 1378
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "().optional(),\n  limit: z.number().min(1).max(1000).default(100),\n  offset: z.number().min(0).default(0),\n});\n\n/**\n * GET /api/audit/events\n * Query audit events\n */",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/audit.ts",
        "start": 28,
        "end": 36,
        "startLoc": {
          "line": 28,
          "column": 9,
          "position": 254
        },
        "endLoc": {
          "line": 36,
          "column": 4,
          "position": 314
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/routes/schedules.ts",
        "start": 276,
        "end": 281,
        "startLoc": {
          "line": 276,
          "column": 7,
          "position": 2073
        },
        "endLoc": {
          "line": 281,
          "column": 6,
          "position": 2135
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= new Schema(\n  {\n    id: { type: String, required: true },\n    type: { type: String, required: true },\n    position: {\n      x: { type: Number, required: true },\n      y: { type: Number, required: true },\n    },\n    data: {\n      label: {",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/models/Workflow.ts",
        "start": 76,
        "end": 85,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 569
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 679
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/database/mongodb/schemas/workflow.schema.ts",
        "start": 52,
        "end": 60,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 399
        },
        "endLoc": {
          "line": 60,
          "column": 7,
          "position": 507
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n  startTime?: Date;\n  endTime?: Date;\n  duration?: number;\n  input?: Record<string, any>;\n  output?: Record<string, any>;\n  error?: {\n    message: string;\n    stack?: string;\n    code?: string;\n  };\n  retryAttempt: number;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/models/Execution.ts",
        "start": 6,
        "end": 20,
        "startLoc": {
          "line": 6,
          "column": 10,
          "position": 65
        },
        "endLoc": {
          "line": 20,
          "column": 7,
          "position": 163
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/@reporunner/workflow/src/engine/types/execution-types.ts",
        "start": 30,
        "end": 44,
        "startLoc": {
          "line": 30,
          "column": 11,
          "position": 184
        },
        "endLoc": {
          "line": 44,
          "column": 32,
          "position": 282
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\n    requestId: req.id,\n    method: req.method,\n    url: req.originalUrl,\n    userAgent: req.get('User-Agent'),\n    ip: req.ip,\n    userId: (req as any).user?.id,\n  });\n\n  // Log detailed request information",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/debugging.ts",
        "start": 144,
        "end": 153,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1059
        },
        "endLoc": {
          "line": 153,
          "column": 36,
          "position": 1134
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/debugging.ts",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 731
        },
        "endLoc": {
          "line": 111,
          "column": 40,
          "position": 806
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ") => {\n    return async (req: Request, _res: Response, next: NextFunction): Promise<void> => {\n      try {\n        if (!req.user) {\n          throw new AppError('Authentication required', 401);\n        }\n\n        // Super admin has all permissions\n        const userRoles = req.user.roles || (req.user.role ? [req.user.role] : []);\n        if (userRoles.includes('super_admin')) {\n          return next();\n        }\n\n        // Check if user has any of the required permissions",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/auth.ts",
        "start": 139,
        "end": 152,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1062
        },
        "endLoc": {
          "line": 152,
          "column": 53,
          "position": 1206
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/middleware/auth.ts",
        "start": 110,
        "end": 123,
        "startLoc": {
          "line": 110,
          "column": 11,
          "position": 813
        },
        "endLoc": {
          "line": 123,
          "column": 45,
          "position": 957
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "export const NODE_TYPES = {\n  // Core node types\n  TRIGGER: 'trigger',\n  ACTION: 'action',\n  CONDITION: 'condition',\n  TRANSFORM: 'transform',\n\n  // AI/ML nodes\n  AI_AGENT: 'ai-agent',\n  EMBEDDING: 'embedding',\n  VECTOR_STORE: 'vector-store',\n\n  // Communication nodes\n  GMAIL_TRIGGER: 'gmail-trigger',\n  GMAIL_SEND: 'gmail-send',\n  SLACK_SEND: 'slack-send',\n  WEBHOOK: 'webhook',\n\n  // Data nodes\n  DATABASE: 'database',\n  FILE: 'file',\n  TRANSFORM_DATA: 'transform-data',\n\n  // Flow control\n  DELAY: 'delay',\n  LOOP: 'loop',\n  BRANCH: 'branch',\n} as const;\n\nexport const AI_PROVIDERS = {\n  OPENAI: 'openai',\n  ANTHROPIC: 'anthropic',\n  GOOGLE: 'google',\n  OLLAMA: 'ollama',\n}",
      "tokens": 0,
      "firstFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/backend/src/constants/nodeTypes.ts",
        "start": 5,
        "end": 39,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 197
        }
      },
      "secondFile": {
        "name": "/home/margon/Reporunner/reporunner/packages/shared/src/constants/index.ts",
        "start": 628,
        "end": 662,
        "startLoc": {
          "line": 628,
          "column": 1,
          "position": 3542
        },
        "endLoc": {
          "line": 662,
          "column": 8,
          "position": 3737
        }
      }
    }
  ]
}