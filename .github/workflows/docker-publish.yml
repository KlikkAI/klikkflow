name: Publish Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}
  DOCKERHUB_IMAGE_PREFIX: klikkflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        include:
          - image: frontend
            dockerfile: Dockerfile.frontend
            context: .
          - image: backend
            dockerfile: Dockerfile.backend
            context: .
          - image: worker
            dockerfile: Dockerfile.worker
            context: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.18.1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (multi-registry)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_IMAGE_PREFIX }}/${{ matrix.image }}
            ${{ env.DOCKERHUB_IMAGE_PREFIX }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push to both registries
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Generate artifact attestation (GHCR)
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

  # Summary job to report all image URLs
  publish-summary:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Create summary
        run: |
          echo "## 🐳 Published Docker Images" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Images have been published to **Docker Hub** (public) and **GitHub Container Registry** (backup):" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Docker Hub (Recommended for Public Use)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Image | Pull Command |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | \`docker pull ${{ env.DOCKERHUB_IMAGE_PREFIX }}/frontend:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | \`docker pull ${{ env.DOCKERHUB_IMAGE_PREFIX }}/backend:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Worker | \`docker pull ${{ env.DOCKERHUB_IMAGE_PREFIX }}/worker:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔐 GitHub Container Registry (Private/Backup)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Image | Pull Command |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | \`docker pull ${{ env.GHCR_IMAGE_PREFIX }}/frontend:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | \`docker pull ${{ env.GHCR_IMAGE_PREFIX }}/backend:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Worker | \`docker pull ${{ env.GHCR_IMAGE_PREFIX }}/worker:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Quick Start" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "curl -fsSL https://raw.githubusercontent.com/KlikkAI/klikkflow/main/scripts/install.sh | sh" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
