# ============================================
# Nginx Configuration for Reporunner Frontend
# Optimized for React SPA with Vite
# ============================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Performance tuning
worker_rlimit_nofile 8192;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ==========================================
    # Logging
    # ==========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # ==========================================
    # Performance Settings
    # ==========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # File upload limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # ==========================================
    # Gzip Compression
    # ==========================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon;
    gzip_min_length 256;
    gzip_disable "msie6";

    # ==========================================
    # Brotli Compression (if available)
    # ==========================================
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript;

    # ==========================================
    # Main Server Block
    # ==========================================
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # CSP for enhanced security (adjust based on your needs)
        # add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # ==========================================
        # Health Check Endpoint
        # ==========================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ==========================================
        # Static Assets (Aggressive Caching)
        # ==========================================
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;

            # Enable CORS for fonts and assets if needed
            add_header Access-Control-Allow-Origin "*";
        }

        # ==========================================
        # Service Worker (No Cache)
        # ==========================================
        location ~* (service-worker\.js|sw\.js)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # ==========================================
        # SPA Routing - Serve index.html for all routes
        # ==========================================
        location / {
            try_files $uri $uri/ /index.html;

            # No cache for index.html
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
            expires -1;
        }

        # ==========================================
        # API Proxy (Optional - if you want to proxy API through frontend)
        # ==========================================
        # location /api {
        #     proxy_pass http://backend:3001;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_read_timeout 90;
        # }

        # ==========================================
        # Deny Access to Hidden Files
        # ==========================================
        location ~ /\.(?!well-known) {
            deny all;
        }

        # ==========================================
        # Error Pages
        # ==========================================
        error_page 404 /index.html;

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
