{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "klikkflow.fullname" . }}-migration
  labels:
    {{- include "klikkflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "klikkflow.fullname" . }}-migration
      labels:
        {{- include "klikkflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- include "klikkflow.podSecurityContext" . | nindent 8 }}
      initContainers:
        - name: wait-for-postgresql
          image: postgres:16-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h {{ include "klikkflow.fullname" . }}-postgresql -p 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
        - name: wait-for-mongodb
          image: mongo:7.0
          command:
            - sh
            - -c
            - |
              until mongosh --host {{ include "klikkflow.fullname" . }}-mongodb --port 27017 --eval "db.adminCommand('ping')"; do
                echo "Waiting for MongoDB..."
                sleep 2
              done
      containers:
        - name: migration
          securityContext:
            {{- include "klikkflow.containerSecurityContext" . | nindent 12 }}
          image: {{ include "klikkflow.image" (dict "Chart" .Chart "Values" .Values "repository" .Values.migration.image.repository "tag" .Values.migration.image.tag) }}
          imagePullPolicy: {{ .Values.klikkflow.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              echo "Running database migrations..."
              npm run migrate:up
              echo "Migrations completed successfully"
          env:
            - name: NODE_ENV
              value: {{ .Values.klikkflow.env.NODE_ENV }}
            - name: DATABASE_URL
              value: {{ include "klikkflow.postgresql.connectionString" . }}
            - name: MONGODB_URI
              value: {{ include "klikkflow.mongodb.connectionString" . }}
            - name: REDIS_URL
              value: {{ include "klikkflow.redis.connectionString" . }}
          resources:
            {{- toYaml .Values.migration.resources | nindent 12 }}
  backoffLimit: 3
{{- end }}