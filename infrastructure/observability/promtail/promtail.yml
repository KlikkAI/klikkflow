# Promtail Configuration
# Log shipping agent for Loki

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Application logs from files
  - job_name: klikkflow-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: klikkflow-backend
          environment: production
          __path__: /var/log/klikkflow/backend*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            service: service
            trace_id: trace_id
            span_id: span_id
      - labels:
          level:
          service:
          trace_id:
          span_id:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  - job_name: klikkflow-worker
    static_configs:
      - targets:
          - localhost
        labels:
          job: klikkflow-worker
          environment: production
          __path__: /var/log/klikkflow/worker*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            service: service
            workflow_id: workflow_id
            execution_id: execution_id
      - labels:
          level:
          service:
          workflow_id:
          execution_id:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # Docker container logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*.log
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      - json:
          source: log
          expressions:
            level: level
            msg: msg
            service: service
      - labels:
          stream:
          level:
          service:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: msg

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+)(\[(?P<pid>\d+)\])?\:\s+(?P<message>.*)$'
      - labels:
          hostname:
          service:
          pid:
      - timestamp:
          source: timestamp
          format: "Jan _2 15:04:05"
      - output:
          source: message

  - job_name: auth-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: auth
          __path__: /var/log/auth.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+)(\[(?P<pid>\d+)\])?\:\s+(?P<message>.*)$'
      - labels:
          hostname:
          service:
          pid:
      - timestamp:
          source: timestamp
          format: "Jan _2 15:04:05"

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+)\s+-\s+(?P<remote_user>\S+)\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<method>\S+)\s+(?P<uri>\S+)\s+(?P<protocol>\S+)"\s+(?P<status>\d+)\s+(?P<body_bytes_sent>\d+)\s+"(?P<http_referer>[^"]*)"\s+"(?P<http_user_agent>[^"]*)".*$'
      - labels:
          method:
          status:
          remote_addr:
      - timestamp:
          source: time_local
          format: "02/Jan/2006:15:04:05 -0700"

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2})\s+\[(?P<level>\w+)\]\s+(?P<pid>\d+)#(?P<tid>\d+):\s+(?P<message>.*)$'
      - labels:
          level:
          pid:
          tid:
      - timestamp:
          source: timestamp
          format: "2006/01/02 15:04:05"

  # MongoDB logs
  - job_name: mongodb
    static_configs:
      - targets:
          - localhost
        labels:
          job: mongodb
          __path__: /var/log/mongodb/mongod.log
    pipeline_stages:
      - json:
          expressions:
            t: t.$date
            s: s
            c: c
            id: id
            ctx: ctx
            msg: msg
            attr: attr
      - labels:
          severity: s
          component: c
          context: ctx
      - timestamp:
          source: t
          format: RFC3339

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          __path__: /var/log/redis/redis-server.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+)\s+(?P<timestamp>\d{2}\s+\w+\s+\d{4}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?P<level>[*#-])\s+(?P<message>.*)$'
      - labels:
          pid:
          role:
          level:
      - timestamp:
          source: timestamp
          format: "02 Jan 2006 15:04:05.000"

  # PostgreSQL logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          __path__: /var/log/postgresql/postgresql-*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3}\s+\w+)\s+\[(?P<pid>\d+)\]\s+(?P<level>\w+):\s+(?P<message>.*)$'
      - labels:
          pid:
          level:
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000 MST"