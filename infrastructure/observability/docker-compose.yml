version: '3.8'

services:
  # Jaeger - Complete distributed tracing solution
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: klikkflow-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
      - "6831:6831/udp"  # Jaeger agent UDP
      - "6832:6832/udp"  # Jaeger agent UDP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger_data:/badger
    networks:
      - observability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.klikkflow.local`)"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  # Tempo - High-performance distributed tracing backend
  tempo:
    image: grafana/tempo:2.3.0
    container_name: klikkflow-tempo
    restart: unless-stopped
    ports:
      - "3200:3200"   # Tempo HTTP
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "9095:9095"   # Tempo gRPC
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml
      - tempo_data:/var/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - observability
    depends_on:
      - minio

  # Zipkin - Distributed tracing (alternative/additional)
  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: klikkflow-zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
    networks:
      - observability
    depends_on:
      - elasticsearch
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zipkin.rule=Host(`zipkin.klikkflow.local`)"
      - "traefik.http.services.zipkin.loadbalancer.server.port=9411"

  # OpenTelemetry Collector - Central telemetry data collection
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.89.0
    container_name: klikkflow-otel-collector
    restart: unless-stopped
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
      - "24224:24224" # fluentforward receiver
      - "9464:9464"   # Prometheus receiver
    volumes:
      - ./otel-collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yaml
    command: ["--config=/etc/otelcol-contrib/otel-collector.yaml"]
    networks:
      - observability
    depends_on:
      - jaeger
      - tempo
      - elasticsearch

  # Elasticsearch - For storing traces and logs
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: klikkflow-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - observability
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Kibana - Elasticsearch data visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: klikkflow-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - observability
    depends_on:
      - elasticsearch
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`kibana.klikkflow.local`)"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.0
    container_name: klikkflow-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - observability

  # Promtail - Log shipping agent
  promtail:
    image: grafana/promtail:2.9.0
    container_name: klikkflow-promtail
    restart: unless-stopped
    volumes:
      - ./promtail/promtail.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - observability
    depends_on:
      - loki

  # Vector - High-performance log router
  vector:
    image: timberio/vector:0.34.0-alpine
    container_name: klikkflow-vector
    restart: unless-stopped
    ports:
      - "8686:8686"   # Vector API
      - "9598:9598"   # Vector metrics
    volumes:
      - ./vector/vector.toml:/etc/vector/vector.toml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - observability

  # MinIO - S3-compatible storage for Tempo
  minio:
    image: minio/minio:RELEASE.2023-11-01T18-37-25Z
    container_name: klikkflow-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - observability

  # SigNoz - Complete observability platform
  signoz:
    image: signoz/signoz:0.34.0
    container_name: klikkflow-signoz
    restart: unless-stopped
    ports:
      - "3301:3301"   # SigNoz UI
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=signoz
    volumes:
      - signoz_data:/var/lib/signoz
    networks:
      - observability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.signoz.rule=Host(`signoz.klikkflow.local`)"
      - "traefik.http.services.signoz.loadbalancer.server.port=3301"

  # OpenTelemetry Demo App (for testing)
  otel-demo:
    image: otel/opentelemetry-demo:1.5.0
    container_name: klikkflow-otel-demo
    restart: unless-stopped
    ports:
      - "8080:8080"   # Demo frontend
      - "8090:8090"   # Demo backend
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=otel-demo
    networks:
      - observability
    depends_on:
      - otel-collector

  # Fluent Bit - Lightweight log processor and forwarder
  fluent-bit:
    image: fluent/fluent-bit:2.2.0
    container_name: klikkflow-fluent-bit
    restart: unless-stopped
    ports:
      - "2020:2020"   # HTTP server
      - "24224:24224" # Forward protocol
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - observability
    depends_on:
      - loki
      - elasticsearch

  # Grafana for observability (separate from monitoring)
  grafana-observability:
    image: grafana/grafana:10.2.0
    container_name: klikkflow-grafana-observability
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_INSTALL_PLUGINS=grafana-trace-panel
    volumes:
      - grafana_observability_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboard-configs:/var/lib/grafana/dashboards
    networks:
      - observability
    depends_on:
      - tempo
      - loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-obs.rule=Host(`observability.klikkflow.local`)"
      - "traefik.http.services.grafana-obs.loadbalancer.server.port=3000"

volumes:
  jaeger_data:
    driver: local
  tempo_data:
    driver: local
  elasticsearch_data:
    driver: local
  loki_data:
    driver: local
  minio_data:
    driver: local
  signoz_data:
    driver: local
  grafana_observability_data:
    driver: local

networks:
  observability:
    driver: bridge
    name: klikkflow-observability