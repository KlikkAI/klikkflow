# Development Dockerfile for Reporunner
# Optimized for development with hot reload and debugging
# Updated for 12-package monorepo structure

FROM node:20-alpine

# Install pnpm globally
RUN npm install -g pnpm@10.18.1

# Install development tools
RUN apk add --no-cache \
    git \
    curl \
    bash \
    vim \
    dumb-init

# Create app directory
WORKDIR /app

# Copy workspace configuration first
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Copy all package.json files for dependency installation
# Main packages
COPY packages/backend/package.json ./packages/backend/
COPY packages/frontend/package.json ./packages/frontend/
COPY packages/shared/package.json ./packages/shared/

# Copy @reporunner scoped packages
COPY packages/@reporunner/ai/package.json ./packages/@reporunner/ai/
COPY packages/@reporunner/auth/package.json ./packages/@reporunner/auth/
COPY packages/@reporunner/cli/package.json ./packages/@reporunner/cli/
COPY packages/@reporunner/core/package.json ./packages/@reporunner/core/
COPY packages/@reporunner/enterprise/package.json ./packages/@reporunner/enterprise/
COPY packages/@reporunner/integrations/package.json ./packages/@reporunner/integrations/
COPY packages/@reporunner/platform/package.json ./packages/@reporunner/platform/
COPY packages/@reporunner/services/package.json ./packages/@reporunner/services/
COPY packages/@reporunner/validation/package.json ./packages/@reporunner/validation/
COPY packages/@reporunner/workflow/package.json ./packages/@reporunner/workflow/

# Install all dependencies (including dev dependencies)
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Create non-root user for development
RUN addgroup -g 1001 -S nodejs && \
    adduser -S reporunner -u 1001 -G nodejs

# Change ownership of the app directory
RUN chown -R reporunner:nodejs /app

# Switch to non-root user
USER reporunner

# Expose ports for frontend, backend, and debugging
EXPOSE 3000 3001 5173 9229

# Health check for development
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start development server with hot reload
ENTRYPOINT ["dumb-init", "--"]
CMD ["pnpm", "dev"]
