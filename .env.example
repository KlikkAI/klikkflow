# =============================================================================
# REPORUNNER ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and update with your values
# Last Updated: October 19, 2025
#
# Docker Profiles:
#   docker-compose up                      # Core services only (6 containers)
#   docker-compose --profile monitoring up  # + Monitoring (12 containers)
#   docker-compose --profile full up       # Everything (22 containers)
#   docker-compose --profile ha up         # + High Availability
#   docker-compose --profile logging up    # + ELK Stack
#   docker-compose --profile dev up        # + Dev Tools
# =============================================================================

# Environment
NODE_ENV=development
PORT=3000
HOST=localhost

# Application Ports (Docker)
FRONTEND_PORT=3000
BACKEND_PORT=3001
BACKEND_2_PORT=3002

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB (Primary Database)
MONGODB_URI=mongodb://localhost:27017/reporunner
MONGODB_DB_NAME=reporunner
MONGO_PORT=27017
MONGO_ROOT_USER=admin
MONGO_ROOT_PASSWORD=changeme

# PostgreSQL with pgvector (AI/Vector Operations)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=reporunner_ai
POSTGRES_USER=reporunner
POSTGRES_PASSWORD=your_postgres_password
POSTGRES_SSL=false
POSTGRES_URL=postgres://reporunner:your_postgres_password@localhost:5432/reporunner_ai

# Redis (Caching & Queues)
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================

# JWT Configuration
JWT_SECRET=your_jwt_secret_here_minimum_32_chars_long_for_security
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# Encryption
CREDENTIAL_ENCRYPTION_KEY=your_encryption_key_32_chars_long
SESSION_SECRET=your_session_secret_here

# CORS
CORS_ORIGIN=http://localhost:3000,http://localhost:5173
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# AI & EXTERNAL SERVICES
# =============================================================================

# OpenAI
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000

# Anthropic Claude
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# Google Services
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
GOOGLE_REDIRECT_URI=http://localhost:3000/auth/google/callback

# =============================================================================
# FILE STORAGE & UPLOADS
# =============================================================================

# Local Storage
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# AWS S3 (Optional)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=reporunner-uploads

# MinIO (S3-compatible, for development)
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET=reporunner

# =============================================================================
# EMAIL & NOTIFICATIONS
# =============================================================================

# SMTP Configuration
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=
SMTP_PASS=
SMTP_FROM=noreply@reporunner.dev

# SendGrid (Production)
SENDGRID_API_KEY=your_sendgrid_api_key
SENDGRID_FROM_EMAIL=noreply@yourdomain.com

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Logging
LOG_LEVEL=debug
LOG_FORMAT=combined
LOG_FILE=./logs/app.log

# Metrics & Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# Prometheus (Monitoring Profile)
PROMETHEUS_PORT=9090

# Grafana (Monitoring Profile)
GRAFANA_PORT=3030
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123

# Alertmanager (Monitoring Profile)
ALERTMANAGER_PORT=9093

# Elasticsearch (Logging Profile)
ELASTICSEARCH_PORT=9200

# Kibana (Logging Profile)
KIBANA_PORT=5601

# Sentry (Error Tracking)
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development

# =============================================================================
# DEVELOPMENT & DEBUGGING
# =============================================================================

# Debug
DEBUG=reporunner:*
VERBOSE_LOGGING=true

# Hot Reload
CHOKIDAR_USEPOLLING=false
FAST_REFRESH=true

# API Configuration
API_URL=http://localhost:3000/api
VITE_API_URL=http://localhost:3000/api
FRONTEND_URL=http://localhost:5173

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Features
ENABLE_AI_FEATURES=true
ENABLE_REAL_TIME=true
ENABLE_ANALYTICS=false
ENABLE_ENTERPRISE_FEATURES=false

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# GitHub
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_WEBHOOK_SECRET=your_github_webhook_secret

# Slack
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your_slack_signing_secret

# Discord
DISCORD_BOT_TOKEN=your_discord_bot_token
DISCORD_CLIENT_ID=your_discord_client_id

# =============================================================================
# DOCKER: HIGH AVAILABILITY PROFILE
# =============================================================================

# Load Balancer Ports
LB_PORT=80
LB_SSL_PORT=443

# Backup Service
BACKUP_SCHEDULE=0 2 * * *
BACKUP_S3_BUCKET=reporunner-backups
BACKUP_S3_ACCESS_KEY=your_backup_access_key
BACKUP_S3_SECRET_KEY=your_backup_secret_key

# =============================================================================
# DOCKER: DEVELOPER TOOLS PROFILE
# =============================================================================

# Mailhog (Email Testing)
MAILHOG_SMTP_PORT=1025
MAILHOG_WEB_PORT=8025

# Adminer (Database Management)
ADMINER_PORT=8080

# Redis Commander (Redis GUI)
REDIS_COMMANDER_PORT=8081

# =============================================================================
# WORKER CONFIGURATION
# =============================================================================

# Worker Mode
WORKER_MODE=true
WORKER_CONCURRENCY=5

# =============================================================================
# PRODUCTION SECURITY CHECKLIST
# =============================================================================
#
# Before deploying to production:
#
# 1. SECRETS:
#    ✅ Generate strong JWT_SECRET (min 32 chars): openssl rand -base64 32
#    ✅ Generate strong CREDENTIAL_ENCRYPTION_KEY (32 chars)
#    ✅ Change all default passwords (databases, Grafana, etc.)
#    ✅ Use secrets management (AWS Secrets Manager, HashiCorp Vault)
#
# 2. DATABASES:
#    ✅ Enable SSL/TLS for all database connections
#    ✅ Use managed services (AWS RDS, MongoDB Atlas, ElastiCache)
#    ✅ Configure automated backups with 30-day retention
#    ✅ Enable database encryption at rest
#
# 3. NETWORKING:
#    ✅ Configure firewall rules (allow only required ports)
#    ✅ Use VPC with private subnets for databases
#    ✅ Enable DDoS protection (CloudFlare, AWS Shield)
#    ✅ Set up SSL/TLS certificates (Let's Encrypt, AWS ACM)
#
# 4. MONITORING:
#    ✅ Configure Prometheus alerting rules
#    ✅ Set up Grafana dashboards and alerts
#    ✅ Enable ELK stack for centralized logging
#    ✅ Configure uptime monitoring (UptimeRobot, Pingdom)
#
# 5. COMPLIANCE:
#    ✅ Enable audit logging for all API requests
#    ✅ Configure data retention policies
#    ✅ Set up regular security scans
#    ✅ Document disaster recovery procedures
#
# =============================================================================
